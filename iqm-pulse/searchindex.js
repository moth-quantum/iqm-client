Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.load_yaml", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.load_yaml.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_GateImplementation", "PRX_HdDrag", "PRX_HdDragSX", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.load_yaml", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 52, 53, 55, 58, 69, 111, 112, 114, 115, 120, 121, 126, 142, 144, 149, 158, 159, 160, 186, 187, 192, 199, 203, 206, 207, 208, 209, 211, 212, 213, 214], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 174, 176, 178, 197, 207, 208, 210, 212, 213, 214], "instruct": [1, 4, 6, 16, 20, 31, 32, 35, 49, 53, 55, 69, 70, 71, 73, 75, 76, 77, 79, 80, 89, 92, 99, 103, 104, 111, 114, 115, 117, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 176, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 197, 198, 201, 203, 205, 206, 207, 210, 212, 214], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 75, 76, 77, 79, 80, 82, 89, 92, 99, 101, 103, 104, 111, 115, 144, 156, 157, 159, 161, 176, 183, 188, 189, 190, 191, 192, 198, 200, 207, 209, 210, 212], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 73, 77, 89, 94, 95, 98, 99, 101, 104, 111, 149, 175, 176, 177, 179, 197, 207, 208, 209, 210, 213, 214], "comput": [1, 5, 6, 16, 31, 69, 73, 98, 108, 111, 115, 126, 127, 130, 131, 133, 134, 135, 136, 147, 149, 160, 161, 176, 180, 184, 185, 192, 197, 207, 208, 209, 210, 211, 214], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 71, 78, 95, 100, 106, 108, 111, 112, 122, 126, 132, 142, 157, 158, 163, 164, 166, 173, 175, 180, 188, 193, 198, 207, 209], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 71, 72, 74, 78, 83, 84, 85, 86, 87, 88, 90, 91, 95, 100, 102, 106, 108, 111, 112, 122, 132, 142, 157, 158, 160, 163, 164, 166, 175, 180, 188, 192, 193, 194, 198, 207], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 188, 189, 190, 191, 192, 193, 198, 199, 207, 208, 209, 211, 212, 214], "subpackag": [1, 33, 111, 163], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 101, 102, 103, 104, 107, 109, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 132, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 189, 190, 191, 192, 199, 208, 209, 210], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 131, 132, 134, 135, 136, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 167, 168, 169, 170, 171, 172, 173, 174, 176, 183, 189, 190, 191, 192, 199, 207, 211, 212], "util": [2, 6, 18, 20, 207, 209], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 71, 73, 78, 92, 98, 99, 100, 101, 108, 112, 119, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 164, 174, 175, 176, 180, 192, 193, 198, 207, 209], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 101, 104, 134, 146, 207, 209], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 73, 92, 98, 99, 107, 109, 159, 169, 176, 184, 185, 190, 192, 203, 206, 207, 208, 209, 211, 212, 213, 214], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 188, 189, 190, 191, 192, 193, 198, 199, 207, 208, 209, 213, 214], "A": [3, 6, 11, 14, 37, 69, 127, 144, 167, 176, 180, 186, 187, 189, 192, 195, 207, 208, 209, 210, 211, 212, 213, 214], "b": [3, 14, 55, 69, 132, 180, 186, 187, 192, 211], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 115, 117, 126, 160, 176, 207, 214], "merg": [3, 6, 18, 184], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 82, 127, 131, 176, 184, 192, 207, 208, 209, 212, 214], "dictionari": [3, 58, 133, 209], "recurs": [3, 6, 192, 208, 214], "leav": 3, "origin": [3, 11, 15, 20, 160, 161, 207, 211], "unchang": [3, 160], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 183, 184, 185, 186, 187, 189, 192, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 214], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 73, 81, 82, 94, 99, 104, 119, 123, 134, 160, 167, 169, 173, 174, 176, 177, 184, 185, 186, 187, 189, 192, 194, 206, 207, 209], "anoth": [3, 6, 35, 49, 73, 75, 110, 176, 186, 187, 207, 209], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 115, 117, 121, 123, 124, 125, 126, 134, 135, 136, 160, 176, 183, 184, 185, 207], "whether": [3, 6, 13, 20, 77, 94, 115, 121, 126, 184, 185, 209, 211, 214], "also": [3, 6, 11, 17, 18, 19, 20, 31, 35, 48, 49, 55, 73, 76, 83, 84, 92, 98, 99, 101, 107, 109, 114, 160, 176, 180, 184, 185, 187, 192, 197, 207, 209, 211, 212], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 102, 103, 149, 160, 161, 176, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 204, 206, 207, 209], "empti": [3, 6, 11, 18, 63, 69, 70, 153, 160, 176, 207, 209], "size": [3, 13, 209], "valu": [3, 6, 11, 13, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 102, 126, 127, 134, 135, 136, 144, 148, 150, 152, 153, 156, 167, 172, 179, 190, 191, 207, 208, 209, 214], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 73, 76, 82, 83, 84, 92, 98, 107, 109, 115, 120, 123, 126, 127, 130, 131, 133, 134, 143, 147, 150, 153, 160, 161, 165, 166, 167, 169, 172, 173, 174, 183, 185, 189, 192, 194, 203, 207, 208, 209, 211, 212, 214], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 73, 76, 77, 79, 81, 82, 83, 84, 89, 92, 93, 94, 98, 99, 101, 104, 105, 107, 109, 110, 114, 115, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 152, 160, 161, 165, 167, 169, 170, 171, 172, 173, 174, 176, 178, 179, 183, 184, 185, 186, 187, 189, 192, 194, 195, 196, 197, 204, 206, 207, 209], "copi": [3, 6, 11, 76, 149, 160, 161, 176, 211], "content": [3, 6, 7, 11, 115, 149, 160, 161, 176, 183, 191, 192, 194, 207, 208, 209, 211, 214], "take": [3, 7, 11, 20, 37, 49, 160, 173, 174, 176, 207, 209, 212, 214], "preced": [3, 34, 35, 55, 104, 197], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 114, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 149, 152, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 204, 206, 207, 209, 211], "tool": [4, 180, 183, 210], "build": [4, 6, 7, 18, 20, 69, 70, 76, 81, 82, 83, 84, 189, 192, 209], "class": [4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 188, 189, 190, 191, 192, 198, 199, 207, 210, 211], "inherit": [4, 10, 16, 18, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 73, 78, 81, 82, 83, 84, 89, 95, 98, 99, 100, 101, 104, 106, 108, 112, 122, 132, 142, 158, 166, 175, 180, 188, 198, 207, 209], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 77, 207], "schedulebuild": [4, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 192, 207, 208, 209, 210], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 207, 208, 209, 212, 214], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 101, 102, 103, 104, 107, 109, 114, 120, 147, 160, 176, 177, 178, 185, 189, 190, 191, 192, 207, 208, 209, 211, 214], "locu": [5, 6, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 176, 178, 189, 192, 207, 208, 209, 212, 214], "arg": [5, 6, 11, 20, 31, 35, 48, 49, 73, 98, 99, 101, 209], "factori": [5, 6, 115, 117, 147, 176, 189, 192], "implement": [5, 6, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 101, 102, 103, 104, 107, 109, 123, 126, 160, 176, 178, 179, 197, 207, 208, 210, 212, 213, 214], "object": [5, 6, 11, 17, 32, 113, 114, 115, 131, 143, 149, 160, 161, 176, 183, 192, 199, 207, 209, 211], "specif": [5, 6, 18, 20, 31, 33, 34, 35, 48, 49, 53, 73, 92, 98, 99, 101, 104, 114, 126, 160, 174, 176, 199, 203, 207, 208, 209, 211, 214], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 73, 89, 94, 95, 97, 98, 99, 101, 104, 175, 176, 177, 178, 179, 192, 199, 207, 208, 209, 210, 212, 214], "appli": [5, 6, 37, 49, 55, 71, 73, 75, 76, 92, 99, 149, 176, 209, 211, 212, 214], "part": [5, 6, 20, 79, 153, 168, 170, 171, 172, 173, 176, 183, 192, 207, 208, 209, 211, 212, 214], "qpu": [5, 6, 20, 21, 35, 63, 156, 176, 184, 188, 192, 207, 208, 209, 214], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 99, 100, 101, 104, 106, 108, 123, 134, 141, 167, 169, 173, 174, 176, 180, 184, 185, 186, 187, 192, 207, 209, 213], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 101, 104, 123, 127, 134, 135, 136, 137, 138, 139, 140, 141, 167, 169, 173, 174, 184, 185, 192, 207, 209, 213], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 77, 99, 104, 176, 207, 208, 209, 210, 212, 214], "attribut": [5, 6, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 101, 102, 103, 104, 107, 109, 114, 115, 116, 117, 118, 123, 124, 125, 126, 132, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 189, 190, 191, 192, 199, 207, 209, 211, 212], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 167, 168, 169, 170, 171, 172, 173, 174, 176, 183, 189, 190, 191, 192, 199, 207, 209, 214], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 101, 102, 103, 104, 107, 109, 114, 115, 119, 123, 134, 143, 145, 146, 147, 153, 154, 160, 165, 167, 169, 173, 174, 176, 177, 178, 184, 185, 186, 187, 189, 192, 194, 206, 209], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 63, 69, 70, 99, 115, 117, 119, 131, 141, 146, 147, 148, 149, 150, 151, 152, 160, 176, 178, 189, 192, 195, 197, 199, 209], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 73, 98, 99, 101, 126, 150, 159, 160, 174, 176, 184, 185, 189, 192, 194, 207, 208, 209, 211, 214], "inform": [5, 6, 32, 77, 176, 207, 208, 209, 211, 212, 214], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 72, 73, 74, 80, 98, 99, 102, 103, 115, 120, 123, 124, 125, 134, 135, 136, 150, 156, 174, 176, 184, 185, 189, 192, 207, 208, 209, 214], "qubit": [5, 6, 11, 12, 13, 14, 15, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 82, 89, 92, 95, 99, 100, 101, 104, 106, 108, 174, 176, 184, 185, 207, 208, 209, 212, 213, 214], "reson": [5, 71, 72, 73, 74, 75, 76, 101, 109, 115, 184, 185, 197, 207, 208, 213, 214], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 73, 98, 99, 104, 176, 184, 185, 207, 208, 209, 211, 212, 214], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 82, 99, 101, 104, 126, 176, 207, 209, 214], "valid": [5, 6, 9, 71, 77, 146, 148, 149, 152, 160, 178, 179, 192, 199, 207, 214], "op_tabl": [5, 6, 9, 11, 18, 38, 39, 98, 107, 109, 209], "against": [5, 6, 153, 179, 211, 214], "tabl": [5, 7, 9, 11, 12, 13, 114, 177, 207], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 73, 110, 122, 132, 166, 176, 177, 207, 208, 209, 211], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 101, 102, 103, 104, 107, 109, 175, 177, 178, 207, 210, 214], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 77, 99, 114, 127, 130, 131, 133, 139, 146, 148, 149, 152, 160, 176, 189, 192, 203, 207, 208, 209, 211, 214], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 94, 104, 115, 126, 131, 150, 160, 184, 207, 208, 209, 212, 214], "rais": [5, 6, 9, 61, 77, 94, 115, 146, 148, 149, 152, 167, 176, 178, 179, 194, 195, 200, 201, 202, 208], "valueerror": [5, 6, 9, 77, 94, 115, 146, 148, 149, 152, 176, 178, 179, 195], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 106, 108, 115, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 149, 150, 152, 153, 160, 161, 162, 167, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 185, 186, 187, 192, 197, 203, 206, 207, 208, 209, 210, 211, 212, 214], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 99, 102, 103, 104, 107, 109, 123, 134, 167, 169, 173, 174, 176, 178, 179, 207, 208, 214], "chip_topologi": [6, 20, 63, 99, 119, 120, 209, 214], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 98, 99, 101, 104, 113, 114, 115, 116, 117, 118, 144, 147, 148, 149, 155, 159, 160, 161, 180, 184, 185, 186, 187, 189, 190, 192, 203, 204, 206, 207, 208, 209, 212, 214], "component_channel": 6, "out": [6, 11, 81, 83, 207, 208, 209, 211, 212], "individu": [6, 54, 176, 208, 211], "encapsul": [6, 20, 33, 77, 214], "known": [6, 7, 61, 94, 160, 174, 176, 177, 179, 209], "op": [6, 7, 12, 13, 16, 18, 20, 94, 176, 177, 178, 179], "them": [6, 11, 12, 70, 99, 104, 176, 192, 207, 209, 210, 214], "topologi": [6, 120, 214], "properti": [6, 11, 20, 71, 92, 112, 114, 115, 119, 120, 160, 161, 176, 183, 185, 186, 187, 207, 214], "quantumopt": [6, 11, 12, 13, 179, 207, 209], "opcalibrationdatatre": [6, 179], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 99, 102, 103, 104, 114, 123, 134, 143, 167, 169, 173, 174, 176, 178, 179, 199, 203, 206, 207, 208], "tree": [6, 8, 20, 120, 178, 179], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 89, 98, 99, 104, 119, 120, 209], "chip": [6, 11, 120, 207], "deriv": [6, 92, 123, 126, 132, 133, 134, 135, 136, 137, 138, 139, 141, 172, 174, 207, 209, 211], "chad": [6, 176], "channelproperti": [6, 20, 112, 117, 119, 121, 160, 185, 186, 187, 204, 206], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 69, 70, 89, 94, 98, 104, 114, 120, 123, 131, 133, 134, 146, 160, 167, 169, 173, 174, 176, 177, 185, 192, 195, 207, 209], "configur": [6, 7, 113, 116, 118, 203, 206, 211], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 75, 76, 79, 92, 98, 101, 104, 109, 115, 141, 147, 155, 197, 207, 208, 209, 212], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 72, 73, 74, 147, 176, 207, 209], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 98, 143, 151, 160, 189, 207, 212], "respons": [6, 115, 118, 209, 211, 212], "_cach": 6, "gateimplement": [6, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 71, 73, 78, 89, 94, 95, 98, 99, 100, 101, 104, 106, 108, 176, 178, 192, 207, 210, 212, 214], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 73, 98, 99, 101, 131, 160, 192, 207, 209], "The": [6, 11, 12, 17, 18, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 73, 75, 78, 79, 82, 92, 94, 95, 96, 98, 99, 100, 101, 104, 106, 107, 108, 109, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 148, 153, 155, 160, 165, 167, 169, 170, 171, 172, 173, 174, 176, 180, 184, 185, 186, 187, 192, 203, 205, 206, 207, 208, 209, 211, 212, 214], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 71, 73, 99, 101, 104, 114, 123, 134, 149, 150, 153, 160, 167, 169, 172, 173, 174, 176, 184, 185, 186, 187, 192, 203, 206, 207, 208, 209, 211, 212, 214], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 72, 73, 74, 75, 79, 80, 92, 102, 103, 121, 124, 125, 128, 129, 131, 135, 136, 137, 138, 139, 148, 153, 167, 169, 170, 171, 172, 173, 174, 185, 192, 203, 206, 207, 208, 209, 211, 212, 214], "structur": [6, 207], "composite_cach": 6, "compositeg": [6, 16, 17, 36, 37, 38, 39, 95, 98, 106, 107, 108, 109, 207, 209], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 73, 79, 82, 89, 92, 98, 99, 101, 104, 107, 109, 184, 189, 190, 191, 207, 209, 210, 212], "flush": [6, 17, 207], "whenev": [6, 17, 69, 207], "inject": [6, 207], "_channel_to_compon": 6, "self": [6, 11, 18, 19, 20, 38, 39, 48, 49, 69, 70, 83, 84, 92, 98, 99, 107, 109, 160, 176, 183, 192, 208, 209], "invert": 6, "algorithm": [6, 180, 184, 186, 190, 192, 207, 209, 214], "perform": [6, 49, 145, 153, 160, 211], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 52, 55, 58, 60, 63, 69, 70, 71, 73, 75, 79, 81, 82, 83, 84, 89, 92, 94, 96, 97, 98, 99, 101, 104, 114, 115, 123, 126, 131, 133, 134, 148, 150, 151, 153, 156, 160, 166, 167, 169, 170, 171, 172, 173, 174, 176, 180, 183, 184, 186, 187, 190, 192, 207, 208, 209, 211, 212, 214], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 72, 73, 74, 76, 79, 81, 82, 92, 96, 97, 98, 99, 101, 104, 107, 108, 109, 114, 115, 123, 126, 127, 131, 133, 134, 141, 144, 153, 155, 156, 159, 160, 165, 167, 169, 171, 173, 174, 176, 184, 185, 190, 192, 197, 203, 206, 207, 208, 209, 210, 211, 212, 213], "determin": [6, 32, 184, 192, 208, 211, 214], "block": [6, 35, 37, 49, 69, 70, 92, 98, 99, 115, 142, 156, 159, 182, 184, 185, 189, 192, 207, 208, 212, 214], "associ": [6, 11, 69, 99, 114, 115, 151, 153, 209, 211, 212], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 72, 73, 74, 80, 92, 98, 102, 103, 115, 160, 170, 171, 174, 176, 183, 192, 207, 208, 211, 212, 213, 214], "ar": [6, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 72, 73, 74, 78, 80, 82, 83, 84, 102, 103, 104, 108, 114, 115, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 138, 139, 141, 148, 150, 153, 160, 161, 167, 169, 172, 173, 174, 176, 179, 183, 184, 185, 186, 187, 190, 191, 192, 203, 206, 207, 208, 209, 210, 211, 212, 214], "includ": [6, 9, 17, 19, 69, 70, 73, 81, 82, 114, 126, 176, 192, 207, 208, 209, 211], "non": [6, 11, 18, 20, 63, 68, 69, 95, 99, 123, 126, 134, 167, 169, 173, 174, 195, 209, 211, 214], "certain": [6, 19, 48, 49, 83, 84, 115, 126, 209, 214], "virtual": [6, 37, 49, 73, 75, 76, 99, 104, 109, 115, 207, 212, 214], "do": [6, 9, 11, 32, 63, 104, 106, 115, 160, 166, 169, 184, 197, 207, 208, 209, 211, 214], "just": [6, 11, 17, 18, 31, 69, 82, 98, 176, 192, 207, 209], "themselv": [6, 70, 208, 209], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 99, 117, 143, 151, 185, 189, 207, 209], "_require_scheduling_in_second": 6, "requir": [6, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 73, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 99, 102, 103, 104, 115, 123, 134, 167, 169, 171, 173, 174, 176, 178, 179, 189, 197, 203, 206, 207, 208, 209, 211], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 99, 101, 104, 115, 123, 127, 131, 134, 160, 167, 169, 173, 174, 183, 185, 186, 187, 207, 209, 212, 214], "instead": [6, 20, 75, 156, 184, 207, 208, 209, 212, 214], "sampl": [6, 20, 32, 75, 115, 117, 118, 121, 123, 124, 125, 126, 134, 135, 136, 143, 144, 148, 149, 150, 154, 156, 160, 161, 167, 169, 170, 171, 172, 173, 174, 184, 185, 189, 203, 206, 208, 209, 210], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 73, 79, 82, 83, 84, 92, 98, 99, 101, 104, 107, 109, 114, 115, 123, 130, 134, 144, 146, 147, 149, 150, 153, 155, 159, 160, 165, 167, 169, 173, 174, 176, 180, 182, 186, 187, 192, 194, 197, 207, 208, 209, 212, 214], "happen": [6, 71, 75, 104, 156, 171, 180, 192, 208, 209], "reason": [6, 17, 82, 174, 192, 201, 208, 209, 211], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 148, 161, 167, 168, 172, 174, 176, 184, 190, 191, 192, 209, 211, 212, 213, 214], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 73, 76, 82, 89, 98, 104, 153, 160, 176, 185, 191, 192, 207, 209, 211, 212], "rate": [6, 32, 75, 115, 118, 121, 148, 149, 160, 184, 185, 203, 206, 209, 210], "uhfqa": [6, 115], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 71, 78, 82, 87, 88, 90, 91, 100, 101, 106, 107, 108, 109, 110, 115, 124, 125, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 167, 168, 169, 172, 173, 174, 184, 192, 209, 211, 212, 213, 214], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 73, 79, 92, 98, 99, 121, 127, 135, 136, 141, 150, 160, 166, 176, 179, 184, 185, 192, 197, 207, 208, 209, 211, 212, 214], "granular": [6, 55, 115, 121, 150, 160, 185, 199, 203, 206, 207, 208, 212], "some": [6, 17, 18, 53, 108, 123, 134, 166, 167, 169, 173, 174, 186, 187, 192, 207, 208, 209, 214], "mix": 6, "station": [6, 37, 77, 115, 120, 176, 207, 208], "ro": 6, "devic": [6, 212], "vendor": 6, "than": [6, 11, 99, 160, 176, 183, 186, 187, 203, 206, 207], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 73, 79, 92, 160, 200, 203, 206, 207, 212], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 93, 105, 110, 123, 127, 147, 160, 176, 177, 208, 209, 211, 212], "inject_calibr": [6, 207], "partial_calibr": 6, "new": [6, 11, 14, 17, 94, 160, 176, 184, 185, 186, 187, 189, 192, 207, 208, 209], "chang": [6, 17, 18, 20, 63, 104, 149, 155, 176, 183, 197, 209, 211, 212], "after": [6, 63, 82, 84, 86, 88, 91, 104, 117, 148, 156, 182, 183, 184, 197, 207, 212, 214], "initialis": [6, 19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99], "invalid": [6, 201], "gate_implement": [6, 17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 71, 78, 95, 100, 106, 108], "affect": [6, 11, 35, 69, 104, 160, 161, 176, 192, 207, 212], "loci": [6, 11, 24, 69, 99, 176, 209, 214], "factoriz": [6, 69, 98, 99, 176, 207], "its": [6, 7, 17, 18, 20, 33, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 72, 73, 74, 80, 102, 103, 120, 126, 149, 150, 160, 161, 170, 171, 176, 185, 186, 187, 190, 192, 207, 208, 209, 211, 214], "wa": [6, 37, 73, 76, 174, 207, 211, 212, 214], "must": [6, 9, 11, 12, 20, 37, 49, 63, 115, 121, 131, 141, 160, 161, 174, 176, 192, 207, 209, 211], "doe": [6, 11, 37, 49, 61, 69, 77, 99, 148, 150, 156, 176, 207, 208, 209, 211, 212, 214], "all": [6, 11, 12, 15, 19, 20, 27, 28, 29, 30, 31, 32, 35, 49, 55, 60, 69, 70, 71, 76, 81, 82, 92, 99, 104, 115, 120, 121, 123, 134, 146, 148, 149, 152, 155, 160, 161, 167, 169, 173, 174, 180, 184, 190, 203, 206, 207, 208, 209, 210, 211, 212, 214], "found": [6, 11, 18, 38, 39, 61, 160, 176], "actual": [6, 37, 55, 69, 124, 125, 135, 136, 167, 169, 170, 171, 172, 173, 174, 184, 203, 206, 207, 209, 212, 214], "previou": [6, 207, 212], "validate_calibr": 6, "check": [6, 13, 115, 203, 206, 207], "match": [6, 63, 141, 160, 161, 203, 205, 206, 207, 214], "someth": [6, 19, 69, 70, 115, 146, 148, 149, 152, 178, 179, 197], "wrong": [6, 178, 179, 207], "get_drive_channel": [6, 214], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 79, 80, 98, 101, 102, 103, 107, 109, 115, 121, 123, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 149, 160, 161, 165, 176, 185, 192, 194, 196, 203, 206, 208, 209, 214], "exist": [6, 18, 61, 94, 98, 107, 109, 160, 207, 208, 209, 214], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 83, 84, 85, 86, 87, 88, 90, 91, 110, 123, 130, 134, 166, 173, 192, 207, 208, 209, 211, 212], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 117, 207, 209], "belong": [6, 69, 207], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 96, 97, 98, 153, 207, 210, 214], "signal": [6, 16, 37, 69, 145, 153, 154, 170, 171, 173, 207, 210, 212, 213], "between": [6, 16, 53, 55, 69, 71, 73, 75, 77, 99, 146, 160, 172, 174, 180, 208, 209, 212], "sourc": [6, 73, 183, 207, 211, 212], "destin": [6, 212], "either": [6, 35, 104, 155, 192, 207, 208, 211], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 83, 84, 98, 107, 109, 160, 161, 183, 207, 208, 209, 211], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 207, 212], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 89, 98, 104, 114, 119, 120, 176, 183, 207, 209, 212, 214], "node": [6, 20], "receiv": [6, 153, 211, 212], "bit": [6, 37, 207, 212], "which": [6, 11, 15, 20, 35, 48, 69, 73, 79, 101, 104, 126, 127, 128, 129, 130, 131, 137, 138, 139, 160, 161, 168, 169, 173, 174, 176, 184, 192, 197, 207, 208, 209, 210, 211, 212, 214], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 99, 102, 103, 104, 108, 114, 115, 121, 123, 126, 127, 130, 131, 134, 141, 160, 167, 169, 173, 174, 189, 195, 207, 208, 209, 210, 211, 214], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 97, 98, 104, 115, 176, 185, 207, 208, 209, 210, 214], "result": [6, 11, 17, 37, 69, 70, 76, 98, 104, 131, 145, 151, 153, 160, 207, 208, 211, 214], "support": [6, 33, 37, 63, 69, 99, 172, 174, 195, 203, 206, 207, 208, 209, 211, 212], "fast": [6, 48, 69, 87, 88, 96, 97, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 153, 207, 210, 213, 214], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 20], "impl_nam": [6, 11, 18, 20, 94, 178, 207, 209], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 102, 103, 115, 176], "request": [6, 11, 18, 20, 55, 89, 116, 118, 207, 208, 214], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 70, 126, 155, 207], "neighbor": [6, 184, 185, 192], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71, 72, 73, 74, 99, 174, 176, 184, 185, 192, 207, 208, 209, 213, 214], "ad": [6, 11, 17, 69, 76, 114, 160, 180, 184, 185, 207, 209, 214], "separ": [6, 18, 20, 32, 98, 107, 109, 207, 208, 211, 214], "resolut": [6, 192, 214], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 73, 76, 78, 79, 82, 89, 92, 93, 101, 102, 104, 106, 147, 148, 155, 167, 168, 169, 173, 176, 197, 207, 208, 209, 214], "Will": [6, 55, 190], "iter": [6, 9, 11, 12, 20, 63, 77, 99, 121, 160, 161, 176, 189, 192, 214], "wait": [6, 35, 37, 55, 71, 75, 98, 99, 115, 142, 144, 159, 160, 182, 184, 207, 208, 212, 214], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 99, 101, 102, 103, 104, 115, 121, 123, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 160, 161, 167, 169, 170, 171, 172, 173, 174, 180, 183, 184, 185, 186, 187, 189, 192, 203, 206, 207, 208, 209, 212, 214], "round": [6, 55, 115, 121, 207, 212, 214], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 115, 117, 121, 126, 160, 176, 207, 209], "everi": [6, 20, 148, 203, 206, 207, 209, 214], "guarante": [6, 55, 208], "idl": [6, 99, 156, 160, 207], "cannot": [6, 17, 144, 160, 192, 207, 209, 211, 212], "replac": [6, 11, 20, 94, 144, 156, 207, 211], "dynam": [6, 156, 207], "decoupl": [6, 156, 207], "sequenc": [6, 9, 11, 12, 16, 21, 73, 144, 156, 157, 161, 165, 176, 183, 192, 197, 208, 210, 212, 214], "thei": [6, 11, 18, 19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 104, 108, 114, 115, 160, 161, 176, 192, 203, 206, 207, 208, 209, 212, 214], "treat": [6, 184, 192, 214], "remain": [6, 180, 183, 197, 211], "align": [6, 208, 212, 214], "time": [6, 11, 20, 37, 53, 55, 69, 70, 71, 73, 75, 80, 92, 99, 103, 104, 115, 117, 121, 127, 128, 129, 131, 137, 138, 139, 144, 149, 153, 159, 160, 161, 170, 171, 174, 180, 183, 184, 186, 187, 192, 207, 208, 209, 210, 214], "dure": [6, 55, 73, 115, 126, 134, 144, 159, 170, 171, 174, 192, 208, 214], "particular": [6, 11, 20, 23, 24, 25, 178, 211, 212, 214], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 101, 102, 103, 104, 153, 156, 176, 192, 208, 209, 211, 212], "thu": [6, 32, 71, 79, 104, 126, 130, 208, 212], "less": [6, 11, 180, 207], "space": [6, 13, 14, 15, 174, 212], "side": [6, 34, 35, 115, 186, 187, 208], "todo": [6, 37, 63, 69, 115, 162], "For": [6, 11, 14, 17, 23, 24, 69, 115, 130, 160, 167, 176, 207, 208, 209, 211, 212, 214], "now": [6, 63, 104, 207], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 73, 76, 99, 114, 127, 131, 150, 160, 176, 184, 185, 189, 192, 206, 208, 209, 211, 212, 214], "benefit": 6, "exa": [6, 20, 171, 195, 207, 209, 210, 214], "sweep": 6, "over": [6, 7, 12, 69, 127, 131, 160, 207], "In": [6, 7, 11, 18, 37, 53, 55, 69, 70, 71, 75, 92, 99, 144, 149, 153, 160, 176, 184, 207, 208, 209, 211, 212, 214], "futur": 6, "gener": [6, 11, 20, 69, 70, 92, 104, 131, 165, 192, 207, 209, 211], "should": [6, 18, 20, 37, 49, 69, 70, 79, 96, 97, 98, 107, 109, 114, 115, 126, 127, 131, 174, 176, 180, 184, 185, 207, 209, 211, 212], "experi": [6, 11, 60, 176, 207], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 147, 148, 152, 153, 155, 160, 162, 167, 168, 169, 170, 171, 172, 173, 174, 176, 183, 185, 186, 187, 196, 197, 199, 207, 209], "how": [6, 176, 192, 208, 209, 211, 212, 214], "long": [6, 71, 79, 115, 170, 171, 207, 208, 209], "start": [6, 58, 60, 127, 131, 137, 138, 160, 180, 183, 184, 185, 190, 191, 207, 208, 209, 212], "simultan": [6, 69, 150, 180, 192, 208, 214], "box": [6, 37, 79, 89, 92, 184, 190, 191, 192, 207, 214], "get_implement": [6, 18, 20, 69, 207, 209, 214], "use_priority_ord": 6, "strict_locu": [6, 18, 20], "priority_calibr": [6, 214], "provid": [6, 11, 18, 19, 20, 31, 32, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 131, 176, 203, 206, 207, 208, 209, 210, 211, 214], "an": [6, 11, 13, 14, 16, 18, 19, 20, 29, 34, 38, 39, 48, 53, 61, 63, 69, 71, 78, 79, 80, 81, 83, 92, 101, 102, 103, 104, 105, 108, 110, 114, 115, 116, 123, 146, 148, 150, 160, 161, 165, 174, 176, 184, 186, 189, 192, 197, 200, 201, 207, 208, 209, 210, 211, 212, 214], "mean": [6, 11, 69, 71, 153, 176, 192, 207, 209, 211, 212, 214], "chosen": [6, 109, 126, 208], "automat": [6, 11, 19, 70, 207, 209], "logic": [6, 19, 20, 31, 35, 48, 49, 73, 98, 99, 101, 126, 160, 207, 209, 214], "describ": [6, 11, 12, 20, 126, 127, 131, 143, 176, 192, 208, 211, 214], "below": [6, 20, 135, 136, 207, 208, 211, 212, 214], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 102, 103, 127, 176, 207, 209], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 73, 135, 136, 139, 160, 174, 176, 192, 208, 209, 210, 212, 214], "avail": [6, 18, 20, 208, 209, 211, 212, 214], "effect": [6, 20, 37, 71, 92, 101, 176, 180, 192, 208, 209, 210, 212, 214], "get_default_implementation_for_locu": [6, 176, 207, 209], "otherwis": [6, 18, 20, 49, 69, 75, 98, 115, 160, 161, 172, 207, 209, 211], "first": [6, 11, 13, 34, 35, 37, 49, 69, 127, 130, 131, 160, 174, 176, 209, 212, 214], "prioriti": [6, 7, 176, 207], "follow": [6, 55, 69, 70, 71, 98, 104, 120, 130, 155, 174, 180, 184, 192, 203, 206, 207, 208, 211, 212, 214], "defin": [6, 7, 11, 18, 19, 22, 28, 29, 30, 32, 38, 39, 48, 49, 52, 69, 70, 71, 78, 83, 84, 99, 100, 115, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 166, 167, 174, 176, 178, 179, 190, 192, 207, 208, 209, 210, 211, 214], "defaults_for_locu": [6, 176, 207], "global": [6, 63, 176, 207], "load": [6, 8, 194], "common": [6, 18, 19, 38, 39, 69, 70, 81, 82, 98, 107, 108, 109, 121, 184, 207, 210, 211], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 104, 114, 115, 123, 126, 134, 156, 160, 161, 167, 169, 173, 174, 176, 186, 192, 207, 208, 209, 211, 214], "note": [6, 16, 49, 69, 127, 131, 141, 148, 160, 179, 183, 192, 209, 212], "prevent": [6, 208, 209], "save": 6, "via": [6, 18, 20, 63, 82, 98, 99, 107, 109, 139, 172, 174, 207, 209], "could": [6, 17, 55, 176, 209, 212], "_find_implementation_and_locu": 6, "find": [6, 174, 214], "instanc": [6, 11, 13, 18, 20, 33, 69, 75, 79, 80, 92, 101, 102, 103, 148, 151, 176, 197, 214], "compat": [6, 69, 92, 203, 206, 207], "highest": [6, 176], "we": [6, 17, 55, 63, 73, 104, 115, 126, 127, 130, 131, 134, 174, 176, 197, 209, 211, 212, 214], "equival": [6, 104, 180, 192, 197, 208, 214], "one": [6, 9, 11, 18, 38, 39, 42, 45, 49, 56, 69, 70, 79, 160, 176, 184, 185, 189, 192, 207, 208, 209, 211, 212, 214], "had": [6, 207], "_get_implement": 6, "built": [6, 11, 108, 207], "when": [6, 11, 17, 35, 37, 55, 69, 71, 99, 123, 134, 160, 162, 167, 169, 173, 174, 184, 185, 192, 200, 201, 202, 207, 208, 209, 212, 214], "later": [6, 11], "oilcalibrationdata": [6, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 178, 209], "impli": [6, 211], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 52, 69, 70, 73, 89, 94, 98, 99, 101, 104, 123, 134, 148, 153, 167, 168, 169, 173, 174, 176, 179, 207, 208, 209, 214], "validate_quantum_circuit": [6, 207], "require_measur": [6, 9], "constitut": [6, 9, 211], "least": [6, 9, 55, 115, 121, 127, 131, 184, 185, 203, 206, 208, 209, 211], "circuit_to_timebox": [6, 207], "scheduling_algorithm": [6, 189, 192], "schedulingalgorithm": [6, 188, 189, 192], "hard_boundari": [6, 189, 190, 192], "locus_map": [6, 207], "convert": [6, 11, 20, 82, 109, 115, 123, 134, 144, 159, 167, 169, 173, 174, 182, 192, 207, 208, 209, 210], "resolv": [6, 20, 171, 190, 192, 208, 210], "option": [6, 11, 12, 13, 32, 69, 160, 176, 207, 209, 212], "placehold": [6, 11, 207], "physic": [6, 11, 21, 115, 184, 207, 208, 209], "while": [6, 20, 82, 190, 208, 209, 211, 214], "unresolv": 6, "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 190, 192, 207], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 102, 103, 108, 109, 115, 117, 123, 124, 125, 130, 133, 134, 135, 136, 137, 138, 141, 146, 148, 165, 167, 168, 169, 170, 172, 173, 174, 183, 189, 192, 197, 209, 211, 214], "temporari": 6, "helper": [6, 20], "playlist": [6, 71, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 181, 182, 198, 202, 203, 206, 207, 210, 212, 214], "front": [6, 160], "pad": [6, 35, 80, 103, 127, 130, 131, 160, 184, 190, 214], "equal": [6, 11, 37, 71, 104, 107, 170, 171, 183, 186, 187, 207, 208, 214], "sinc": [6, 32, 49, 73, 104, 174, 176, 207, 209], "delai": [6, 37, 67, 68, 69, 70, 98, 143, 150, 207, 208, 212], "befor": [6, 75, 82, 84, 86, 88, 91, 115, 117, 197, 207, 214], "final": [6, 167, 208, 209, 214], "wish": 6, "lose": [6, 207], "coher": [6, 148], "done": [6, 82, 155, 162, 174, 180, 185, 207, 209], "onc": [6, 207, 208, 209], "handl": [6, 19, 32, 55, 70, 98, 114, 115, 121, 184, 187, 197, 207, 209], "better": [6, 115, 192, 207], "remov": [6, 20, 104, 115, 160, 161, 162, 207, 214], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 75, 79, 81, 82, 87, 88, 101, 114, 115, 117, 121, 123, 124, 125, 126, 127, 131, 134, 135, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 183, 184, 189, 192, 199, 207], "far": 6, "By": [6, 20, 48, 49, 69, 70, 73, 89, 98, 104, 123, 134, 167, 169, 173, 174, 197], "occupi": [6, 160, 184, 185, 192, 208], "unnecessari": [6, 37, 184, 207], "pack": [6, 190], "assum": [6, 35, 49, 76, 92, 98, 104, 109, 121, 137, 138, 141, 160, 170, 171, 174, 208, 209, 211, 214], "refer": [6, 82, 108, 114, 155, 207, 209, 210, 214], "ensur": [6, 135, 136, 208, 212, 214], "work": [6, 11, 73, 99, 160, 183, 207, 208, 209, 211, 214], "intend": [6, 73, 99, 176, 208, 209], "properli": 6, "higher": [6, 132, 134, 135, 136, 207, 208, 212], "help": [6, 11, 208, 209, 212], "defend": [6, 211], "crosstalk": [6, 62, 63, 147, 180, 207, 209], "expens": 6, "longer": [6, 99, 207], "more": [6, 19, 55, 123, 144, 176, 192, 207, 208, 211, 212], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 99, 207], "readi": [6, 210], "execut": [6, 34, 35, 114, 149, 157, 160, 176, 180, 208, 209, 210, 211, 212, 214], "sample_r": [6, 115, 116, 117, 118], "_finish_schedul": 6, "filter": 6, "zero": [6, 11, 35, 49, 55, 63, 64, 73, 82, 92, 95, 126, 127, 130, 131, 144, 150, 156, 173, 174, 176, 183, 186, 187, 207, 208], "spacer": [6, 180], "consequ": 6, "step": [6, 156, 174, 207], "process": [6, 76, 144, 208, 213], "consist": [6, 17, 48, 49, 79, 82, 92, 101, 123, 134, 160, 167, 169, 173, 174, 176, 207, 209, 211], "extend": [6, 7, 13, 15, 55, 127, 159, 160, 161, 184, 185, 186, 187, 192], "gone": 6, "_fuse_long_distance_virtual_rz": 6, "fuse": [6, 82, 207], "distanc": [6, 207], "virtualrz": [6, 73, 75, 76, 104, 142, 207, 208], "correct": [6, 13, 62, 63, 73, 76, 106, 147, 207, 209, 214], "next": [6, 183, 208, 209, 212], "fluxpuls": [6, 142], "resolve_timebox": [6, 192, 207, 214], "compute_neighborhood_hard_boundari": 6, "children": [6, 189, 192, 208, 214], "concaten": [6, 192, 208, 214], "strategi": [6, 184, 185, 191, 192], "composit": [6, 17, 18, 38, 39, 190, 191, 192, 207, 208, 209, 214], "solid": 6, "rectangl": [6, 214], "longest": [6, 55, 184, 190], "within": [6, 13, 153, 160, 191, 208, 211], "tetri": [6, 144, 190], "tightli": [6, 190], "possibl": [6, 55, 104, 146, 160, 174, 184, 185, 190, 191, 192, 207, 208, 211, 212, 214], "still": [6, 11, 63, 161], "overlap": [6, 144, 150, 159, 184, 208, 214], "regardless": [6, 209, 212], "boundari": [6, 58, 60, 184, 190, 191], "modifi": [6, 7, 11, 160, 161, 183, 184, 185, 186, 187, 197, 207, 209, 211, 214], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 104, 160, 161, 180, 192, 207, 208, 209, 210, 214], "becom": [6, 11, 37, 167, 214], "atom": [6, 20, 189, 190, 192, 208, 209, 214], "isn": 6, "t": [6, 63, 79, 108, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 166, 167, 169, 172, 174, 194, 207, 211], "alreadi": [6, 11, 61, 160, 192, 207, 209], "precomput": [6, 160, 192, 209], "typic": [6, 49, 69, 115, 127, 130, 176, 180, 208, 209, 212, 214], "want": [6, 11, 19, 48, 49, 69, 83, 84, 127, 131, 156, 209], "top": [6, 209], "layer": 6, "would": [6, 11, 17, 49, 75, 207, 209, 212, 214], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 98, 102, 120, 131, 160, 168, 176, 184, 185, 189, 192, 207, 208, 209, 210, 212, 214], "lower": [6, 210, 212], "where": [6, 48, 49, 55, 63, 69, 70, 71, 78, 100, 101, 108, 115, 124, 125, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 150, 160, 167, 169, 172, 174, 176, 184, 187, 207, 208, 209, 211], "improv": [6, 37, 69, 207, 211], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 73, 94, 98, 99, 101, 123, 134, 160, 161, 167, 169, 173, 174, 176, 207, 208, 209, 210, 214], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 60, 153, 209], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 20, 61, 99, 114, 160, 186, 187, 207, 208, 209, 211, 214], "addit": [6, 11, 20, 31, 32, 35, 48, 49, 69, 71, 73, 98, 99, 101, 106, 148, 160, 173, 176, 192, 209, 211, 214], "ideal": [6, 16, 53, 176, 180], "model": [6, 122, 132, 166, 180, 208], "correctli": [6, 17, 207, 209], "interact": [6, 49], "frame": [6, 73, 147, 174, 197, 207, 209], "subspac": [6, 71, 176, 180, 208, 209], "connect": [6, 11, 99, 176, 192, 208, 209, 214], "those": [6, 32, 69, 98, 130, 176, 192, 207, 209, 211, 214], "henc": [6, 197], "evolut": 6, "Of": 6, "cours": [6, 53, 209], "realiti": [6, 53], "possibli": [6, 49, 212], "applic": [6, 209, 211], "essenti": [6, 130, 131, 209], "precis": [6, 208], "interest": 6, "howev": [6, 18, 55, 98, 123, 134, 156, 167, 169, 173, 174, 208, 209, 211], "well": [6, 77, 99, 149, 160, 176, 203, 206, 207, 209, 210, 212, 214], "local": [6, 73, 104, 147, 155, 197], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 99, 123, 134, 143, 167, 169, 173, 174, 207, 208, 209, 214], "end": [6, 11, 40, 73, 75, 76, 104, 108, 127, 131, 137, 138, 144, 159, 160, 161, 172, 207, 208, 209, 211, 212], "carri": [6, 208, 211], "meant": [6, 11], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 73, 115, 123, 124, 125, 127, 128, 129, 130, 131, 133, 135, 137, 138, 140, 141, 145, 150, 160, 174, 176, 189, 192, 203, 206, 207, 208, 209, 212, 214], "involv": [6, 20, 35, 208, 210, 214], "compress": [6, 208], "duplic": 6, "transfer": [6, 92, 211], "drop": 6, "point": [6, 104, 127, 128, 129, 131, 137, 138, 139, 183, 184, 185, 209], "finalis": 6, "unless": [6, 20, 123, 134, 167, 169, 173, 174, 192, 207, 209, 211, 214], "call": [6, 11, 13, 17, 18, 20, 73, 99, 107, 207, 209, 214], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 18, 20, 31, 37, 49, 79, 94, 165, 207, 208, 209, 210], "shortcut": [6, 11, 207, 214], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 209], "nativ": [7, 33, 176, 214], "ones": [7, 18, 34, 35, 98, 107, 109, 190, 192, 209], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 92, 99, 101, 104, 160, 169, 172, 176, 184, 187, 197, 207, 208, 209], "gate_definit": 7, "section": [7, 208, 209, 211, 212, 214], "file": [7, 8, 52, 194, 211], "yaml": [7, 8, 194], "config": [8, 114, 207], "circuitoperationlist": [10, 207], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 40, 78, 92, 98, 99, 104, 106, 108, 150, 174, 192, 207, 209], "mostli": [11, 208], "conveni": [11, 20, 69, 192, 207, 210], "enabl": [11, 55, 73, 79, 170, 171, 207], "easi": [11, 214], "creation": [11, 209], "calcul": [11, 12, 15, 73, 172, 174, 207], "onto": 11, "import": [11, 56, 209, 211, 214], "present": [11, 12, 71, 160, 184, 214], "think": 11, "about": [11, 77, 146, 148, 149, 152, 207, 208, 212, 214], "qiskit": [11, 207], "quantumregist": 11, "most": [11, 209, 210], "simpli": [11, 37, 104, 176, 208], "taken": [11, 207], "you": [11, 69, 70, 73, 156, 176, 207, 210, 211, 214], "good": 11, "practic": [11, 209, 212, 214], "mutabl": [11, 160], "regist": [11, 12, 13, 18, 94, 176, 207, 208, 210, 214], "usabl": [11, 20, 37, 207], "fundament": 11, "popul": [11, 71], "qb1": [11, 69, 176, 209, 214], "qbn": 11, "qb2": [11, 69, 176, 209, 212, 214], "altern": [11, 208, 212], "To": [11, 37, 55, 160, 209, 210, 211, 212, 214], "your": [11, 209, 211], "own": [11, 17, 20, 33, 176, 207, 208, 209, 211], "initi": [11, 32, 33, 126, 134, 167, 174, 208, 209], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 176, 207, 208, 209], "__add__": [11, 69, 207], "__mul__": [11, 207], "__getitem__": [11, 207], "redefin": [11, 123, 134, 167, 169, 173, 174], "3": [11, 37, 63, 67, 68, 69, 80, 103, 133, 184, 211, 213, 214], "circuit1": [11, 214], "circuit2": [11, 214], "4": [11, 57, 87, 88, 90, 91, 106, 108, 133, 211, 213], "produc": [11, 186, 207, 208, 212, 214], "prx": [11, 18, 19, 37, 38, 39, 67, 68, 69, 70, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 100, 104, 107, 109, 176, 197, 207, 208, 209, 212, 213, 214], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 72, 73, 74, 78, 79, 82, 89, 92, 93, 98, 100, 104, 105, 107, 108, 110, 147, 176, 196, 197, 207, 209, 214], "drag_crf": [11, 38, 207], "abov": [11, 208, 209, 210, 211, 214], "shorten": 11, "exactli": [11, 20, 176, 189], "syntax": [11, 207, 208, 209, 211, 214], "usual": [11, 17, 55, 151, 174, 208, 209, 212, 214], "attach": [11, 211], "init": [11, 207, 209], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 72, 73, 74, 80, 102, 103, 176, 209], "unitari": [11, 12, 13, 15, 40, 58, 60, 71, 93, 95, 105, 110, 176, 207, 208, 209], "propag": [11, 15, 58, 60, 98, 207, 212], "entir": [11, 13, 115, 207], "u": [11, 57, 109, 207], "get_unitari": 11, "dimens": [11, 127, 130], "alwai": [11, 18, 34, 35, 37, 73, 98, 107, 109, 135, 136, 176, 180, 184, 186, 209], "qb3": [11, 69, 176, 212, 214], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 108, 127, 176, 207, 209], "correspond": [11, 13, 18, 53, 57, 58, 59, 60, 63, 98, 107, 109, 123, 126, 127, 130, 146, 176, 184, 192, 208, 212], "three": [11, 79], "big": [11, 12, 13, 176], "endian": [11, 12, 13, 176], "convent": [11, 12, 73, 120], "With": [11, 19, 69, 70, 212], "action": [11, 12, 176, 208], "ident": [11, 15, 53, 59, 92, 207], "physical_circuit": 11, "map_loci": [11, 207], "physical_qubit": 11, "exampl": [11, 14, 17, 18, 73, 115, 126, 176, 207, 208, 209, 211, 214], "alic": 11, "zzz": 11, "qb5": [11, 176], "qb10": 11, "occurr": 11, "mani": [11, 207, 209, 214], "run": [11, 130, 207, 212], "parallel": [11, 176, 207], "larg": [11, 127, 131, 208], "left": [11, 20, 31, 35, 48, 49, 69, 70, 99, 101, 104, 186, 187, 208, 209, 212], "ignor": [11, 37, 126], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 115, 124, 125, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 141, 167, 174], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 167, 169, 170, 171, 172, 173, 174, 207, 209], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 87, 88, 90, 91, 93, 105, 110, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 169, 170, 171, 172, 173, 174, 176, 209], "locus_indic": 11, "append": [11, 35, 69, 160, 161, 207], "store": [11, 13, 17, 20, 48, 49, 69, 70, 89, 98, 104, 130, 147, 176, 209], "select": [11, 15, 212, 214], "indic": [11, 15, 75, 126, 127, 130, 165, 208, 211], "qb4": [11, 212], "param": [11, 13, 20, 176, 207, 209], "barrier": [11, 12, 176, 209], "compos": [11, 180, 210], "safer": 11, "wai": [11, 18, 143, 192, 207, 208, 209, 214], "togeth": [11, 37, 48, 69, 75, 184, 192, 207, 208, 209, 214], "probabl": 11, "wire": 11, "k": [11, 14, 127, 135, 136, 137, 138, 139, 140, 141, 174], "achiev": [11, 209], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 170, 171, 192], "make_circuit": [11, 207], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 140, 141, 154, 160, 174, 184, 190, 203, 205, 206, 207], "total": [11, 76, 161, 180, 214], "across": [11, 131, 135, 136], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 207, 209, 211], "skip": [12, 160], "product": [12, 130, 208, 211], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 99, 101, 104, 208, 209, 214], "fetch": 13, "Then": [13, 192, 209], "hilbert": [13, 15], "whole": [13, 63, 208, 211], "perm": 14, "permut": [14, 207], "state": [14, 40, 53, 71, 73, 78, 82, 95, 98, 99, 104, 106, 108, 176, 197, 208, 209, 211, 212], "vector": [14, 127, 207], "index": [14, 63, 114, 161, 183, 208, 210], "th": [14, 127, 174], "old": 14, "kron": [14, 176], "c": [14, 172, 192, 211], "n_qubit": 15, "larger": [15, 160, 208], "system": [15, 52, 207, 211, 212, 214], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103, 104], "hash": 15, "purpos": [15, 20, 69, 207, 209, 211], "rang": [15, 126, 127, 131, 137, 138, 167, 192, 207], "abstract": [16, 176, 208, 209, 210], "conceptu": [16, 208], "wherea": [16, 69, 144, 176, 208, 209], "concret": [16, 176, 209, 210, 214], "One": [16, 20, 89, 208, 214], "approxim": [16, 127, 131], "abc": [16, 18, 20, 34, 36, 40, 53, 62, 66, 71, 78, 79, 81, 82, 89, 92, 95, 100, 106, 108], "customiqwaveform": [16, 66, 69, 70, 78, 81, 82, 209], "singlepulseg": [16, 78, 92, 207], "compositecach": 16, "__call__": [17, 18, 20, 31, 35, 48, 49, 69, 73, 98, 99, 101, 207, 209], "normal": [17, 37, 63, 135, 136, 139, 174, 176, 196, 207, 209, 211], "_timebox_cach": 17, "trust": 17, "itself": [17, 73, 99, 207, 209, 212], "member": [17, 18, 58, 60, 209], "deduc": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 209], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 96, 97, 98, 107, 109, 207, 208, 209], "identifi": [17, 37, 115, 143, 160, 209, 211], "cast": 17, "extra": [17, 37, 73, 82, 209], "string": [17, 63, 67, 68, 69, 153, 165], "id": 17, "further": [17, 173, 174, 192, 209], "did": [17, 207], "come": [17, 209, 214], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 207, 209], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 107, 109, 209], "term": [18, 123, 124, 125, 128, 129, 133, 134, 135, 137, 138, 139, 141, 167, 169, 173, 174, 176, 208, 209, 210, 211], "pre": [18, 126, 133, 134, 135, 136, 174], "abl": [18, 121, 207], "know": [18, 20, 209], "consid": [18, 19, 55, 64, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 130, 183, 186, 187, 207, 209, 214], "registered_g": [18, 98, 107, 109, 207, 209], "cz": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 71, 73, 104, 176, 207, 208, 209, 213, 214], "insid": [18, 20, 31, 35, 37, 48, 49, 73, 82, 98, 99, 101, 167, 183, 192, 207, 208, 209], "besid": [18, 98, 99, 107, 109], "here": [18, 63, 82, 98, 107, 109, 141, 166, 174, 209, 212, 214], "construct": [18, 20, 33, 69, 79, 80, 92, 98, 101, 102, 103, 107, 109, 123, 134, 167, 169, 173, 174, 207, 208, 210], "default_implement": [18, 38, 39, 176], "design": [18, 38, 39, 207, 211], "fill": [18, 38, 39, 208], "he": [18, 38, 39], "sought": 18, "custom": [19, 20, 69, 70, 207, 208, 210], "waveform": [19, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 72, 73, 74, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 101, 114, 122, 123, 124, 125, 126, 132, 134, 135, 136, 147, 148, 149, 152, 167, 168, 169, 170, 171, 172, 173, 174, 203, 205, 206, 207, 208, 210], "iqpuls": [19, 48, 69, 70, 79, 81, 82, 83, 84, 92, 101, 104, 142, 145, 150, 153, 155, 197, 205, 207, 208, 209], "info": [19, 20, 207, 209], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 101, 123, 125, 129, 136, 138, 148, 207, 209, 213, 214], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 83, 84, 85, 86, 87, 88, 90, 91, 148, 209], "wave_q": [19, 67, 68, 83, 84, 85, 86, 87, 88, 90, 91, 148, 209], "dependent_wav": [19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91], "share": [19, 32, 49, 67, 68, 69, 70, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 211], "drag": [19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 207, 209], "root_paramet": [19, 49, 69, 70, 73, 81, 82], "independ": [19, 69, 70, 81, 82, 160, 161, 176, 208, 212], "overrid": [19, 20, 31, 35, 48, 49, 69, 70, 73, 81, 82, 83, 84, 89, 98, 99, 101, 104, 126, 207, 209, 214], "excluded_paramet": [19, 48, 49, 83, 84], "exclud": [19, 48, 49, 83, 84, 211], "There": [20, 82, 209, 212, 214], "subclass": [20, 31, 33, 35, 48, 49, 69, 70, 99, 101, 104, 123, 134, 167, 169, 173, 174, 176, 207, 209], "__init__": [20, 207, 209], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 72, 73, 74, 78, 79, 82, 89, 92, 93, 100, 104, 105, 106, 108, 110, 197, 207, 209, 214], "input": [20, 37, 69, 208, 209], "raw": [20, 145, 153, 154, 165, 212], "meaning": [20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 102, 103, 176], "special_implement": [20, 207], "special": [20, 49, 75, 92, 166, 176, 207, 209, 211, 214], "never": [20, 207, 209], "explicitli": [20, 69, 207, 209, 211, 214], "qualified_nam": 20, "qualifi": 20, "classmethod": [20, 48, 49, 63, 69, 70, 79, 81, 82, 83, 84, 89, 98, 99, 101, 104, 207], "needs_calibr": 20, "appropri": [20, 208, 211], "_call": [20, 31, 35, 37, 48, 49, 55, 69, 70, 73, 79, 82, 89, 92, 98, 99, 101, 104, 107, 109, 207, 209], "kwarg": [20, 31, 35, 48, 49, 73, 79, 83, 84, 98, 99, 101], "signatur": [20, 31, 35, 48, 49, 73, 98, 99, 101, 176, 207, 209], "suffici": [20, 31, 35, 48, 49, 73, 98, 99, 101, 115, 174], "assign": [20, 49, 69, 70, 114, 207], "specifi": [20, 31, 37, 123, 149, 190, 209, 212, 214], "to_timebox": 20, "wrap": [20, 214], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 99, 101, 104, 160], "unimpl": [20, 31, 35, 48, 49, 69, 70, 99, 101, 104], "reimplement": [20, 31, 35, 48, 49, 69, 70, 99, 101, 104, 209], "make": [20, 31, 35, 48, 49, 69, 70, 73, 99, 101, 104, 149, 156, 160, 161, 176, 180, 183, 207, 209, 211, 214], "sens": [20, 31, 35, 48, 49, 69, 70, 99, 101, 104], "convert_calibration_data": 20, "channel_prop": 20, "item": [20, 160], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 72, 73, 74, 87, 88, 90, 91, 102, 115, 116, 118, 123, 126, 127, 130, 131, 134, 141, 167, 169, 173, 174, 209], "addition": [20, 184, 185, 212], "under": [20, 180, 192, 211], "n_sampl": [20, 32, 79, 81, 82, 101, 123, 124, 125, 126, 134, 135, 136, 167, 168, 169, 170, 171, 172, 173, 174], "subset": [20, 58], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103], "cl": 20, "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 160, 211], "dot": 20, "root": [20, 58], "settingnod": [20, 119, 120], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 89, 98, 104, 209], "operation_nam": [20, 48, 49, 69, 70, 89, 98, 104], "implementation_nam": [20, 48, 49, 69, 70, 89, 98, 104, 209], "behaviour": [20, 48, 49, 69, 70, 89, 98, 104, 207, 209], "get_custom_locus_map": [20, 63, 99, 207, 209], "component_to_channel": [20, 63, 99, 120], "wrt": 20, "often": [20, 207, 209], "set_locus_map": 20, "frozenset": [20, 63, 99, 209], "matter": [21, 73, 209], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 102, 103, 177], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 73, 79, 101, 148, 150, 151, 152, 189, 207, 208, 209, 214], "singl": [31, 33, 60, 67, 68, 69, 70, 78, 81, 82, 84, 92, 100, 104, 106, 108, 160, 161, 176, 189, 192, 204, 207, 208, 209, 212, 213, 214], "_get_puls": [31, 81, 82, 83, 84, 207], "_get_pulse_channel": 31, "basic": [31, 161, 207, 209], "insert": [31, 75, 207], "overridden": [31, 176, 209], "wave": [32, 147, 152, 169], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 97, 99, 102, 103, 143, 145, 153, 154, 189, 192, 207, 208, 209], "format": [32, 207, 211], "been": [33, 37, 99, 192, 207, 208, 211, 212], "sever": [33, 144, 176, 207, 209, 212, 214], "scheme": [33, 208], "likewis": 33, "sometim": [33, 208], "metaoper": [34, 35, 176, 209], "forc": [34, 53, 115, 121], "tempor": [34, 35], "qudit": [35, 176], "metainstruct": 35, "caus": [35, 37, 55, 63, 207, 211, 212], "turn": [35, 207], "impos": 35, "relat": [35, 76, 207, 212, 214], "classic": [36, 37, 207, 212], "ccprx_composit": [36, 38, 39, 207, 212], "ccprx_composite_dragcosinerisefal": [36, 207], "ccprx_composite_draggaussian": [36, 207], "condit": [37, 38, 39, 98, 146, 153, 203, 206, 207, 209, 211, 212], "discrimin": 37, "obtain": [37, 92, 123, 127, 208, 211, 213], "segment": [37, 79, 99, 153, 155, 158, 160, 165, 183, 184, 185, 207, 208, 212], "activ": [37, 151, 208], "underneath": 37, "control_delai": [37, 212], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103, 123, 128, 129, 134, 137, 138, 139, 141, 148, 160, 167, 169, 173, 174, 208, 209, 212], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103, 195, 207], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103, 195], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103], "instrument": [37, 104, 115, 118, 126, 142, 158, 212], "drive_control": [37, 119], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 207], "conditionalinstruct": [37, 69, 142, 153, 212], "until": [37, 104, 208], "enough": [37, 212], "arriv": [37, 212], "place": [37, 160, 171, 173, 184, 185, 211], "sequenti": 37, "without": [37, 127, 130, 131, 154, 159, 192, 207, 208, 209, 211, 214], "care": [37, 214], "yourself": [37, 210], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 72, 73, 74, 82, 84, 86, 88, 91, 93, 102, 105, 148, 197], "multipl": [37, 69, 99, 115, 121, 123, 134, 139, 146, 150, 153, 167, 169, 173, 174, 207, 208], "f": [37, 63, 69, 70, 127, 167, 169, 172, 174, 176, 209], "__": [37, 63, 69, 70, 207], "current": [37, 69, 73, 183], "hw": [37, 69, 207], "per": [37, 69, 176, 207, 209], "listen": [37, 207], "user": [37, 63, 69, 126, 174, 192, 207, 208, 209, 212, 214], "drag_gaussian": [39, 207, 214], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 73, 74, 82, 100, 104, 106, 108, 110, 197, 207, 209], "flip": [40, 207], "rel": [40, 73, 123, 134, 141, 148, 167, 169, 173, 174, 207, 208, 209, 214], "11": [40, 213], "text": [40, 71, 82, 172, 174, 211], "begin": [40, 73, 75, 108, 143, 150, 161, 172, 183, 186, 187, 207, 212, 214], "pmatrix": [40, 108], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 71, 73, 209], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 207], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 207], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cosinerisefal": [41, 42, 46, 50, 51, 72, 74, 83, 84, 173], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 72, 73, 74, 209], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 72, 74, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 101, 102, 123, 126, 134, 167, 169, 171, 173, 174, 207, 209], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 99, 102, 103], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 102, 123, 124, 125, 134, 135, 136, 172, 173, 174, 209], "crf": [41, 42, 45, 46, 50, 51, 72, 74, 83, 84], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 102], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 102, 123, 124, 125, 126, 134, 135, 136, 172, 173, 174], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 72, 74, 80, 83, 84, 102, 103, 171, 172, 173], "rz": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 72, 73, 74, 82, 84, 86, 88, 91, 101, 102, 103, 104, 109, 147, 197, 207], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 72, 73, 74, 209], "cosin": [42, 45, 80, 102, 103, 123, 124, 125, 128, 129, 130, 131, 133, 137, 138, 139, 140, 166, 167, 170, 171, 173, 174, 207], "rise": [42, 45, 79, 80, 102, 103, 170, 171, 172, 173, 207], "fall": [42, 45, 79, 80, 102, 103, 170, 172, 173, 176, 207], "ac": [42, 45, 48, 79, 80, 101, 102, 103, 207], "stark": [42, 45, 48, 79, 80, 101, 102, 103, 207], "first_qubit": [42, 45], "mcrf": [42, 45, 102], "modulation_frequ": [42, 45, 102, 148, 173], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 102, 166], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 166, 207], "coupling_strength_norm": [44, 45, 46, 174], "frequency_initial_norm": [44, 45, 46, 174], "frequency_to_minimize_norm": [44, 45, 46, 174], "lambda_1": [44, 45, 46, 174], "lambda_2": [44, 45, 46, 174], "squid_asymmetri": [44, 45, 46, 174], "truncatedgaussiansmoothedsquar": [47, 51, 74, 173], "tgss": [47, 51, 74], "analog": 48, "tune": [48, 122, 123, 124, 125], "frequenc": [48, 67, 68, 69, 70, 73, 101, 116, 117, 123, 126, 127, 130, 131, 133, 134, 135, 137, 138, 140, 141, 148, 167, 169, 173, 174, 207, 209], "_ac_stark_puls": [48, 101], "phase_incr": [48, 101, 102, 104, 148, 155], "quadratur": [48, 101, 148], "pi": [48, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 101, 106, 107, 108, 124, 125, 127, 128, 129, 130, 135, 136, 139, 140, 167, 168, 169, 172, 196, 207, 209, 212, 214], "discret": 49, "mediat": [49, 71], "coupl": [49, 174], "tunabl": [49, 213], "both": [49, 73, 79, 186, 207, 209, 212, 214], "arbitrari": [49, 104, 108, 150, 197, 212, 214], "slot": 49, "move": [49, 72, 73, 74, 75, 183, 207, 214], "being": [49, 92, 127, 176, 209, 212], "flux_puls": 49, "radian": [49, 78, 79, 89, 92, 100, 104, 108, 148, 155, 169, 196], "maximum": [54, 64, 99, 135, 136, 160, 174, 184], "up": [55, 69, 73, 76, 115, 121, 135, 136, 160, 174, 184, 207, 209], "hardwar": [55, 155, 176, 203, 206, 208, 209, 210, 212], "again": 55, "much": [55, 208], "why": [55, 209], "10": [55, 64, 71, 210, 213], "except": [55, 69, 82, 198, 200, 201, 202, 208, 209, 211], "enumer": [56, 58, 60], "xygat": [56, 59, 89], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 213], "j": [57, 59, 63, 127, 213], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 209], "enum": [58, 60, 188, 190, 191], "qualnam": [58, 60, 190, 191], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 108, 109, 110], "clifford": [60, 89], "axi": [60, 78, 106, 108, 197, 207, 209], "xy": [60, 78, 89], "plane": [60, 78, 106], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 94], "error": [61, 127, 131, 174, 178, 192, 194, 200, 201, 202, 207, 208, 214], "fluxmultiplexer_samplelinear": [62, 207], "flux_multiplex": 63, "linear": [63, 92, 167, 168], "multiplex": [63, 69, 98, 189, 207], "cross": [63, 211, 214], "talk": [63, 214], "element": [63, 123, 127, 131, 192, 207, 208, 214], "c_ij": 63, "aris": [63, 211], "a_i": 63, "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": [63, 127], "spars": 63, "form": [63, 174, 207, 208, 209, 211], "xarrai": 63, "yet": [63, 184, 185, 207], "matrix_index": 63, "relev": 63, "flat": [63, 120], "np": [63, 176, 209, 212, 214], "matrix_el": 63, "experiment": 63, "r": [63, 106, 172, 213], "d": [63, 127, 167, 192, 211, 213], "everyth": [63, 214], "subject": [63, 208, 211], "1e": [64, 162, 186, 187], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 98, 104], "basi": [66, 67, 68, 98, 104, 108, 123, 126, 127, 130, 131, 133, 135, 136, 137, 138, 139, 140, 176, 211], "measure_customwaveform": [66, 67, 68, 70, 209], "measure_const": [66, 207], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 207], "dispers": [67, 68, 69], "constant": [67, 68, 69, 79, 80, 97, 103, 170, 171, 172, 207, 212], "acquisition_delai": [67, 68, 69, 70], "acquisit": [67, 68, 69, 70, 143, 151, 207, 212], "acquisition_typ": [67, 68, 69], "threshold": [67, 68, 69, 153], "amplitude_i": [67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 103, 209], "amplitude_q": [67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 103, 209], "integration_length": [67, 68, 69, 70, 207], "integr": [67, 68, 69, 70, 117, 145, 153, 154, 174, 207, 212], "integration_threshold": [67, 68, 69], "integration_weights_i": [67, 68, 69], "weight": [67, 68, 69, 87, 88, 123, 124, 125, 127, 131, 145, 153, 207], "dtype": [67, 68, 69, 124, 125, 135, 136, 167, 169, 170, 171, 172, 173, 174, 209], "float64": [67, 68, 69], "integration_weights_q": [67, 68, 69], "demolit": 68, "dimension": [69, 130], "len": [69, 127, 130, 141], "intermedi": [69, 209], "IF": 69, "center": [69, 117, 126, 127, 141, 172, 173, 174], "offset": [69, 150, 172, 174], "readouttrigg": [69, 70, 142, 153, 189, 208, 210], "_multiplexed_timebox": 69, "multiplexedprobetimebox": [69, 188, 207], "probe_timebox": 69, "_time_trac": 69, "time_trac": [69, 70, 143], "_build_instruct": [69, 70], "waveform_param": [69, 70], "root_param": [69, 70], "if_freq": 69, "acquisitionmethod": [69, 70, 142, 145, 151, 154], "do_acquisit": 69, "nake": 69, "trigger": [69, 70, 151, 160, 189, 207, 212], "goe": 69, "maintain": 69, "backward": [69, 92], "rout": [69, 153], "probelin": [69, 208, 212], "behav": [69, 144, 156], "featur": [69, 209, 210], "mode": 69, "pick": 69, "anywher": [69, 153, 207], "pass": [69, 75, 76, 77, 207, 212], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "contrari": 70, "probl": 70, "exchang": 71, "invari": 71, "span": 71, "00": [71, 133], "rangl": [71, 95], "01": [71, 133], "swap": 71, "anyth": [71, 209], "orthogon": [71, 209], "involut": 71, "_": [71, 131, 135, 140, 141], "i_": 71, "langl": 71, "undefin": [71, 208], "complex": [71, 87, 88, 90, 91, 145, 209, 212, 214], "degre": [71, 106], "freedom": [71, 212], "continuum": 71, "cancel": [71, 207], "due": [71, 73, 101, 147, 171, 208], "movemark": [71, 73, 207], "move_customwaveform": [71, 72, 74, 76, 207], "move_crf_crf": [71, 207], "move_tgss_crf": 71, "detun": [72, 73, 74, 75, 76, 207], "bookkeep": 73, "unknown": [73, 176, 201], "pair": [73, 150, 170, 171, 176, 209], "back": [73, 176, 183], "came": 73, "sandwich": [73, 76, 77, 207], "At": [73, 127, 131, 209], "annot": [73, 75, 211], "mark": [73, 211], "counteract": 73, "accumul": 73, "proport": 73, "sum": [73, 76, 123, 134, 150, 161, 167, 169, 173, 174, 192, 214], "complet": [73, 208], "apply_move_gate_phase_correct": [73, 207], "track": [73, 161, 184, 207, 211, 214], "right": [75, 207, 208, 211, 212, 214], "link": [75, 166, 207, 211], "noth": [75, 158, 160, 180, 182, 186, 187, 209, 211], "explicit": [75, 207, 208], "aforement": [75, 161, 184, 209], "marker": 75, "post": [75, 126, 134], "compil": [75, 77, 115, 144, 210, 211, 214], "apply_detuning_correct": 76, "level": [76, 77, 176, 208, 209, 210, 212, 214], "validate_prx": 77, "prepar": [77, 211], "conform": 77, "constraint": [77, 150, 208, 212], "unmodifi": 77, "x": [78, 79, 82, 84, 89, 92, 106, 108, 207, 209, 213], "r_": [78, 82, 104], "phi": [78, 82, 100, 104, 108, 109, 110, 169, 197, 207], "theta": [78, 82, 104, 108, 109, 110, 174, 197, 207], "co": [78, 108, 124, 127, 128, 130, 135, 136, 139, 140, 167, 169], "y": [78, 89, 106, 108, 110, 207], "sin": [78, 108, 125, 129, 172], "r_z": [78, 82, 100, 104, 108, 109], "r_x": 78, "dagger": 78, "around": [78, 106, 108, 127, 173, 197], "li": 78, "bloch": [78, 108, 209], "sphere": [78, 108, 209], "prx_gateimplement": [78, 79, 92, 100], "prx_singlepulse_gateimplement": [78, 81, 82], "prx_customwaveform": [78, 83, 85, 87, 90, 207, 209], "prx_draggaussian": 78, "prx_dragcosinerisefal": 78, "prx_customwaveformssx": [78, 84, 86, 88, 91, 207], "prx_draggaussiansx": [78, 207], "prx_dragcosinerisefallsx": [78, 207], "prx_fastdragsx": [78, 207], "prx_fastdrag": [78, 207], "prx_hddragsx": [78, 207], "prx_hddrag": [78, 207], "abc_constant_smooth": [78, 80, 100], "constant_prx_with_smooth_rise_fal": [78, 100, 103, 207], "arbitrarili": [79, 170, 171, 207], "smooth": [79, 170, 171], "rise_waveform": [79, 80, 103], "main_waveform": [79, 80, 103], "fall_waveform": [79, 80, 103], "middl": [79, 173], "limit": [79, 107, 203, 206, 207, 211, 214], "memori": [79, 207, 208], "doesn": 79, "_main_puls": 79, "main": [79, 208, 209], "_rise_puls": 79, "_fall_puls": 79, "cosinefal": [80, 103, 166], "cosineris": [80, 103, 166], "iq": [81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 115, 116, 123, 134, 145, 150, 153, 154, 197, 203, 206], "hot": [81, 82], "swappabl": [81, 82], "rest_of_calibration_data": [81, 82], "x_pi": [81, 83, 207], "sx": [82, 88, 91, 107, 207], "manipul": [82, 209], "formula": 82, "rz_after": [82, 84, 86, 88, 91], "rz_befor": [82, 84, 86, 88, 91, 207], "sqrt": [82, 84, 106, 207], "cosinerisefallderiv": [83, 84, 166], "vz": [84, 86, 88, 91], "prx_customwaveformsvz": [84, 86], "truncatedgaussian": [85, 86, 209], "tg": [85, 86], "truncatedgaussianderiv": [85, 86, 209], "gaussian": [86, 209], "scale": [87, 90, 92, 126, 127, 147, 148, 152, 208, 209], "fdi": [87, 88], "coeffici": [87, 88, 90, 91, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 174], "compute_coefs_from_frequ": [87, 88, 90, 91, 123, 124, 125, 126, 134, 135, 136], "boolean": [87, 88, 90, 91, 126, 153], "number_of_cos_term": [87, 88, 123, 124, 125], "5": [87, 88, 127, 133, 167, 209, 211, 213, 214], "suppressed_frequ": [87, 88, 90, 91, 123, 124, 125, 126, 134, 135, 136], "suppressed_interval_width": [87, 88, 123, 124, 125], "fastdragi": [87, 88, 122, 207], "fastdragq": [87, 88, 122, 207], "rx": [89, 212, 214], "ry": [89, 207, 214], "xy_gat": 89, "hd": [90, 91, 126, 132, 134, 135, 136, 137, 138, 139, 141, 207], "hdi": [90, 91], "hddragi": [90, 91, 132, 207], "hddragq": [90, 91, 132, 207], "static": [92, 123, 126, 134, 167, 169, 173, 174, 189, 192, 207], "_single_iq_puls": [92, 207], "resonantli": 92, "x_": 92, "linearli": [92, 209], "adjust": [92, 197, 207, 208, 212], "iq_puls": [92, 207], "2x2": [93, 105, 110], "gate_nam": [94, 209], "impl_class": [94, 209], "set_as_default": 94, "quantum_op_spec": [94, 209], "spec": 94, "reset_condit": [95, 212], "reset_wait": [95, 207], "__default_feedback": 96, "doubl": [96, 97], "underscor": [96, 97], "emphas": [96, 97], "fact": [96, 97], "manual": [96, 97, 169, 209], "__reset": 97, "reset": [98, 99, 148, 176, 207, 208, 209, 212], "necessari": [98, 180, 208, 209, 214], "accommod": 98, "upon": 98, "relax": [99, 207], "compar": [99, 153, 160, 207], "shot": [99, 208], "destroi": 99, "wait_box": 99, "rz_virtual": 100, "rz_acstarkshift": [100, 102], "rz_acstarkshift_cosinerisefal": 100, "rz_acstarkshift_smoothconst": [100, 207], "strong": 101, "off": [101, 207], "lead": [101, 207], "shift": [101, 147], "ac_stark_puls": 101, "ac_stark_waveform": 102, "increment": [102, 104, 148, 155, 197, 207], "techniqu": [104, 109], "oscil": [104, 155, 197], "shortest": 104, "algebra": [104, 155], "commut": [104, 197], "toward": 104, "hit": 104, "elimin": 104, "multi": 104, "hold": [104, 211], "diagon": 104, "immedi": [104, 180, 207], "conjug": 104, "alpha": [104, 167, 168], "accomplish": 104, "assumpt": [104, 174], "negat": 104, "sigma": [106, 209, 213], "_x": 106, "xz": 106, "90": [106, 213], "sxgate": [106, 207], "parametr": [108, 174, 209, 213], "euler": [108, 109], "lambda": [108, 109, 207, 209], "subsequ": [108, 211], "r_y": [108, 109], "express": [108, 123, 174, 211], "h": [108, 127], "8": [108, 133, 210, 211], "http": [108, 211], "openqasm": 108, "com": 108, "languag": [108, 208, 211], "html": [108, 165], "ugat": [108, 207], "lam": [109, 110], "decomposit": 109, "cdot": 109, "probechannelproperti": 112, "channelconfigur": [112, 118], "realchannelconfig": [112, 114, 116], "iqchannelconfig": 112, "channeldescript": [112, 203, 204], "instruction_t": 114, "uniqu": [114, 176, 208, 209], "waveform_t": 114, "add_instruct": 114, "integ": [114, 115, 146, 192, 214], "similar": [114, 207, 209], "manner": 114, "instruction_duration_granular": [115, 117], "instruction_duration_min": [115, 117, 121], "compatible_instruct": [115, 117, 199], "is_iq": [115, 117], "is_virtu": [115, 117], "blocks_compon": [115, 117], "zi": 115, "hdawg": 115, "shfsg": 115, "shfqa": 115, "32": [115, 208], "16": [115, 160, 208, 213], "hack": 115, "frontend": 115, "sent": [115, 207, 208, 211], "might": [115, 208, 209, 212, 214], "duration_to_sampl": 115, "duration_to_second": 115, "duration_to_int_sampl": 115, "messag": [115, 178, 192], "check_min_sampl": 115, "close": [115, 214], "test": [115, 207], "output": [115, 144, 156, 165, 176, 207, 208, 212, 214], "unaccept": 115, "round_duration_to_granular": 115, "round_up": [115, 121], "force_min_dur": [115, 121], "closest": [115, 121], "upconvers": [116, 155], "center_frequ": 117, "integration_start_dead_tim": 117, "integration_stop_dead_tim": 117, "dead": 117, "real": [118, 148, 152, 153, 174, 208], "flux_control": 119, "readout_control": 119, "intern": [119, 207, 208, 214], "standard": [120, 214], "channel_properti": [120, 160, 185], "largest": 121, "fourier": [122, 123, 124, 125, 127, 130, 131, 174], "ansatz": [122, 123, 124, 125], "spectrum": [122, 123, 124, 125, 126, 131], "suppressedpuls": [122, 123, 132, 134], "fastdrag": [122, 124, 125], "fast_drag": [123, 124, 125, 126, 132], "shape": [123, 124, 125, 130, 135, 136, 152, 167, 169, 170, 171, 172, 173, 174, 210], "envelop": [123, 124, 125, 126, 128, 129, 133, 135, 136, 137, 138, 139, 140, 148, 207, 213], "domain": [123, 131], "suppress": [123, 126, 127, 131, 133, 134, 135, 137, 138, 140, 141], "interv": [123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 140, 150, 208, 209], "accord": [123, 131, 135, 136, 192, 214], "furthermor": 123, "similarli": [123, 207, 209], "ordinari": 123, "detail": [123, 173, 174, 176, 208, 210, 212], "seri": [123, 124, 125, 126, 127, 128, 129, 139], "width": [123, 126, 160, 172, 173], "last": [123, 212, 214], "potenti": [123, 207], "cutoff": 123, "non_timelike_attribut": [123, 134, 167, 169, 173, 174, 209], "timelik": [123, 134, 167, 169, 173, 174], "dimensionless": [123, 134, 167, 169, 173, 174], "window": [123, 134, 143, 154, 167, 169, 172, 173, 174], "invers": [123, 127, 134, 167, 169, 173, 174], "sum_": [124, 125, 127, 128, 129, 135, 136, 137, 138, 139, 140], "c_n": [124, 125, 128, 129, 131], "t_p": [124, 125, 127, 128, 129, 130, 135, 136, 139, 140], "_sampl": [124, 125, 135, 136, 167, 169, 170, 171, 172, 173, 174, 209], "sample_coord": [124, 125, 135, 136, 167, 169, 170, 171, 172, 173, 174, 209], "coordin": [124, 125, 135, 136, 167, 169, 170, 171, 172, 173, 174], "expans": [126, 127], "choos": [126, 209, 211], "neglect": [126, 134], "_normal": 126, "avoid": [126, 127], "clip": 126, "re": 126, "n_arr": [127, 130], "suppressed_freq_ranges_2darr": 127, "pulse_dur": [127, 128, 129, 130, 131, 137, 138, 139, 141], "time_scaling_factor": 127, "n_points_for_integr": [127, 131], "60": [127, 131], "evalu": [127, 128, 129, 130, 131, 137, 138, 139, 146], "eq": [127, 130, 131, 134, 135, 136, 141], "a_": 127, "nm": 127, "int_": 127, "f_": [127, 167], "l": [127, 213], "hat": 127, "_n": 127, "_m": 127, "mathrm": [127, 167], "m": [127, 213], "row": 127, "column": 127, "denot": [127, 135, 136, 209], "transform": [127, 130, 131, 207, 208, 210, 211], "g_n": [127, 130], "importantli": [127, 208], "fulli": 127, "1d": [127, 130, 131], "2d": [127, 131], "give": [127, 208, 209, 211, 214], "factor": [127, 148, 152, 174, 209], "excess": 127, "small": [127, 207, 208], "integrand": [127, 131], "50": [127, 131, 211], "recommend": [127, 131, 211], "numer": [127, 131, 174], "low": [127, 131, 209], "t_arr": [128, 129, 137, 138, 139], "nth": [130, 139], "analyt": [130, 174, 213], "a7": [130, 131], "frequency_arr": 130, "tensor": 130, "dim": 130, "cartesian": 130, "number_of_cosin": 131, "weights_tupl": 131, "suppressed_freq_ranges_2d_tupl": 131, "solv": [131, 140, 141], "optim": [131, 174, 186, 207], "a5": 131, "a12": 131, "a13": 131, "effici": [131, 212], "rb": 131, "outer": 131, "appendix": [132, 211], "hddrag": [132, 135, 136], "33333333": 133, "6": [133, 211, 213], "22857143": 133, "02857143": 133, "66666667": 133, "95238095": 133, "35714286": 133, "07936508": 133, "00793651": 133, "71428571": 133, "07142857": 133, "47619048": 133, "14285714": 133, "02597403": 133, "0021645": 133, "75000000e": 133, "16666667e": 133, "83333333e": 133, "12121212e": 133, "30303030e": 133, "02": 133, "15850816e": 133, "03": 133, "82750583e": 133, "04": [133, 210], "7": [133, 211], "77777778e": 133, "24444444e": 133, "78787879e": 133, "82828283e": 133, "70240870e": 133, "86480186e": 133, "48640249e": 133, "55400155e": 133, "0th": 133, "solve_cosine_coefs_for_hd_drag": 133, "hd_drag": [134, 135, 136], "b1": [134, 135, 136], "b2": 134, "beta_": [135, 136, 137, 138, 141], "2n": [135, 136, 137, 138, 141], "d_k": [135, 136, 139, 140], "continu": [135, 136], "2k": [135, 136], "slightli": [135, 136], "derivative_coefs_arr": [137, 138], "cosine_coefs_arr": [137, 138, 139], "even": [137, 184, 185, 207, 209, 211], "number_of_suppressed_freq": 140, "suppressed_freq_arr": 141, "b5": 141, "beta_0": 141, "ghz": 141, "realpuls": [142, 147, 203, 205, 206, 209], "multiplexediqpuls": [142, 151], "timetrac": 142, "complexintegr": [142, 153], "thresholdstatediscrimin": 142, "delay_sampl": [143, 145, 153, 154], "acquir": [143, 151, 208], "qb1__readout": 143, "strictli": [144, 208, 209], "strict": [144, 207, 208], "version": [144, 210, 211], "dd": 144, "outcom": 146, "choic": 146, "ok": [146, 148, 149, 152], "get_child_instruct": [146, 149], "child": [146, 149, 184, 185, 203, 206], "collect": [147, 208, 209], "scale_i": [148, 209], "scale_q": [148, 209], "upconvert": 148, "success": 148, "carrier": 148, "get_waveform": [148, 149, 152], "command": [149, 208, 212], "entri": [150, 209], "outsid": [150, 208, 209], "truncat": [150, 183, 207], "neg": 150, "probe_puls": 151, "feedback_signal_label": [153, 207], "transmit": 153, "field": [153, 209, 211], "duration_sampl": 154, "captur": [154, 210], "updat": [155, 207, 212], "sure": 156, "synchron": 160, "program": 160, "critic": 160, "constructor": 160, "account": [160, 174, 207], "pprint": 160, "time_unit": 160, "fix": [160, 208], "graphic": 160, "represent": [160, 192, 208], "symbol": 160, "keysview": 160, "mutat": [160, 161], "vice": [160, 161], "versa": [160, 161], "immut": [160, 161], "add_channel": 160, "channel_nam": [160, 214], "front_pad": 160, "to_dur": 160, "variabl": [160, 184, 207], "front_pad_in_second": 160, "pad_to_hard_box": 160, "pad_to_hard_box_in_second": 160, "smallest": 160, "revers": 160, "preserv": [160, 180, 208, 214], "rear": 160, "reverse_hard_box": 160, "No": [160, 207], "synchronis": 160, "break": 160, "cleanup": [160, 207], "clean": [160, 207], "thing": [160, 170, 171], "has_content_in": 160, "keep": [161, 184], "_instruct": 161, "_durat": 161, "prepend": 161, "pop": 161, "idx": [161, 183], "12": [162, 186, 187], "comp": [162, 207], "1281": 162, "visualis": [164, 207], "view": [165, 207], "browser": 165, "jupyt": 165, "notebook": 165, "ipython": 165, "core": [165, 207], "displai": [165, 207, 211], "inspect": 165, "don": [166, 211], "serial": 166, "reimport": 166, "document": [166, 207, 211], "appear": [166, 208, 211], "chirp": [166, 168, 207], "chirpimag": [166, 207], "freq_start": [167, 168], "freq_stop": [167, 168], "05": [167, 168], "omega": 167, "taper": 167, "rectangular": [167, 184], "hann": 167, "nyquist": 167, "zone": 167, "constrain": 167, "5707963267948966": 168, "imaginari": 168, "period": 169, "sinusoid": [169, 172, 173], "made": [170, 171, 192, 209, 210, 211, 214], "dummi": 171, "bug": 171, "fixm": 171, "p": [172, 213], "plateau": 172, "Its": [172, 208], "midpoint": [172, 174], "descript": [173, 192, 211], "minim": [174, 180, 207], "adiabat": [174, 213], "prior": 174, "lambda_n": 174, "tau_": 174, "acceler": 174, "reconstruct": 174, "tau": 174, "lab": 174, "interpol": 174, "v": [174, 203, 206, 207], "voltag": 174, "go": [174, 209], "advis": [174, 211], "look": [174, 209], "mathemat": [174, 210], "heavi": 174, "leakag": [174, 213], "strength": 174, "squid": [174, 207], "asymmetri": [174, 207], "_sample_normalized_slepian": 174, "coord": 174, "_t_tau": 174, "num_sampl": 174, "129": 174, "convers": [174, 209, 211], "solut": 174, "therefor": [174, 208], "scipi": [174, 207], "romb": 174, "_theta_tau": 174, "shown": [174, 207, 212], "tau_puls": 174, "quantum_op": 176, "short": [176, 186], "simpl": [176, 192, 208, 209, 213], "unambigu": [176, 208, 209], "subsystem": 176, "qumod": 176, "pictur": [176, 212], "famili": [176, 208], "plural": 176, "intent": 176, "target": [176, 207, 214], "callabl": [176, 209], "lowest": [176, 208], "docstr": 176, "exact": [176, 209], "first_qubit_basis_ket": 176, "second_qubit_basis_ket": 176, "set_default_implement": [176, 209], "set_default_implementation_for_locu": [176, 209], "cal_data": 178, "impl": [178, 209], "noiseless": 180, "sync": 180, "try": [180, 207], "segmentpoint": 180, "nonsolid": 181, "nevertheless": 181, "tol": [183, 186, 187], "frac": 183, "serv": 183, "pointer": 183, "smaller": [183, 186, 187], "toler": 183, "remaind": 183, "cut_tail": 183, "cut": 183, "tail": 183, "onward": 183, "rewind": 183, "fastforward": 183, "forward": 183, "child_schedul": [184, 185], "child_compon": [184, 185], "neighborhood_compon": [184, 185, 189, 192], "component_dur": [184, 185], "is_alap": [184, 185], "respect": [184, 190, 203, 206, 208, 209], "hard": [184, 207], "rag": [184, 186, 187], "edg": [184, 207], "earliest": [184, 185], "max": 184, "combin": [184, 211], "extend_hard_boundary_in_second": 184, "computational_reson": [184, 185], "These": [184, 185, 192, 207, 208, 209, 214], "ever": [184, 185], "alap": [184, 185, 191, 192, 208, 214], "As": [184, 185, 192, 209, 212], "late": [184, 185, 191, 192], "extend_hard_boundari": 185, "incom": 185, "extens": [186, 187, 207], "reserv": 188, "resourc": 188, "schedulingstrategi": [188, 189, 190, 192, 214], "locus_compon": [189, 192, 209], "asap": [189, 191, 192, 208, 212, 214], "from_readout_trigg": 189, "readout_trigg": 189, "probe_channel": 189, "block_channel": 189, "block_dur": 189, "soon": [191, 192, 207, 212], "fragment": 192, "human": [192, 208, 209], "readabl": [192, 207, 208, 211], "union": [192, 211, 214], "rule": [192, 197, 207, 208, 209, 214], "operand": [192, 214], "pipe": [192, 214], "group": [192, 209, 214], "let": [192, 209], "a_then_b": 192, "c_then_d": 192, "set_alap": [192, 214], "abcd": 192, "abb": 192, "ccd": 192, "all_togeth": 192, "dictat": 192, "flatten": 192, "ancestor": 192, "set_asap": 192, "print": [192, 207, 211, 214], "_idx": 192, "python": [194, 195, 207, 209], "type_hint": 195, "typehint": 195, "psi_1": 197, "psi_2": 197, "decrement": 197, "beforehand": 197, "opposit": 197, "direct": [197, 211], "playlistvalidationerror": 198, "awgschedulevalidationdata": [198, 203], "awgschedulevalidationerror": 198, "invalidinstructionerror": 198, "sampling_r": 199, "min_number_of_sampl": 199, "fail": [200, 202], "issue_str": 201, "encount": 201, "channel_descript": [203, 204], "device_constraint": [203, 204, 206], "minimum": [203, 206, 208], "packag": 207, "publish": 207, "doc": [207, 209], "footer": 207, "issu": [207, 211], "sw": 207, "1392": 207, "code": [207, 209, 211, 212], "pep": 207, "604": 207, "lint": 207, "1230": 207, "rework": 207, "delet": 207, "major": 207, "stai": 207, "register_implement": [207, 208, 209], "split": [207, 208], "seen": 207, "register_g": 207, "validate_oper": 207, "compare_oper": 207, "add_implement": 207, "validate_implement": 207, "set_default": 207, "build_quantum_op": [207, 208], "py": 207, "yield": 207, "didn": 207, "renam": 207, "crystal": 207, "star": 207, "architectur": 207, "crystal_5": 207, "star_6": 207, "mini": 207, "mini_crystal_20": 207, "crystal_20": 207, "1059": 207, "electron": [207, 209, 211], "bump": 207, "refactor": 207, "deprec": 207, "usag": [207, 209], "register_gate_implement": 207, "imposs": 207, "retain": [207, 211], "rapidjson": 207, "685": 207, "previous": 207, "x90": 207, "were": 207, "though": [207, 208, 209], "codebas": 207, "467": 207, "speed": 207, "reshap": 207, "faster": 207, "neither": [207, 209], "assing": 207, "signific": 207, "speedup": 207, "anywai": 207, "diffrenet": 207, "broader": 207, "numpi": [207, 214], "verifi": 207, "compatibili": 207, "ruff": 207, "migrat": 207, "guid": 207, "builtin": 207, "easili": [207, 210, 214], "quantumcircuit": 207, "extract": 207, "crf_acstarkcrf": 207, "slepian_acstarkcrf": 207, "repo": 207, "organ": [207, 214], "1042": 207, "disabl": 207, "horizont": 207, "scroll": 207, "toggl": 207, "cover": 207, "concept": [207, 209, 210], "531": 207, "gitlab": 207, "public": 207, "page": [207, 210, 211], "776": 207, "mr": 207, "514": 207, "client": [207, 208, 209, 210], "licens": [207, 210], "apach": [207, 211], "extlink": 207, "sphinx": 207, "916": 207, "intersphinx": 207, "665": 207, "becaus": [207, 209], "proper": 207, "realiz": [207, 213], "former": 207, "semant": [207, 208], "disturb": 207, "774": 207, "leak": 207, "web": 207, "artifact": 207, "resetwait": 207, "comfort": [207, 209], "timelin": [207, 208], "broken": 207, "redisplai": 207, "upcom": 207, "releas": 207, "prefer": [207, 209, 211], "font": 207, "viewer": 207, "358": 207, "typo": 207, "api": [207, 209, 210, 214], "workflow": [207, 214], "meth": 207, "pulla": [207, 210, 214], "crash": 207, "discoveri": 207, "throw": 207, "sc": 207, "nonsens": 207, "mcm": 207, "cc_prx": [207, 212], "merge_dict": 207, "crf_crf": 207, "interfac": [207, 209, 211], "feedback_label": 207, "conditional_prx": 207, "hopefulli": 207, "yml": 207, "conditionalreset": 207, "mid": 207, "constant_qnd": 207, "qndness": 207, "phase_increment_befor": 207, "sign": 207, "phase_transform": 207, "fulfil": 207, "satisfi": [207, 212], "conditionalprx": 207, "accept": [207, 211], "signifi": 207, "weigth": 207, "canon": [207, 209], "whitelist": 207, "2112": 207, "write": [207, 209, 211], "1831": 207, "drag_crf_sx": 207, "drag_gaussian_sx": 207, "prx_u": 207, "prx_sx": 207, "_x_pi_puls": 207, "547": 207, "prioritis": 207, "1929": 207, "1468": 207, "programm": 207, "1925": 207, "crude": 207, "visual": [207, 208, 212], "measure_nop": 207, "validate_move_instruct": 207, "2056": 207, "pipelin": [207, 212], "overview": 208, "terminologi": 208, "deliv": 208, "send": [208, 212], "assembli": 208, "batch": 208, "summar": 208, "imag": [208, 212], "illustr": [208, 212], "visibl": 208, "microwav": [208, 210], "ambigu": 208, "machin": 208, "violat": 208, "concern": 208, "philosophi": 208, "inaccess": 208, "attempt": 208, "smart": 208, "magic": 208, "inconsist": 208, "transpar": 208, "technic": 208, "apart": 208, "few": 208, "instant": 208, "thought": [208, 212], "desir": [208, 214], "read": [208, 212, 214], "disjoint": [208, 214], "partli": 208, "figur": [208, 212], "demonstr": 208, "explain": 208, "necessarili": [208, 209, 211], "variou": [208, 209], "runtim": [208, 212, 214], "bridg": 208, "gap": 208, "repeat": [208, 214], "repetit": 208, "encod": 208, "aim": 208, "fit": [208, 211], "chunk": 208, "inspect_playlist": 208, "neat": 208, "metadata": 209, "question": [209, 214], "cnot": 209, "NOT": 209, "On": [209, 212], "hand": 209, "frozen": 209, "programmat": 209, "procedur": 209, "invok": 209, "random": 209, "benchmark": 209, "getter": 209, "qc": 209, "introduc": 209, "emphasi": 209, "def": 209, "_default": 209, "implementation_": 209, "default_prx_qb1": 209, "special_prx_qb1": 209, "my_special_prx": 209, "default_box": 209, "chain": [209, 212], "default_cz_box": 209, "pure": 209, "develop": 209, "thumb": 209, "rest": 209, "simplifi": [209, 212], "educ": 209, "__class__": 209, "__name__": 209, "subsect": 209, "relai": 209, "live": 209, "asymmetr": 209, "tri": 209, "replic": 209, "mandatori": 209, "alter": 209, "physcial": 209, "averag": 209, "mu": 209, "spread": 209, "recip": 209, "offset_coord": 209, "exp": 209, "resampl": 209, "understand": [209, 212, 213], "unitless": 209, "scalar_coeffieci": 209, "quick": [209, 210, 214], "simplest": 209, "composteg": 209, "compositehadamard": 209, "hadamard": 209, "_this_": 209, "member_prx": 209, "latter": 209, "onelin": 209, "prx_mycoolwaveform": 209, "coolwaveformi": 209, "coolwaveformq": 209, "my": 209, "cool": 209, "cz_mycoolwaveform": 209, "coolcouplerwaveform": 209, "coolqubitwaveform": 209, "measure_mycoolwaveform": 209, "preload": 209, "altogeth": 209, "snippet": 209, "cnot_matrix": 209, "cnot_op": 209, "my_build": 209, "my_cnot_impl": 209, "mycnotclass": 209, "implementation_class": 209, "access": [209, 214], "13": 210, "date": [210, 211], "2025": 210, "high": [210, 213], "unifi": 210, "hide": 210, "But": 210, "framework": [210, 214], "machineri": 210, "standalon": 210, "librari": [210, 212], "encourag": [210, 214], "familiar": 210, "especi": [210, 214], "miscellan": 210, "pitfal": 210, "changelog": 210, "search": 210, "januari": 211, "2004": [211, 213], "www": 211, "org": 211, "AND": 211, "FOR": 211, "reproduct": 211, "distribut": 211, "shall": 211, "9": [211, 212, 214], "licensor": 211, "copyright": 211, "owner": 211, "entiti": 211, "author": 211, "grant": 211, "legal": 211, "power": 211, "indirect": 211, "manag": 211, "contract": 211, "ii": 211, "ownership": 211, "fifti": 211, "percent": 211, "outstand": 211, "iii": 211, "benefici": 211, "exercis": 211, "permiss": 211, "modif": 211, "softwar": [211, 213], "mechan": 211, "translat": 211, "media": 211, "authorship": 211, "notic": [211, 214], "editori": 211, "revis": 211, "elabor": 211, "mere": 211, "bind": 211, "thereof": 211, "contribut": 211, "intention": 211, "submit": 211, "inclus": 211, "behalf": 211, "verbal": 211, "written": 211, "commun": 211, "mail": 211, "discuss": 211, "conspicu": 211, "Not": [211, 214], "contributor": 211, "whom": 211, "incorpor": 211, "herebi": 211, "perpetu": 211, "worldwid": 211, "exclus": 211, "charg": 211, "royalti": 211, "free": [211, 213], "irrevoc": 211, "reproduc": 211, "publicli": 211, "sublicens": 211, "patent": 211, "offer": 211, "sell": 211, "claim": 211, "infring": 211, "alon": 211, "institut": 211, "litig": 211, "counterclaim": 211, "lawsuit": 211, "alleg": 211, "contributori": 211, "termin": 211, "redistribut": 211, "medium": 211, "meet": 211, "recipi": 211, "promin": 211, "trademark": 211, "pertain": 211, "along": 211, "wherev": 211, "third": 211, "parti": 211, "alongsid": 211, "addendum": 211, "constru": 211, "statement": [211, 212], "compli": 211, "submiss": 211, "notwithstand": 211, "herein": 211, "supersed": 211, "agreement": 211, "regard": 211, "trade": 211, "servic": 211, "customari": 211, "disclaim": 211, "warranti": 211, "law": 211, "agre": 211, "AS": 211, "OR": 211, "OF": 211, "kind": 211, "titl": 211, "merchant": 211, "sole": 211, "risk": 211, "liabil": 211, "event": 211, "theori": 211, "tort": 211, "neglig": 211, "deliber": 211, "grossli": 211, "liabl": 211, "damag": 211, "incident": 211, "consequenti": 211, "inabl": 211, "loss": 211, "goodwil": 211, "stoppag": 211, "failur": 211, "malfunct": 211, "commerci": 211, "fee": 211, "indemn": 211, "oblig": 211, "indemnifi": 211, "harmless": 211, "incur": 211, "assert": 211, "boilerpl": 211, "enclos": 211, "bracket": 211, "comment": 211, "easier": 211, "identif": 211, "archiv": 211, "2024": [211, 213], "complianc": 211, "govern": 211, "show": 212, "flexibl": 212, "goal": 212, "finit": 212, "condition": 212, "qccsw": 212, "excut": 212, "too": 212, "earli": 212, "facilit": 212, "travel": 212, "conditionalinstrucion": 212, "equaival": 212, "feedaback_kei": 212, "reset_qb2": 212, "set_qb3_to_1": 212, "cc_prx_qb4": 212, "2nd": [212, 213], "prx_qb3": 212, "prx_qb4": 212, "80e": [212, 214], "clariti": 212, "bottom": 212, "master": 212, "slave": 212, "compens": 212, "trigger_delai": 212, "explan": 212, "end_delai": 212, "spcecifi": 212, "trigger_mast": 212, "emit": 212, "daisi": 212, "central": 212, "cabl": 212, "eric": 213, "hyypp": 213, "\u00e4": 213, "antti": 213, "vep": 213, "inen": 213, "miha": 213, "papi": 213, "\u010d": 213, "chun": 213, "fai": 213, "chan": 213, "sinan": 213, "inel": 213, "alessandro": 213, "landra": 213, "wei": 213, "liu": 213, "\u00fc": 213, "rgen": 213, "luu": 213, "fabian": 213, "marxer": 213, "caspar": 213, "ockeloen": 213, "korppi": 213, "reduc": 213, "superconduct": 213, "processor": 213, "030353": 213, "doi": 213, "1103": 213, "prxquantum": 213, "john": 213, "martini": 213, "michael": 213, "geller": 213, "_z": 213, "phy": 213, "rev": 213, "022307": 213, "aug": 213, "2014": 213, "arxiv": 213, "1402": 213, "5467": 213, "physreva": 213, "lyon": 213, "digit": 213, "prentic": 213, "hall": 213, "edit": 213, "isbn": 213, "978": 213, "0131089891": 213, "cecilia": 213, "gisel": 213, "jarn": 213, "heurist": 213, "approach": 213, "anal": 213, "afa": 213, "29": 213, "51": 213, "57": 213, "2018": 213, "1703": 213, "06812": 213, "31527": 213, "analesafa": 213, "eyob": 213, "sete": 213, "nicola": 213, "didier": 213, "angela": 213, "chen": 213, "shobhan": 213, "kulshreshtha": 213, "riccardo": 213, "manenti": 213, "stefano": 213, "poletto": 213, "entangl": 213, "appl": 213, "024050": 213, "2021": 213, "2104": 213, "03511": 213, "physrevappli": 213, "youngkyu": 213, "sung": 213, "leon": 213, "ding": 213, "jochen": 213, "braum\u00fcller": 213, "veps\u00e4l\u00e4inen": 213, "bharath": 213, "kannan": 213, "morten": 213, "kjaergaard": 213, "ami": 213, "green": 213, "gabriel": 213, "o": 213, "samach": 213, "chri": 213, "mcnalli": 213, "david": 213, "kim": 213, "alexand": 213, "melvil": 213, "bethani": 213, "niedzielski": 213, "molli": 213, "schwartz": 213, "jonilyn": 213, "yoder": 213, "terri": 213, "orlando": 213, "simon": 213, "gustavsson": 213, "william": 213, "oliv": 213, "fidel": 213, "zz": 213, "021058": 213, "jun": 213, "2011": 213, "01261": 213, "physrevx": 213, "capabl": 214, "ask": 214, "recogn": 214, "cz_gate_impl": 214, "prx_gate_impl": 214, "measure_gate_impl": 214, "keyword": 214, "instanti": 214, "x180": 214, "y90": 214, "100e": 214, "decid": 214, "p1": 214, "p2": 214, "handi": 214, "circuit3": 214, "sub": 214, "word": 214, "slide": 214, "past": 214, "neighbour": 214, "neighbourhood": 214, "worri": 214, "advers": 214, "ruin": 214, "best": 214, "arrang": 214, "aid": 214, "discov": 214, "all_qubit": 214, "get_neighbor_locus_compon": 214, "160e": 214, "cz_schedul": 214, "forget": 214}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [111, 0, 0, "-", "playlist"], [175, 0, 0, "-", "quantum_ops"], [180, 0, 0, "-", "scheduler"], [188, 0, 0, "-", "timebox"], [193, 0, 0, "-", "utils"], [198, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "default_implementations"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 4, 1, "", "build"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 4, 1, "", "needs_calibration"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [71, 0, 0, "-", "move"], [78, 0, 0, "-", "prx"], [94, 1, 1, "", "register_implementation"], [95, 0, 0, "-", "reset"], [100, 0, 0, "-", "rz"], [106, 0, 0, "-", "sx"], [108, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[72, 2, 1, "", "MOVE_CRF_CRF"], [73, 2, 1, "", "MOVE_CustomWaveforms"], [74, 2, 1, "", "MOVE_TGSS_CRF"], [75, 2, 1, "", "MoveMarker"], [76, 1, 1, "", "apply_move_gate_phase_corrections"], [77, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[72, 3, 1, "", "coupler_wave"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "qubit_wave"], [72, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[73, 4, 1, "", "_call"], [73, 3, 1, "", "coupler_wave"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "qubit_wave"], [73, 3, 1, "", "root_parameters"], [73, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[74, 3, 1, "", "coupler_wave"], [74, 3, 1, "", "parameters"], [74, 3, 1, "", "qubit_wave"], [74, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[75, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[79, 2, 1, "", "ABC_Constant_smooth"], [80, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [81, 2, 1, "", "PRX_CustomWaveforms"], [82, 2, 1, "", "PRX_CustomWaveformsSX"], [83, 2, 1, "", "PRX_DRAGCosineRiseFall"], [84, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [85, 2, 1, "", "PRX_DRAGGaussian"], [86, 2, 1, "", "PRX_DRAGGaussianSX"], [87, 2, 1, "", "PRX_FastDrag"], [88, 2, 1, "", "PRX_FastDragSX"], [89, 2, 1, "", "PRX_GateImplementation"], [90, 2, 1, "", "PRX_HdDrag"], [91, 2, 1, "", "PRX_HdDragSX"], [92, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [93, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[79, 4, 1, "", "_call"], [79, 4, 1, "", "_fall_pulse"], [79, 4, 1, "", "_main_pulse"], [79, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[80, 3, 1, "", "fall_waveform"], [80, 3, 1, "", "main_waveform"], [80, 3, 1, "", "parameters"], [80, 3, 1, "", "rise_waveform"], [80, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[81, 4, 1, "", "_get_pulse"], [81, 3, 1, "", "dependent_waves"], [81, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[82, 4, 1, "", "_call"], [82, 4, 1, "", "_get_pulse"], [82, 3, 1, "", "dependent_waves"], [82, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[83, 4, 1, "", "_get_pulse"], [83, 3, 1, "", "dependent_waves"], [83, 3, 1, "", "excluded_parameters"], [83, 3, 1, "", "parameters"], [83, 3, 1, "", "wave_i"], [83, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[84, 4, 1, "", "_get_pulse"], [84, 3, 1, "", "dependent_waves"], [84, 3, 1, "", "excluded_parameters"], [84, 3, 1, "", "parameters"], [84, 3, 1, "", "wave_i"], [84, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[85, 3, 1, "", "dependent_waves"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "wave_i"], [85, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "parameters"], [86, 3, 1, "", "wave_i"], [86, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[87, 3, 1, "", "dependent_waves"], [87, 3, 1, "", "parameters"], [87, 3, 1, "", "wave_i"], [87, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[88, 3, 1, "", "dependent_waves"], [88, 3, 1, "", "parameters"], [88, 3, 1, "", "wave_i"], [88, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[89, 4, 1, "", "_call"], [89, 4, 1, "", "clifford"], [89, 4, 1, "", "get_locus_mapping_name"], [89, 4, 1, "", "rx"], [89, 4, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[90, 3, 1, "", "dependent_waves"], [90, 3, 1, "", "parameters"], [90, 3, 1, "", "wave_i"], [90, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[91, 3, 1, "", "dependent_waves"], [91, 3, 1, "", "parameters"], [91, 3, 1, "", "wave_i"], [91, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[92, 4, 1, "", "_call"], [92, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[96, 6, 1, "", "RESET_FEEDBACK_KEY"], [97, 6, 1, "", "RESET_MEASUREMENT_KEY"], [98, 2, 1, "", "Reset_Conditional"], [99, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[98, 4, 1, "", "_call"], [98, 4, 1, "", "get_locus_mapping_name"], [98, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[99, 4, 1, "", "_call"], [99, 4, 1, "", "duration_in_seconds"], [99, 4, 1, "", "get_custom_locus_mapping"], [99, 3, 1, "", "parameters"], [99, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[101, 2, 1, "", "RZ_ACStarkShift"], [102, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [103, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [104, 2, 1, "", "RZ_Virtual"], [105, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[101, 4, 1, "", "_ac_stark_pulse"], [101, 4, 1, "", "_call"], [101, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[102, 3, 1, "", "ac_stark_waveform"], [102, 3, 1, "", "parameters"], [102, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[103, 3, 1, "", "fall_waveform"], [103, 3, 1, "", "main_waveform"], [103, 3, 1, "", "parameters"], [103, 3, 1, "", "rise_waveform"], [103, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[104, 4, 1, "", "_call"], [104, 4, 1, "", "duration_in_seconds"], [104, 4, 1, "", "get_locus_mapping_name"], [104, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[107, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[107, 4, 1, "", "_call"], [107, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[109, 2, 1, "", "UGate"], [110, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[109, 4, 1, "", "_call"], [109, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[112, 0, 0, "-", "channel"], [122, 0, 0, "-", "fast_drag"], [132, 0, 0, "-", "hd_drag"], [142, 0, 0, "-", "instructions"], [157, 0, 0, "-", "playlist"], [158, 0, 0, "-", "schedule"], [163, 0, 0, "-", "visualisation"], [166, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[113, 2, 1, "", "ChannelConfiguration"], [114, 2, 1, "", "ChannelDescription"], [115, 2, 1, "", "ChannelProperties"], [116, 2, 1, "", "IQChannelConfig"], [117, 2, 1, "", "ProbeChannelProperties"], [118, 2, 1, "", "RealChannelConfig"], [119, 1, 1, "", "get_channel_properties"], [120, 1, 1, "", "get_channel_properties_from_station_settings"], [121, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[114, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[115, 3, 1, "", "blocks_component"], [115, 3, 1, "", "compatible_instructions"], [115, 4, 1, "", "duration_to_int_samples"], [115, 4, 1, "", "duration_to_samples"], [115, 4, 1, "", "duration_to_seconds"], [115, 3, 1, "", "instruction_duration_granularity"], [115, 3, 1, "", "instruction_duration_min"], [115, 3, 1, "", "is_iq"], [115, 3, 1, "", "is_virtual"], [115, 4, 1, "", "round_duration_to_granularity"], [115, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[116, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[117, 3, 1, "", "center_frequency"], [117, 3, 1, "", "integration_start_dead_time"], [117, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[118, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[123, 2, 1, "", "FastDrag"], [124, 2, 1, "", "FastDragI"], [125, 2, 1, "", "FastDragQ"], [126, 2, 1, "", "SuppressedPulse"], [127, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [128, 1, 1, "", "evaluate_fast_drag_i_envelope"], [129, 1, 1, "", "evaluate_fast_drag_q_envelope"], [130, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [131, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[123, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[124, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[125, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[126, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[133, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [134, 2, 1, "", "HdDrag"], [135, 2, 1, "", "HdDragI"], [136, 2, 1, "", "HdDragQ"], [137, 1, 1, "", "evaluate_hd_drag_i_envelope"], [138, 1, 1, "", "evaluate_hd_drag_q_envelope"], [139, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [140, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [141, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[134, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[135, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[136, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[143, 2, 1, "", "AcquisitionMethod"], [144, 2, 1, "", "Block"], [145, 2, 1, "", "ComplexIntegration"], [146, 2, 1, "", "ConditionalInstruction"], [147, 2, 1, "", "FluxPulse"], [148, 2, 1, "", "IQPulse"], [149, 2, 1, "", "Instruction"], [150, 2, 1, "", "MultiplexedIQPulse"], [151, 2, 1, "", "ReadoutTrigger"], [152, 2, 1, "", "RealPulse"], [153, 2, 1, "", "ThresholdStateDiscrimination"], [154, 2, 1, "", "TimeTrace"], [155, 2, 1, "", "VirtualRZ"], [156, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[143, 3, 1, "", "delay_samples"], [143, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[145, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[146, 3, 1, "", "condition"], [146, 4, 1, "", "get_child_instructions"], [146, 3, 1, "", "outcomes"], [146, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[147, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[148, 4, 1, "", "get_waveforms"], [148, 3, 1, "", "modulation_frequency"], [148, 3, 1, "", "phase"], [148, 3, 1, "", "phase_increment"], [148, 3, 1, "", "scale_i"], [148, 3, 1, "", "scale_q"], [148, 4, 1, "", "validate"], [148, 3, 1, "", "wave_i"], [148, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[149, 4, 1, "", "copy"], [149, 3, 1, "", "duration"], [149, 4, 1, "", "get_child_instructions"], [149, 4, 1, "", "get_waveforms"], [149, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[150, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[151, 3, 1, "", "acquisitions"], [151, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[152, 4, 1, "", "get_waveforms"], [152, 3, 1, "", "scale"], [152, 4, 1, "", "validate"], [152, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[153, 3, 1, "", "feedback_signal_label"], [153, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[154, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[155, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[159, 2, 1, "", "Nothing"], [160, 2, 1, "", "Schedule"], [161, 2, 1, "", "Segment"], [162, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[160, 4, 1, "", "add_channels"], [160, 4, 1, "", "append"], [160, 4, 1, "", "channels"], [160, 4, 1, "", "cleanup"], [160, 4, 1, "", "copy"], [160, 5, 1, "", "duration"], [160, 4, 1, "", "duration_in_seconds"], [160, 4, 1, "", "extend"], [160, 4, 1, "", "front_pad"], [160, 4, 1, "", "front_pad_in_seconds"], [160, 4, 1, "", "has_content_in"], [160, 4, 1, "", "items"], [160, 4, 1, "", "pad_to_hard_box"], [160, 4, 1, "", "pad_to_hard_box_in_seconds"], [160, 4, 1, "", "pprint"], [160, 4, 1, "", "reverse"], [160, 4, 1, "", "reverse_hard_box"], [160, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[161, 3, 1, "", "_duration"], [161, 3, 1, "", "_instructions"], [161, 4, 1, "", "append"], [161, 4, 1, "", "copy"], [161, 5, 1, "", "duration"], [161, 4, 1, "", "extend"], [161, 4, 1, "", "pop"], [161, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[164, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[165, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[167, 2, 1, "", "Chirp"], [168, 2, 1, "", "ChirpImag"], [169, 2, 1, "", "Cosine"], [170, 2, 1, "", "CosineFall"], [171, 2, 1, "", "CosineRise"], [172, 2, 1, "", "CosineRiseFallDerivative"], [173, 2, 1, "", "ModulatedCosineRiseFall"], [174, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[167, 4, 1, "", "_sample"], [167, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[168, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[169, 4, 1, "", "_sample"], [169, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[170, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[171, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[172, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[173, 4, 1, "", "_sample"], [173, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[174, 4, 1, "", "_sample"], [174, 4, 1, "", "_sample_normalized_slepian"], [174, 4, 1, "", "_t_tau"], [174, 4, 1, "", "_theta_tau"], [174, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[176, 2, 1, "", "QuantumOp"], [177, 6, 1, "", "QuantumOpTable"], [178, 1, 1, "", "validate_locus_calibration"], [179, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[176, 3, 1, "", "arity"], [176, 4, 1, "", "copy"], [176, 5, 1, "", "default_implementation"], [176, 3, 1, "", "defaults_for_locus"], [176, 3, 1, "", "factorizable"], [176, 4, 1, "", "get_default_implementation_for_locus"], [176, 3, 1, "", "implementations"], [176, 3, 1, "", "name"], [176, 3, 1, "", "params"], [176, 4, 1, "", "set_default_implementation"], [176, 4, 1, "", "set_default_implementation_for_locus"], [176, 3, 1, "", "symmetric"], [176, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[181, 6, 1, "", "BLOCKING"], [182, 6, 1, "", "NONSOLID"], [183, 2, 1, "", "SegmentPointer"], [184, 1, 1, "", "extend_hard_boundary"], [185, 1, 1, "", "extend_hard_boundary_in_seconds"], [186, 1, 1, "", "extend_schedule"], [187, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[183, 3, 1, "", "TOL"], [183, 4, 1, "", "cut_tail"], [183, 4, 1, "", "fastforward"], [183, 3, 1, "", "frac"], [183, 4, 1, "", "get"], [183, 3, 1, "", "idx"], [183, 4, 1, "", "next"], [183, 5, 1, "", "remainder"], [183, 4, 1, "", "rewind"], [183, 3, 1, "", "source"], [183, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[189, 2, 1, "", "MultiplexedProbeTimeBox"], [190, 2, 1, "", "SchedulingAlgorithm"], [191, 2, 1, "", "SchedulingStrategy"], [192, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[189, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[190, 3, 1, "", "HARD_BOUNDARY"], [190, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[191, 3, 1, "", "ALAP"], [191, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[192, 3, 1, "", "atom"], [192, 4, 1, "", "atomic"], [192, 3, 1, "", "children"], [192, 4, 1, "", "composite"], [192, 3, 1, "", "label"], [192, 3, 1, "", "locus_components"], [192, 3, 1, "", "neighborhood_components"], [192, 4, 1, "", "print"], [192, 3, 1, "", "scheduling"], [192, 3, 1, "", "scheduling_algorithm"], [192, 4, 1, "", "set_alap"], [192, 4, 1, "", "set_asap"], [192, 4, 1, "", "validate"]], "iqm.pulse.utils": [[194, 1, 1, "", "load_yaml"], [195, 1, 1, "", "map_waveform_param_types"], [196, 1, 1, "", "normalize_angle"], [197, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[199, 2, 1, "", "AWGScheduleValidationData"], [200, 7, 1, "", "AWGScheduleValidationError"], [201, 7, 1, "", "InvalidInstructionError"], [202, 7, 1, "", "PlaylistValidationError"], [203, 1, 1, "", "validate_awg_and_schedule_compatibility"], [204, 1, 1, "", "validate_channel"], [205, 1, 1, "", "validate_instruction_and_wf_length"], [206, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 208, 213], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 76, 77, 93, 94, 96, 97, 105, 110, 119, 120, 121, 127, 128, 129, 130, 131, 133, 137, 138, 139, 140, 141, 162, 165, 177, 178, 179, 181, 182, 184, 185, 186, 187, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 210, 212], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 76, 77, 93, 94, 96, 97, 105, 110, 119, 120, 121, 127, 128, 129, 130, 131, 133, 137, 138, 139, 140, 141, 162, 165, 177, 178, 179, 181, 182, 184, 185, 186, 187, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 210], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 214], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 208, 209], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 76, 77, 93, 94, 96, 97, 105, 110, 209], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 162], "get_implementation_class": 65, "measur": [66, 212], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "move": [71, 76, 77], "move_crf_crf": 72, "move_customwaveform": 73, "move_tgss_crf": 74, "movemark": 75, "apply_move_gate_phase_correct": 76, "validate_move_instruct": 77, "prx": [78, 93], "abc_constant_smooth": 79, "constant_prx_with_smooth_rise_fal": 80, "prx_customwaveform": 81, "prx_customwaveformssx": 82, "prx_dragcosinerisefal": 83, "prx_dragcosinerisefallsx": 84, "prx_draggaussian": 85, "prx_draggaussiansx": 86, "prx_fastdrag": 87, "prx_fastdragsx": 88, "prx_gateimplement": 89, "prx_hddrag": 90, "prx_hddragsx": 91, "prx_singlepulse_gateimplement": 92, "get_unitary_prx": 93, "register_implement": 94, "reset": [95, 96, 97], "reset_feedback_kei": 96, "reset_measurement_kei": 97, "reset_condit": 98, "reset_wait": 99, "rz": [100, 105], "rz_acstarkshift": 101, "rz_acstarkshift_cosinerisefal": 102, "rz_acstarkshift_smoothconst": 103, "rz_virtual": 104, "get_unitary_rz": 105, "sx": 106, "sxgate": 107, "u": [108, 110], "ugat": 109, "get_unitary_u": 110, "playlist": [111, 119, 120, 121, 127, 128, 129, 130, 131, 133, 137, 138, 139, 140, 141, 157, 162, 165, 208], "channel": [112, 119, 120, 121], "channelconfigur": 113, "channeldescript": 114, "channelproperti": 115, "iqchannelconfig": 116, "probechannelproperti": 117, "realchannelconfig": 118, "get_channel_properti": 119, "get_channel_properties_from_station_set": 120, "round_duration_to_granularity_sampl": 121, "fast_drag": [122, 127, 128, 129, 130, 131], "fastdrag": 123, "fastdragi": 124, "fastdragq": 125, "suppressedpuls": 126, "compute_matrix_of_summed_fourier_transform_inner_product": 127, "evaluate_fast_drag_i_envelop": 128, "evaluate_fast_drag_q_envelop": 129, "fourier_transform_of_cos_basis_functions_as_tensor": 130, "solve_fast_coefficients_for_given_weights_and_rang": 131, "hd_drag": [132, 133, 137, 138, 139, 140, 141], "cosine_coefficients_dict": 133, "hddrag": 134, "hddragi": 135, "hddragq": 136, "evaluate_hd_drag_i_envelop": 137, "evaluate_hd_drag_q_envelop": 138, "evaluate_nth_derivative_of_basis_envelop": 139, "solve_cosine_coefs_for_hd_drag": 140, "solve_hd_drag_coefficients_from_suppressed_frequ": 141, "instruct": [142, 149, 208, 209], "acquisitionmethod": 143, "block": [144, 181], "complexintegr": 145, "conditionalinstruct": 146, "fluxpuls": 147, "iqpuls": 148, "multiplexediqpuls": 150, "readouttrigg": [151, 212], "realpuls": 152, "thresholdstatediscrimin": 153, "timetrac": 154, "virtualrz": 155, "wait": 156, "schedul": [158, 160, 162, 180, 181, 182, 184, 185, 186, 187, 208, 214], "noth": 159, "segment": 161, "visualis": [163, 165], "base": [164, 165, 209], "inspect_playlist": 165, "waveform": [166, 209], "chirp": 167, "chirpimag": 168, "cosin": 169, "cosinefal": 170, "cosineris": 171, "cosinerisefallderiv": 172, "modulatedcosinerisefal": 173, "slepian": 174, "quantum_op": [175, 177, 178, 179], "quantumop": [176, 208, 209], "quantumopt": 177, "validate_locus_calibr": 178, "validate_op_calibr": 179, "nonsolid": 182, "segmentpoint": 183, "extend_hard_boundari": 184, "extend_hard_boundary_in_second": 185, "extend_schedul": 186, "extend_schedule_new": 187, "timebox": [188, 192, 208, 214], "multiplexedprobetimebox": 189, "schedulingalgorithm": 190, "schedulingstrategi": 191, "util": [193, 194, 195, 196, 197], "load_yaml": 194, "map_waveform_param_typ": 195, "normalize_angl": 196, "phase_transform": 197, "valid": [198, 200, 201, 202, 203, 204, 205, 206], "awgschedulevalidationdata": 199, "awgschedulevalidationerror": 200, "invalidinstructionerror": 201, "playlistvalidationerror": 202, "validate_awg_and_schedule_compat": 203, "validate_channel": 204, "validate_instruction_and_wf_length": 205, "validate_playlist_compat": 206, "changelog": 207, "version": 207, "8": 207, "13": 207, "2025": 207, "04": 207, "07": 207, "featur": [207, 214], "12": 207, "03": 207, "11": 207, "02": 207, "10": 207, "9": 207, "28": 207, "7": 207, "27": 207, "6": 207, "26": 207, "5": 207, "bug": 207, "fix": 207, "4": 207, "21": 207, "3": 207, "19": 207, "2": 207, "1": 207, "0": 207, "24": 207, "20": 207, "23": 207, "22": 207, "18": 207, "17": 207, "16": 207, "15": 207, "01": 207, "14": 207, "08": 207, "2024": 207, "30": 207, "09": 207, "05": 207, "29": 207, "break": 207, "chang": 207, "31": 207, "25": 207, "06": 207, "concept": 208, "class": [208, 209], "quick": 208, "custom": 209, "implement": 209, "calibr": 209, "data": 209, "more": 209, "regist": 209, "content": 210, "indic": 210, "tabl": 210, "licens": 211, "time": 212, "fast": 212, "feedback": 212, "us": 214, "creat": 214, "compos": 214, "resolv": 214, "miscellan": 214, "common": 214, "pitfal": 214}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "builder": [[4, "module-iqm.pulse.builder"]], "CircuitOperation": [[5, "circuitoperation"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[17, "compositecache"]], "CompositeGate": [[18, "compositegate"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "GateImplementation": [[20, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[31, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[33, "module-iqm.pulse.gates"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "Barrier": [[35, "barrier"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[41, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[44, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[55, "delay"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[58, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[60, "xygate"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[67, "measure-constant"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "move": [[71, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[72, "move-crf-crf"]], "MOVE_CustomWaveforms": [[73, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[74, "move-tgss-crf"]], "MoveMarker": [[75, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[76, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[77, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[78, "module-iqm.pulse.gates.prx"]], "ABC_Constant_smooth": [[79, "abc-constant-smooth"]], "Constant_PRX_with_smooth_rise_fall": [[80, "constant-prx-with-smooth-rise-fall"]], "PRX_CustomWaveforms": [[81, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[82, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[83, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[84, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[85, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[86, "prx-draggaussiansx"]], "PRX_FastDrag": [[87, "prx-fastdrag"]], "PRX_FastDragSX": [[88, "prx-fastdragsx"]], "PRX_GateImplementation": [[89, "prx-gateimplementation"]], "PRX_HdDrag": [[90, "prx-hddrag"]], "PRX_HdDragSX": [[91, "prx-hddragsx"]], "PRX_SinglePulse_GateImplementation": [[92, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[93, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[94, "iqm-pulse-gates-register-implementation"]], "reset": [[95, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[96, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[97, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[98, "reset-conditional"]], "Reset_Wait": [[99, "reset-wait"]], "rz": [[100, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[101, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[102, "rz-acstarkshift-cosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[103, "rz-acstarkshift-smoothconstant"]], "RZ_Virtual": [[104, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[105, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[106, "module-iqm.pulse.gates.sx"]], "SXGate": [[107, "sxgate"]], "u": [[108, "module-iqm.pulse.gates.u"]], "UGate": [[109, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[110, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[111, "module-iqm.pulse.playlist"], [157, "module-iqm.pulse.playlist.playlist"]], "channel": [[112, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[113, "channelconfiguration"]], "ChannelDescription": [[114, "channeldescription"]], "ChannelProperties": [[115, "channelproperties"]], "IQChannelConfig": [[116, "iqchannelconfig"]], "ProbeChannelProperties": [[117, "probechannelproperties"]], "RealChannelConfig": [[118, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[119, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[120, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[121, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "fast_drag": [[122, "module-iqm.pulse.playlist.fast_drag"]], "FastDrag": [[123, "fastdrag"]], "FastDragI": [[124, "fastdragi"]], "FastDragQ": [[125, "fastdragq"]], "SuppressedPulse": [[126, "suppressedpulse"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[127, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[128, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[129, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[130, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[131, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "hd_drag": [[132, "module-iqm.pulse.playlist.hd_drag"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[133, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "HdDrag": [[134, "hddrag"]], "HdDragI": [[135, "hddragi"]], "HdDragQ": [[136, "hddragq"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[137, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[138, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[139, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[140, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[141, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "instructions": [[142, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[143, "acquisitionmethod"]], "Block": [[144, "block"]], "ComplexIntegration": [[145, "complexintegration"]], "ConditionalInstruction": [[146, "conditionalinstruction"]], "FluxPulse": [[147, "fluxpulse"]], "IQPulse": [[148, "iqpulse"]], "Instruction": [[149, "instruction"]], "MultiplexedIQPulse": [[150, "multiplexediqpulse"]], "ReadoutTrigger": [[151, "readouttrigger"]], "RealPulse": [[152, "realpulse"]], "ThresholdStateDiscrimination": [[153, "thresholdstatediscrimination"]], "TimeTrace": [[154, "timetrace"]], "VirtualRZ": [[155, "virtualrz"]], "Wait": [[156, "wait"]], "schedule": [[158, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[159, "nothing"]], "Schedule": [[160, "schedule"]], "Segment": [[161, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[162, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[163, "module-iqm.pulse.playlist.visualisation"]], "base": [[164, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[165, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[166, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[167, "chirp"]], "ChirpImag": [[168, "chirpimag"]], "Cosine": [[169, "cosine"]], "CosineFall": [[170, "cosinefall"]], "CosineRise": [[171, "cosinerise"]], "CosineRiseFallDerivative": [[172, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[173, "modulatedcosinerisefall"]], "Slepian": [[174, "slepian"]], "quantum_ops": [[175, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[176, "quantumop"], [209, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[177, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[178, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[179, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[180, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[181, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[182, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[183, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[184, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[185, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[186, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[187, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[188, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[189, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[190, "schedulingalgorithm"]], "SchedulingStrategy": [[191, "schedulingstrategy"]], "TimeBox": [[192, "timebox"]], "utils": [[193, "module-iqm.pulse.utils"]], "iqm.pulse.utils.load_yaml": [[194, "iqm-pulse-utils-load-yaml"]], "iqm.pulse.utils.map_waveform_param_types": [[195, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.normalize_angle": [[196, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[197, "iqm-pulse-utils-phase-transformation"]], "validation": [[198, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[199, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[200, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[201, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[202, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[203, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[204, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[205, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[206, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[207, "changelog"]], "Version 8.13 (2025-04-07)": [[207, "version-8-13-2025-04-07"]], "Features": [[207, "features"], [207, "id5"], [207, "id6"], [207, "id7"], [207, "id8"], [207, "id9"], [207, "id10"], [207, "id13"], [207, "id15"], [207, "id17"], [207, "id18"], [207, "id21"], [207, "id22"], [207, "id25"], [207, "id27"], [207, "id30"], [207, "id31"], [207, "id34"], [207, "id35"], [207, "id36"], [207, "id39"], [207, "id40"], [207, "id43"], [207, "id46"], [207, "id49"], [207, "id52"], [207, "id55"], [207, "id57"], [207, "id60"], [207, "id63"], [207, "id66"], [207, "id68"], [207, "id69"], [207, "id70"], [207, "id76"], [207, "id82"], [207, "id87"], [207, "id89"], [207, "id90"], [207, "id92"], [207, "id95"], [207, "id98"], [207, "id100"], [207, "id103"], [207, "id104"], [207, "id105"], [207, "id106"], [207, "id109"], [207, "id110"], [207, "id112"], [207, "id115"], [207, "id116"], [207, "id117"], [207, "id118"], [207, "id119"], [207, "id120"], [207, "id121"], [207, "id122"], [207, "id125"], [207, "id127"], [207, "id130"], [207, "id132"], [207, "id133"], [207, "id136"]], "Version 8.12 (2025-04-03)": [[207, "version-8-12-2025-04-03"]], "Version 8.11 (2025-04-02)": [[207, "version-8-11-2025-04-02"]], "Version 8.10 (2025-04-02)": [[207, "version-8-10-2025-04-02"]], "Version 8.9 (2025-03-28)": [[207, "version-8-9-2025-03-28"]], "Version 8.8 (2025-03-28)": [[207, "version-8-8-2025-03-28"]], "Version 8.7 (2025-03-27)": [[207, "version-8-7-2025-03-27"]], "Version 8.6 (2025-03-26)": [[207, "version-8-6-2025-03-26"]], "Version 8.5 (2025-03-26)": [[207, "version-8-5-2025-03-26"]], "Bug fix": [[207, "bug-fix"], [207, "id14"], [207, "id33"], [207, "id56"]], "Version 8.4 (2025-03-21)": [[207, "version-8-4-2025-03-21"]], "Version 8.3 (2025-03-19)": [[207, "version-8-3-2025-03-19"]], "Bug fixes": [[207, "bug-fixes"], [207, "id16"], [207, "id32"], [207, "id67"], [207, "id73"], [207, "id74"], [207, "id75"], [207, "id77"], [207, "id85"], [207, "id86"], [207, "id91"], [207, "id93"], [207, "id94"], [207, "id96"], [207, "id126"]], "Version 8.2 (2025-03-13)": [[207, "version-8-2-2025-03-13"]], "Version 8.1 (2025-02-28)": [[207, "version-8-1-2025-02-28"]], "Version 8.0 (2025-02-27)": [[207, "version-8-0-2025-02-27"]], "Version 7.24 (2025-02-20)": [[207, "version-7-24-2025-02-20"]], "Version 7.23 (2025-02-19)": [[207, "version-7-23-2025-02-19"]], "Version 7.22 (2025-02-10)": [[207, "version-7-22-2025-02-10"]], "Version 7.21 (2025-02-07)": [[207, "version-7-21-2025-02-07"]], "Version 7.20 (2025-02-04)": [[207, "version-7-20-2025-02-04"]], "Version 7.19 (2025-02-04)": [[207, "version-7-19-2025-02-04"]], "Bug Fixes": [[207, "id26"]], "Version 7.18 (2025-02-04)": [[207, "version-7-18-2025-02-04"]], "Version 7.17 (2025-02-03)": [[207, "version-7-17-2025-02-03"]], "Version 7.16 (2025-02-03)": [[207, "version-7-16-2025-02-03"]], "Version 7.15 (2025-01-28)": [[207, "version-7-15-2025-01-28"]], "Version 7.14 (2025-01-28)": [[207, "version-7-14-2025-01-28"]], "Version 7.13 (2025-01-28)": [[207, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[207, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[207, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[207, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[207, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[207, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[207, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[207, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[207, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[207, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[207, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[207, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[207, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[207, "version-7-0-2024-11-29"]], "Breaking changes": [[207, "breaking-changes"], [207, "id88"], [207, "id97"], [207, "id99"], [207, "id111"], [207, "id131"]], "Version 6.14 (2024-11-27)": [[207, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[207, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[207, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[207, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[207, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[207, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[207, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[207, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[207, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[207, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[207, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[207, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[207, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[207, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[207, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[207, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[207, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[207, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[207, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[207, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[207, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[207, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[207, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[207, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[207, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[207, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[207, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[207, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[207, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[207, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[207, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[207, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[207, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[207, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[207, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[207, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[207, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[207, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[207, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[207, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[207, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[207, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[207, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[207, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[207, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[207, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[207, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[207, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[207, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[207, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[207, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[207, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[207, "version-1-0-2024-07-01"]], "Concepts and Classes": [[208, "concepts-and-classes"]], "Quick reference": [[208, "quick-reference"]], "Instructions": [[208, "instructions"]], "Schedules": [[208, "schedules"]], "TimeBoxes": [[208, "timeboxes"]], "QuantumOps": [[208, "quantumops"]], "GateImplementations": [[208, "gateimplementations"]], "Playlists": [[208, "playlists"]], "Custom gate implementations": [[209, "custom-gate-implementations"], [209, "id1"]], "GateImplementation class": [[209, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[209, "instructions-waveforms-and-calibration-data"]], "More base classes": [[209, "more-base-classes"]], "Registering gates and implementations": [[209, "registering-gates-and-implementations"]], "IQM Pulse": [[210, "iqm-pulse"]], "Contents": [[210, "contents"]], "Indices and tables": [[210, "indices-and-tables"]], "License": [[211, "license"]], "Pulse timing": [[212, "pulse-timing"]], "Measure and ReadoutTrigger": [[212, "measure-and-readouttrigger"]], "Fast feedback timing": [[212, "fast-feedback-timing"]], "References": [[213, "references"]], "Using ScheduleBuilder": [[214, "using-schedulebuilder"]], "Creating TimeBoxes": [[214, "creating-timeboxes"]], "Composing TimeBoxes": [[214, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[214, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[214, "miscellaneous-features"]], "Common pitfalls": [[214, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [71, "module-iqm.pulse.gates.move"], [78, "module-iqm.pulse.gates.prx"], [95, "module-iqm.pulse.gates.reset"], [100, "module-iqm.pulse.gates.rz"], [106, "module-iqm.pulse.gates.sx"], [108, "module-iqm.pulse.gates.u"], [111, "module-iqm.pulse.playlist"], [112, "module-iqm.pulse.playlist.channel"], [122, "module-iqm.pulse.playlist.fast_drag"], [132, "module-iqm.pulse.playlist.hd_drag"], [142, "module-iqm.pulse.playlist.instructions"], [157, "module-iqm.pulse.playlist.playlist"], [158, "module-iqm.pulse.playlist.schedule"], [163, "module-iqm.pulse.playlist.visualisation"], [164, "module-iqm.pulse.playlist.visualisation.base"], [166, "module-iqm.pulse.playlist.waveforms"], [175, "module-iqm.pulse.quantum_ops"], [180, "module-iqm.pulse.scheduler"], [188, "module-iqm.pulse.timebox"], [193, "module-iqm.pulse.utils"], [198, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[71, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[75, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[75, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[78, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[92, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[92, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[94, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[95, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[96, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[97, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[98, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[98, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[98, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[98, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[99, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[99, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[99, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[99, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[99, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[99, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[100, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[101, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[101, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[101, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[101, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[102, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[102, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[102, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[102, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[104, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[104, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[104, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[104, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[104, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[105, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[106, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[107, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[107, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[107, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[108, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[109, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[109, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[109, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[110, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[111, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[112, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[113, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[114, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[114, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[115, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[115, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[116, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[116, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[117, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[118, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[118, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[119, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[120, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[121, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[122, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[123, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[123, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[124, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[124, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[125, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[125, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[126, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[126, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[127, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[128, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[129, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[130, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[131, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[132, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[133, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[134, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[134, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[135, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[135, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[136, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[136, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[137, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[138, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[139, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[140, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[141, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[142, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[143, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[143, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[143, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[144, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[145, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[145, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[146, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[146, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[146, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[146, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[146, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[147, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[147, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[148, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[148, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[148, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[148, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[149, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[149, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[149, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[149, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[149, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[149, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[150, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[151, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[151, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[151, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[152, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[152, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[152, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[152, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[152, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[153, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[153, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[153, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[154, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[154, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[155, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[155, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[156, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[157, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[158, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[159, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[160, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[160, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[160, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[161, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[161, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[161, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[161, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[161, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[161, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[161, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[161, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[161, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[162, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[163, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[164, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[165, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[166, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[167, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[167, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[167, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[168, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[168, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[169, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[169, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[169, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[170, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[170, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[171, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[171, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[172, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[172, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[173, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[173, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[173, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[174, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[174, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[174, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[174, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[174, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[174, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[175, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[176, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[176, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[176, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[176, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[176, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[176, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[176, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[177, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[178, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[179, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[180, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[181, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[182, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[183, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[183, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[183, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[183, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[183, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[183, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[183, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[183, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[183, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[183, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[183, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[183, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[184, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[185, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[186, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[187, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[188, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[189, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[189, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[190, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[190, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[190, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[191, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[191, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[191, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[192, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[192, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[192, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[192, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[192, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[192, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[192, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[192, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[193, "module-iqm.pulse.utils"]], "load_yaml() (in module iqm.pulse.utils)": [[194, "iqm.pulse.utils.load_yaml"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[195, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[196, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[197, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[198, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[199, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[200, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[201, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[202, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[203, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[204, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[205, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[206, "iqm.pulse.validation.validate_playlist_compatibility"]]}})