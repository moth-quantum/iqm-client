Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_GateImplementation", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 52, 53, 55, 58, 69, 113, 114, 116, 117, 122, 123, 128, 144, 146, 151, 160, 161, 162, 188, 189, 194, 200, 204, 207, 208, 209, 210, 212, 213, 214, 215], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 176, 178, 180, 198, 208, 209, 211, 213, 214, 215], "instruct": [1, 4, 6, 16, 20, 31, 32, 35, 49, 53, 55, 69, 70, 71, 73, 75, 76, 77, 79, 80, 89, 94, 101, 105, 106, 113, 116, 117, 119, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 178, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 198, 199, 202, 204, 206, 207, 208, 211, 213, 215], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 75, 76, 77, 79, 80, 82, 89, 94, 101, 103, 105, 106, 113, 117, 146, 158, 159, 161, 163, 178, 185, 190, 191, 192, 193, 194, 199, 201, 208, 210, 211, 213], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 73, 77, 89, 96, 97, 100, 101, 103, 106, 113, 151, 177, 178, 179, 181, 198, 208, 209, 210, 211, 214, 215], "comput": [1, 5, 6, 16, 31, 69, 73, 100, 110, 113, 117, 128, 129, 132, 133, 135, 136, 137, 138, 149, 151, 162, 163, 178, 182, 186, 187, 194, 198, 208, 209, 210, 211, 212, 215], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 71, 78, 97, 102, 108, 110, 113, 114, 124, 128, 134, 144, 159, 160, 165, 166, 168, 175, 177, 182, 190, 195, 199, 208, 210], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 71, 72, 74, 78, 83, 84, 85, 86, 87, 88, 90, 91, 93, 97, 102, 104, 108, 110, 113, 114, 124, 134, 144, 159, 160, 162, 165, 166, 168, 177, 182, 190, 194, 195, 199, 208], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 134, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 190, 191, 192, 193, 194, 195, 199, 200, 208, 209, 210, 212, 213, 215], "subpackag": [1, 33, 113, 165], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 103, 104, 105, 106, 109, 111, 113, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 134, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 191, 192, 193, 194, 200, 208, 209, 210, 211], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 133, 134, 136, 137, 138, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 191, 192, 193, 194, 200, 208, 212, 213], "util": [2, 6, 18, 20, 208, 210], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 71, 73, 78, 94, 100, 101, 102, 103, 110, 114, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 166, 176, 177, 178, 182, 194, 195, 199, 208, 210], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 103, 106, 136, 148, 208, 210], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 73, 94, 100, 101, 109, 111, 161, 171, 178, 186, 187, 192, 194, 204, 207, 208, 209, 210, 212, 213, 214, 215], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 134, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 190, 191, 192, 193, 194, 195, 199, 200, 208, 209, 210, 214, 215], "A": [3, 6, 11, 14, 37, 69, 129, 146, 169, 178, 182, 188, 189, 191, 194, 196, 208, 209, 210, 211, 212, 213, 214, 215], "b": [3, 14, 55, 69, 134, 182, 188, 189, 194, 212], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 104, 105, 117, 119, 128, 162, 178, 208, 215], "merg": [3, 6, 18, 186], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 82, 129, 133, 178, 186, 194, 208, 209, 210, 213, 215], "dictionari": [3, 58, 135, 210], "recurs": [3, 6, 194, 209, 215], "leav": 3, "origin": [3, 11, 15, 20, 162, 163, 208, 212], "unchang": [3, 162], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 185, 186, 187, 188, 189, 191, 194, 196, 197, 198, 200, 204, 205, 206, 207, 208, 209, 210, 215], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 73, 81, 82, 92, 96, 101, 106, 121, 125, 136, 162, 169, 171, 175, 176, 178, 179, 186, 187, 188, 189, 191, 194, 207, 208, 210], "anoth": [3, 6, 35, 49, 73, 75, 112, 178, 188, 189, 208, 210], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 104, 105, 117, 119, 123, 125, 126, 127, 128, 136, 137, 138, 162, 178, 185, 186, 187, 208], "whether": [3, 6, 13, 20, 77, 96, 117, 123, 128, 186, 187, 210, 212, 215], "also": [3, 6, 11, 17, 18, 19, 20, 31, 35, 48, 49, 55, 73, 76, 83, 84, 93, 94, 100, 101, 103, 109, 111, 116, 162, 178, 182, 186, 187, 189, 194, 198, 208, 210, 212, 213], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 101, 104, 105, 151, 162, 163, 178, 180, 181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 205, 207, 208, 210], "empti": [3, 6, 11, 18, 63, 69, 70, 155, 162, 178, 208, 210], "size": [3, 13, 210], "valu": [3, 6, 11, 13, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 93, 104, 128, 129, 136, 137, 138, 146, 150, 152, 154, 155, 158, 169, 174, 181, 192, 193, 208, 209, 210, 215], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 73, 76, 82, 83, 84, 93, 94, 100, 109, 111, 117, 122, 125, 128, 129, 132, 133, 135, 136, 145, 149, 152, 155, 162, 163, 167, 168, 169, 171, 174, 175, 176, 185, 187, 191, 194, 204, 208, 209, 210, 212, 213, 215], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 73, 76, 77, 79, 81, 82, 83, 84, 89, 92, 93, 94, 95, 96, 100, 101, 103, 106, 107, 109, 111, 112, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 150, 151, 154, 162, 163, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 185, 186, 187, 188, 189, 191, 194, 196, 197, 198, 205, 207, 208, 210], "copi": [3, 6, 11, 76, 151, 162, 163, 178, 212], "content": [3, 6, 7, 11, 117, 151, 162, 163, 178, 185, 193, 194, 208, 209, 210, 212, 215], "take": [3, 7, 11, 20, 37, 49, 92, 162, 175, 176, 178, 208, 210, 213, 215], "preced": [3, 34, 35, 55, 106, 198], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 95, 96, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 154, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 200, 205, 207, 208, 210, 212], "tool": [4, 182, 185, 211], "build": [4, 6, 7, 18, 20, 69, 70, 76, 81, 82, 83, 84, 191, 194, 210], "class": [4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 134, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 190, 191, 192, 193, 194, 199, 200, 208, 211, 212], "inherit": [4, 10, 16, 18, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 73, 78, 81, 82, 83, 84, 89, 92, 93, 97, 100, 101, 102, 103, 106, 108, 110, 114, 124, 134, 144, 160, 168, 177, 182, 190, 199, 208, 210], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 77, 208], "schedulebuild": [4, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 194, 208, 209, 210, 211], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 208, 209, 210, 213, 215], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 103, 104, 105, 106, 109, 111, 116, 122, 149, 162, 178, 179, 180, 187, 191, 192, 193, 194, 208, 209, 210, 212, 215], "locu": [5, 6, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 178, 180, 191, 194, 208, 209, 210, 213, 215], "arg": [5, 6, 11, 20, 31, 35, 48, 49, 73, 100, 101, 103, 210], "factori": [5, 6, 117, 119, 149, 178, 191, 194], "implement": [5, 6, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 103, 104, 105, 106, 109, 111, 125, 128, 162, 178, 180, 181, 198, 208, 209, 211, 213, 214, 215], "object": [5, 6, 11, 17, 32, 115, 116, 117, 133, 145, 151, 162, 163, 178, 185, 194, 200, 208, 210, 212], "specif": [5, 6, 18, 20, 31, 33, 34, 35, 48, 49, 53, 73, 94, 100, 101, 103, 106, 116, 128, 162, 176, 178, 200, 204, 208, 209, 210, 212, 215], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 73, 89, 96, 97, 99, 100, 101, 103, 106, 177, 178, 179, 180, 181, 194, 200, 208, 209, 210, 211, 213, 215], "appli": [5, 6, 37, 49, 55, 71, 73, 75, 76, 94, 101, 151, 178, 210, 212, 213, 215], "part": [5, 6, 20, 79, 155, 170, 172, 173, 174, 175, 178, 185, 194, 208, 209, 210, 212, 213, 215], "qpu": [5, 6, 20, 21, 35, 63, 158, 178, 186, 190, 194, 208, 209, 210, 215], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 103, 106, 108, 110, 125, 136, 143, 169, 171, 175, 176, 178, 182, 186, 187, 188, 189, 194, 208, 210, 214], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 103, 106, 125, 129, 136, 137, 138, 139, 140, 141, 142, 143, 169, 171, 175, 176, 186, 187, 194, 208, 210, 214], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 77, 101, 106, 178, 208, 209, 210, 211, 213, 215], "attribut": [5, 6, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 103, 104, 105, 106, 109, 111, 116, 117, 118, 119, 120, 125, 126, 127, 128, 134, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 191, 192, 193, 194, 200, 208, 210, 212, 213], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 191, 192, 193, 194, 200, 208, 210, 215], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 103, 104, 105, 106, 109, 111, 116, 117, 121, 125, 136, 145, 147, 148, 149, 155, 156, 162, 167, 169, 171, 175, 176, 178, 179, 180, 186, 187, 188, 189, 191, 194, 207, 210], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 63, 69, 70, 101, 117, 119, 121, 133, 143, 148, 149, 150, 151, 152, 153, 154, 162, 178, 180, 191, 194, 196, 198, 200, 210], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 73, 100, 101, 103, 128, 152, 161, 162, 176, 178, 186, 187, 191, 194, 208, 209, 210, 212, 215], "inform": [5, 6, 32, 77, 178, 208, 209, 210, 212, 213, 215], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 72, 73, 74, 80, 100, 101, 104, 105, 117, 122, 125, 126, 127, 136, 137, 138, 152, 158, 176, 178, 186, 187, 191, 194, 208, 209, 210, 215], "qubit": [5, 6, 11, 12, 13, 14, 15, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 82, 89, 94, 97, 101, 102, 103, 106, 108, 110, 176, 178, 186, 187, 208, 209, 210, 213, 214, 215], "reson": [5, 71, 72, 73, 74, 75, 76, 103, 111, 117, 186, 187, 198, 208, 209, 214, 215], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 73, 100, 101, 106, 178, 186, 187, 208, 209, 210, 212, 213, 215], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 82, 101, 103, 106, 128, 178, 208, 210, 215], "valid": [5, 6, 9, 71, 77, 148, 150, 151, 154, 162, 180, 181, 194, 200, 208, 215], "op_tabl": [5, 6, 9, 11, 18, 38, 39, 100, 109, 111, 210], "against": [5, 6, 155, 181, 212, 215], "tabl": [5, 7, 9, 11, 12, 13, 116, 179, 208], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 73, 112, 124, 134, 168, 178, 179, 208, 209, 210, 212], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 103, 104, 105, 106, 109, 111, 177, 179, 180, 208, 211, 215], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 77, 101, 116, 129, 132, 133, 135, 141, 148, 150, 151, 154, 162, 178, 191, 194, 204, 208, 209, 210, 212, 215], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 96, 106, 117, 128, 133, 152, 162, 186, 208, 209, 210, 213, 215], "rais": [5, 6, 9, 61, 77, 96, 117, 148, 150, 151, 154, 169, 178, 180, 181, 196, 201, 202, 203, 209], "valueerror": [5, 6, 9, 77, 96, 117, 148, 150, 151, 154, 178, 180, 181, 196], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 106, 108, 110, 117, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 154, 155, 162, 163, 164, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 187, 188, 189, 194, 198, 204, 207, 208, 209, 210, 211, 212, 213, 215], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 104, 105, 106, 109, 111, 125, 136, 169, 171, 175, 176, 178, 180, 181, 208, 209, 215], "chip_topologi": [6, 20, 63, 101, 121, 122, 210, 215], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 100, 101, 103, 106, 115, 116, 117, 118, 119, 120, 146, 149, 150, 151, 157, 161, 162, 163, 182, 186, 187, 188, 189, 191, 192, 194, 204, 205, 207, 208, 209, 210, 213, 215], "component_channel": 6, "out": [6, 11, 81, 83, 208, 209, 210, 212, 213], "individu": [6, 54, 178, 209, 212], "encapsul": [6, 20, 33, 77, 215], "known": [6, 7, 61, 96, 162, 176, 178, 179, 181, 210], "op": [6, 7, 12, 13, 16, 18, 20, 96, 178, 179, 180, 181], "them": [6, 11, 12, 70, 92, 101, 106, 178, 194, 208, 210, 211, 215], "topologi": [6, 122, 215], "properti": [6, 11, 20, 71, 94, 114, 116, 117, 121, 122, 162, 163, 178, 185, 187, 188, 189, 208, 215], "quantumopt": [6, 11, 12, 13, 181, 208, 210], "opcalibrationdatatre": [6, 181], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 104, 105, 106, 116, 125, 136, 145, 169, 171, 175, 176, 178, 180, 181, 200, 204, 207, 208, 209], "tree": [6, 8, 20, 122, 180, 181], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 89, 100, 101, 106, 121, 122, 210], "chip": [6, 11, 122, 208], "deriv": [6, 94, 125, 128, 134, 135, 136, 137, 138, 139, 140, 141, 143, 174, 176, 208, 210, 212], "chad": [6, 178], "channelproperti": [6, 20, 114, 119, 121, 123, 162, 187, 188, 189, 205, 207], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 69, 70, 89, 96, 100, 106, 116, 122, 125, 133, 135, 136, 148, 162, 169, 171, 175, 176, 178, 179, 187, 194, 196, 208, 210], "configur": [6, 7, 115, 118, 120, 204, 207, 212], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 75, 76, 79, 92, 94, 100, 103, 106, 111, 117, 143, 149, 157, 198, 208, 209, 210, 213], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 72, 73, 74, 149, 178, 208, 210], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 100, 145, 153, 162, 191, 208, 213], "respons": [6, 117, 120, 210, 212, 213], "_cach": 6, "gateimplement": [6, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 71, 73, 78, 89, 96, 97, 100, 101, 102, 103, 106, 108, 110, 178, 180, 194, 208, 211, 213, 215], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 73, 100, 101, 103, 133, 162, 194, 208, 210], "The": [6, 11, 12, 17, 18, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 73, 75, 78, 79, 82, 92, 94, 96, 97, 98, 100, 101, 102, 103, 106, 108, 109, 110, 111, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 150, 155, 157, 162, 167, 169, 171, 172, 173, 174, 175, 176, 178, 182, 186, 187, 188, 189, 194, 204, 206, 207, 208, 209, 210, 212, 213, 215], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 71, 73, 101, 103, 106, 116, 125, 136, 151, 152, 155, 162, 169, 171, 174, 175, 176, 178, 186, 187, 188, 189, 194, 204, 207, 208, 209, 210, 212, 213, 215], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 72, 73, 74, 75, 79, 80, 94, 104, 105, 123, 126, 127, 130, 131, 133, 137, 138, 139, 140, 141, 150, 155, 169, 171, 172, 173, 174, 175, 176, 187, 194, 204, 207, 208, 209, 210, 212, 213, 215], "structur": [6, 208], "composite_cach": 6, "compositeg": [6, 16, 17, 36, 37, 38, 39, 97, 100, 108, 109, 110, 111, 208, 210], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 73, 79, 82, 89, 94, 100, 101, 103, 106, 109, 111, 186, 191, 192, 193, 208, 210, 211, 213], "flush": [6, 17, 208], "whenev": [6, 17, 69, 208], "inject": [6, 208], "_channel_to_compon": 6, "self": [6, 11, 18, 19, 20, 38, 39, 48, 49, 69, 70, 83, 84, 93, 94, 100, 101, 109, 111, 162, 178, 185, 194, 209, 210], "invert": 6, "algorithm": [6, 182, 186, 188, 192, 194, 208, 210, 215], "perform": [6, 49, 147, 155, 162, 212], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 52, 55, 58, 60, 63, 69, 70, 71, 73, 75, 79, 81, 82, 83, 84, 89, 92, 93, 94, 96, 98, 99, 100, 101, 103, 106, 116, 117, 125, 128, 133, 135, 136, 150, 152, 153, 155, 158, 162, 168, 169, 171, 172, 173, 174, 175, 176, 178, 182, 185, 186, 188, 189, 192, 194, 208, 209, 210, 212, 213, 215], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 72, 73, 74, 76, 79, 81, 82, 94, 98, 99, 100, 101, 103, 106, 109, 110, 111, 116, 117, 125, 128, 129, 133, 135, 136, 143, 146, 155, 157, 158, 161, 162, 167, 169, 171, 173, 175, 176, 178, 186, 187, 192, 194, 198, 204, 207, 208, 209, 210, 211, 212, 213, 214], "determin": [6, 32, 186, 194, 209, 212, 215], "block": [6, 35, 37, 49, 69, 70, 94, 100, 101, 117, 144, 158, 161, 184, 186, 187, 191, 194, 208, 209, 213, 215], "associ": [6, 11, 69, 101, 116, 117, 153, 155, 210, 212, 213], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 72, 73, 74, 80, 94, 100, 104, 105, 117, 162, 172, 173, 176, 178, 185, 194, 208, 209, 212, 213, 214, 215], "ar": [6, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 72, 73, 74, 78, 80, 82, 83, 84, 93, 104, 105, 106, 110, 116, 117, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 143, 150, 152, 155, 162, 163, 169, 171, 174, 175, 176, 178, 181, 185, 186, 187, 188, 189, 192, 193, 194, 204, 207, 208, 209, 210, 211, 212, 213, 215], "includ": [6, 9, 17, 19, 69, 70, 73, 81, 82, 92, 116, 128, 178, 194, 208, 209, 210, 212], "non": [6, 11, 18, 20, 63, 68, 69, 97, 101, 125, 128, 136, 169, 171, 175, 176, 196, 210, 212, 215], "certain": [6, 19, 48, 49, 83, 84, 93, 117, 128, 210, 215], "virtual": [6, 37, 49, 73, 75, 76, 101, 106, 111, 117, 208, 213, 215], "do": [6, 9, 11, 32, 63, 106, 108, 117, 162, 168, 171, 186, 198, 208, 209, 210, 212, 215], "just": [6, 11, 17, 18, 31, 69, 82, 100, 178, 194, 208, 210], "themselv": [6, 70, 209, 210], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 101, 119, 145, 153, 187, 191, 208, 210], "_require_scheduling_in_second": 6, "requir": [6, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 73, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 99, 101, 104, 105, 106, 117, 125, 136, 169, 171, 173, 175, 176, 178, 180, 181, 191, 198, 204, 207, 208, 209, 210, 212], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 101, 103, 106, 117, 125, 129, 133, 136, 162, 169, 171, 175, 176, 185, 187, 188, 189, 208, 210, 213, 215], "instead": [6, 20, 75, 158, 186, 208, 209, 210, 213, 215], "sampl": [6, 20, 32, 75, 117, 119, 120, 123, 125, 126, 127, 128, 136, 137, 138, 145, 146, 150, 151, 152, 156, 158, 162, 163, 169, 171, 172, 173, 174, 175, 176, 186, 187, 191, 204, 207, 209, 210, 211], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 73, 79, 82, 83, 84, 93, 94, 100, 101, 103, 106, 109, 111, 116, 117, 125, 132, 136, 146, 148, 149, 151, 152, 155, 157, 161, 162, 167, 169, 171, 175, 176, 178, 182, 184, 188, 189, 194, 198, 208, 209, 210, 213, 215], "happen": [6, 71, 75, 106, 158, 173, 182, 194, 209, 210], "reason": [6, 17, 82, 176, 194, 202, 209, 210, 212], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105, 117, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 150, 163, 169, 170, 174, 176, 178, 186, 192, 193, 194, 210, 212, 213, 214, 215], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 73, 76, 82, 89, 100, 106, 155, 162, 178, 187, 193, 194, 208, 210, 212, 213], "rate": [6, 32, 75, 117, 120, 123, 150, 151, 162, 186, 187, 204, 207, 210, 211], "uhfqa": [6, 117], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 71, 78, 82, 87, 88, 90, 91, 92, 102, 103, 108, 109, 110, 111, 112, 117, 126, 127, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 142, 169, 170, 171, 174, 175, 176, 186, 194, 210, 212, 213, 214, 215], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 73, 79, 94, 100, 101, 123, 129, 137, 138, 143, 152, 162, 168, 178, 181, 186, 187, 194, 198, 208, 209, 210, 212, 213, 215], "granular": [6, 55, 117, 123, 152, 162, 187, 200, 204, 207, 208, 209, 213], "some": [6, 17, 18, 53, 110, 125, 136, 168, 169, 171, 175, 176, 188, 189, 194, 208, 209, 210, 215], "mix": 6, "station": [6, 37, 77, 117, 122, 178, 208, 209], "ro": 6, "devic": [6, 213], "vendor": 6, "than": [6, 11, 101, 162, 178, 185, 188, 189, 204, 207, 208], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 73, 79, 94, 162, 201, 204, 207, 208, 213], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 95, 107, 112, 125, 129, 149, 162, 178, 179, 209, 210, 212, 213], "inject_calibr": [6, 208], "partial_calibr": 6, "new": [6, 11, 14, 17, 96, 162, 178, 186, 187, 188, 189, 191, 194, 208, 209, 210], "chang": [6, 17, 18, 20, 63, 106, 151, 157, 178, 185, 198, 210, 212, 213], "after": [6, 63, 82, 84, 86, 88, 91, 92, 106, 119, 150, 158, 184, 185, 186, 198, 208, 213, 215], "initialis": [6, 19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101], "invalid": [6, 202], "gate_implement": [6, 17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 71, 78, 97, 102, 108, 110], "affect": [6, 11, 35, 69, 106, 162, 163, 178, 194, 208, 213], "loci": [6, 11, 24, 69, 101, 178, 210, 215], "factoriz": [6, 69, 100, 101, 178, 208], "its": [6, 7, 17, 18, 20, 33, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 72, 73, 74, 80, 104, 105, 122, 128, 151, 152, 162, 163, 172, 173, 178, 187, 188, 189, 192, 194, 208, 209, 210, 212, 215], "wa": [6, 37, 73, 76, 176, 208, 212, 213, 215], "must": [6, 9, 11, 12, 20, 37, 49, 63, 117, 123, 133, 143, 162, 163, 176, 178, 194, 208, 210, 212], "doe": [6, 11, 37, 49, 61, 69, 77, 101, 150, 152, 158, 178, 208, 209, 210, 212, 213, 215], "all": [6, 11, 12, 15, 19, 20, 27, 28, 29, 30, 31, 32, 35, 49, 55, 60, 69, 70, 71, 76, 81, 82, 92, 94, 101, 106, 117, 122, 123, 125, 136, 148, 150, 151, 154, 157, 162, 163, 169, 171, 175, 176, 182, 186, 192, 204, 207, 208, 209, 210, 211, 212, 213, 215], "found": [6, 11, 18, 38, 39, 61, 162, 178], "actual": [6, 37, 55, 69, 126, 127, 137, 138, 169, 171, 172, 173, 174, 175, 176, 186, 204, 207, 208, 210, 213, 215], "previou": [6, 208, 213], "validate_calibr": 6, "check": [6, 13, 117, 204, 207, 208], "match": [6, 63, 143, 162, 163, 204, 206, 207, 208, 215], "someth": [6, 19, 69, 70, 117, 148, 150, 151, 154, 180, 181, 198], "wrong": [6, 180, 181, 208], "get_drive_channel": [6, 215], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 79, 80, 100, 103, 104, 105, 109, 111, 117, 123, 125, 128, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 151, 162, 163, 167, 178, 187, 194, 197, 204, 207, 209, 210, 215], "exist": [6, 18, 61, 96, 100, 109, 111, 162, 208, 209, 210, 215], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 83, 84, 85, 86, 87, 88, 90, 91, 112, 125, 132, 136, 168, 175, 194, 208, 209, 210, 212, 213], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 119, 208, 210], "belong": [6, 69, 208], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 98, 99, 100, 155, 208, 211, 215], "signal": [6, 16, 37, 69, 147, 155, 156, 172, 173, 175, 208, 211, 213, 214], "between": [6, 16, 53, 55, 69, 71, 73, 75, 77, 101, 148, 162, 174, 176, 182, 209, 210, 213], "sourc": [6, 73, 185, 208, 212, 213], "destin": [6, 213], "either": [6, 35, 106, 157, 194, 208, 209, 212], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 83, 84, 93, 100, 109, 111, 162, 163, 185, 208, 209, 210, 212], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 208, 213], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 89, 100, 106, 116, 121, 122, 178, 185, 208, 210, 213, 215], "node": [6, 20], "receiv": [6, 155, 212, 213], "bit": [6, 37, 208, 213], "which": [6, 11, 15, 20, 35, 48, 69, 73, 79, 103, 106, 128, 129, 130, 131, 132, 133, 139, 140, 141, 162, 163, 170, 171, 175, 176, 178, 186, 194, 198, 208, 209, 210, 211, 212, 213, 215], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 104, 105, 106, 110, 116, 117, 123, 125, 128, 129, 132, 133, 136, 143, 162, 169, 171, 175, 176, 191, 196, 208, 209, 210, 211, 212, 215], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 99, 100, 106, 117, 178, 187, 208, 209, 210, 211, 215], "result": [6, 11, 17, 37, 69, 70, 76, 100, 106, 133, 147, 153, 155, 162, 208, 209, 212, 215], "support": [6, 33, 37, 63, 69, 101, 174, 176, 196, 204, 207, 208, 209, 210, 212, 213], "fast": [6, 48, 69, 87, 88, 98, 99, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 155, 208, 211, 214, 215], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 20], "impl_nam": [6, 11, 18, 20, 96, 180, 208, 210], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 104, 105, 117, 178], "request": [6, 11, 18, 20, 55, 89, 118, 120, 208, 209, 215], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 70, 128, 157, 208], "neighbor": [6, 186, 187, 194], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71, 72, 73, 74, 101, 176, 178, 186, 187, 194, 208, 209, 210, 214, 215], "ad": [6, 11, 17, 69, 76, 116, 162, 182, 186, 187, 208, 210, 215], "separ": [6, 18, 20, 32, 100, 109, 111, 208, 209, 212, 215], "resolut": [6, 194, 215], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 73, 76, 78, 79, 82, 89, 94, 95, 103, 104, 106, 108, 149, 150, 157, 169, 170, 171, 175, 178, 198, 208, 209, 210, 215], "Will": [6, 55, 192], "iter": [6, 9, 11, 12, 20, 63, 77, 101, 123, 162, 163, 178, 191, 194, 215], "wait": [6, 35, 37, 55, 71, 75, 100, 101, 117, 144, 146, 161, 162, 184, 186, 208, 209, 213, 215], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 103, 104, 105, 106, 117, 123, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 162, 163, 169, 171, 172, 173, 174, 175, 176, 182, 185, 186, 187, 188, 189, 191, 194, 204, 207, 208, 209, 210, 213, 215], "round": [6, 55, 117, 123, 208, 213, 215], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 93, 96, 104, 117, 119, 123, 128, 162, 178, 208, 210], "everi": [6, 20, 150, 204, 207, 208, 210, 215], "guarante": [6, 55, 209], "idl": [6, 101, 158, 162, 208], "cannot": [6, 17, 146, 162, 194, 208, 210, 212, 213], "replac": [6, 11, 20, 96, 146, 158, 208, 212], "dynam": [6, 158, 208], "decoupl": [6, 158, 208], "sequenc": [6, 9, 11, 12, 16, 21, 73, 146, 158, 159, 163, 167, 178, 185, 194, 198, 209, 211, 213, 215], "thei": [6, 11, 18, 19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 106, 110, 116, 117, 162, 163, 178, 194, 204, 207, 208, 209, 210, 213, 215], "treat": [6, 186, 194, 215], "remain": [6, 182, 185, 198, 212], "align": [6, 209, 213, 215], "time": [6, 11, 20, 37, 53, 55, 69, 70, 71, 73, 75, 80, 94, 101, 105, 106, 117, 119, 123, 129, 130, 131, 133, 139, 140, 141, 146, 151, 155, 161, 162, 163, 172, 173, 176, 182, 185, 186, 188, 189, 194, 208, 209, 210, 211, 215], "dure": [6, 55, 73, 117, 128, 136, 146, 161, 172, 173, 176, 194, 209, 215], "particular": [6, 11, 20, 23, 24, 25, 180, 212, 213, 215], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 103, 104, 105, 106, 155, 158, 178, 194, 209, 210, 212, 213], "thu": [6, 32, 71, 79, 106, 128, 132, 209, 213], "less": [6, 11, 182, 208], "space": [6, 13, 14, 15, 176, 213], "side": [6, 34, 35, 117, 188, 189, 209], "todo": [6, 37, 63, 69, 117, 164], "For": [6, 11, 14, 17, 23, 24, 69, 117, 132, 162, 169, 178, 208, 209, 210, 212, 213, 215], "now": [6, 63, 106, 208], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 73, 76, 101, 116, 129, 133, 152, 162, 178, 186, 187, 191, 194, 207, 209, 210, 212, 213, 215], "benefit": 6, "exa": [6, 20, 173, 196, 208, 210, 211, 215], "sweep": 6, "over": [6, 7, 12, 69, 129, 133, 162, 208], "In": [6, 7, 11, 18, 37, 53, 55, 69, 70, 71, 75, 94, 101, 146, 151, 155, 162, 178, 186, 208, 209, 210, 212, 213, 215], "futur": 6, "gener": [6, 11, 20, 69, 70, 94, 106, 133, 167, 194, 208, 210, 212], "should": [6, 18, 20, 37, 49, 69, 70, 79, 98, 99, 100, 109, 111, 116, 117, 128, 129, 133, 176, 178, 182, 186, 187, 208, 210, 212, 213], "experi": [6, 11, 60, 178, 208], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 103, 104, 105, 106, 107, 111, 112, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 149, 150, 154, 155, 157, 162, 164, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 187, 188, 189, 197, 198, 200, 208, 210], "how": [6, 178, 194, 209, 210, 212, 213, 215], "long": [6, 71, 79, 117, 172, 173, 208, 209, 210], "start": [6, 58, 60, 129, 133, 139, 140, 162, 182, 185, 186, 187, 192, 193, 208, 209, 210, 213], "simultan": [6, 69, 152, 182, 194, 209, 215], "box": [6, 37, 79, 89, 94, 186, 192, 193, 194, 208, 215], "get_implement": [6, 18, 20, 69, 208, 210, 215], "use_priority_ord": 6, "strict_locu": [6, 18, 20], "priority_calibr": [6, 215], "provid": [6, 11, 18, 19, 20, 31, 32, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 133, 178, 204, 207, 208, 209, 210, 211, 212, 215], "an": [6, 11, 13, 14, 16, 18, 19, 20, 29, 34, 38, 39, 48, 53, 61, 63, 69, 71, 78, 79, 80, 81, 83, 94, 103, 104, 105, 106, 107, 110, 112, 116, 117, 118, 125, 148, 150, 152, 162, 163, 167, 176, 178, 186, 188, 191, 194, 198, 201, 202, 208, 209, 210, 211, 212, 213, 215], "mean": [6, 11, 69, 71, 155, 178, 194, 208, 210, 212, 213, 215], "chosen": [6, 111, 128, 209], "automat": [6, 11, 19, 70, 208, 210], "logic": [6, 19, 20, 31, 35, 48, 49, 73, 100, 101, 103, 128, 162, 208, 210, 215], "describ": [6, 11, 12, 20, 128, 129, 133, 145, 178, 194, 209, 212, 215], "below": [6, 20, 137, 138, 208, 209, 212, 213, 215], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 104, 105, 129, 178, 208, 210], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 73, 137, 138, 141, 162, 176, 178, 194, 209, 210, 211, 213, 215], "avail": [6, 18, 20, 209, 210, 212, 213, 215], "effect": [6, 20, 37, 71, 94, 103, 178, 182, 194, 209, 210, 211, 213, 215], "get_default_implementation_for_locu": [6, 178, 208, 210], "otherwis": [6, 18, 20, 49, 69, 75, 100, 117, 162, 163, 174, 208, 210, 212], "first": [6, 11, 13, 34, 35, 37, 49, 69, 129, 132, 133, 162, 176, 178, 210, 213, 215], "prioriti": [6, 7, 178, 208], "follow": [6, 55, 69, 70, 71, 100, 106, 122, 132, 157, 176, 182, 186, 194, 204, 207, 208, 209, 212, 213, 215], "defin": [6, 7, 11, 18, 19, 22, 28, 29, 30, 32, 38, 39, 48, 49, 52, 69, 70, 71, 78, 83, 84, 93, 101, 102, 117, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 168, 169, 176, 178, 180, 181, 192, 194, 208, 209, 210, 211, 212, 215], "defaults_for_locu": [6, 178, 208], "global": [6, 63, 178, 208], "load": [6, 8, 208], "common": [6, 18, 19, 38, 39, 69, 70, 81, 82, 92, 100, 109, 110, 111, 123, 186, 208, 211, 212], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 106, 116, 117, 125, 128, 136, 158, 162, 163, 169, 171, 175, 176, 178, 188, 194, 208, 209, 210, 212, 215], "note": [6, 16, 49, 69, 129, 133, 143, 150, 162, 181, 185, 194, 210, 213], "prevent": [6, 209, 210], "save": 6, "via": [6, 18, 20, 63, 82, 100, 101, 109, 111, 141, 174, 176, 208, 210], "could": [6, 17, 55, 178, 210, 213], "_find_implementation_and_locu": 6, "find": [6, 176, 215], "instanc": [6, 11, 13, 18, 20, 33, 69, 75, 79, 80, 94, 103, 104, 105, 150, 153, 178, 198, 215], "compat": [6, 69, 94, 204, 207, 208], "highest": [6, 178], "we": [6, 17, 55, 63, 73, 106, 117, 128, 129, 132, 133, 136, 176, 178, 198, 210, 212, 213, 215], "equival": [6, 106, 182, 194, 198, 209, 215], "one": [6, 9, 11, 18, 38, 39, 42, 45, 49, 56, 69, 70, 79, 162, 178, 186, 187, 191, 194, 208, 209, 210, 212, 213, 215], "had": [6, 208], "_get_implement": 6, "built": [6, 11, 110, 208], "when": [6, 11, 17, 35, 37, 55, 69, 71, 101, 125, 136, 162, 164, 169, 171, 175, 176, 186, 187, 194, 201, 202, 203, 208, 209, 210, 213, 215], "later": [6, 11], "oilcalibrationdata": [6, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 180, 210], "impli": [6, 212], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 52, 69, 70, 73, 89, 96, 100, 101, 103, 106, 125, 136, 150, 155, 169, 170, 171, 175, 176, 178, 181, 208, 209, 210, 215], "validate_quantum_circuit": [6, 208], "require_measur": [6, 9], "constitut": [6, 9, 212], "least": [6, 9, 55, 117, 123, 129, 133, 186, 187, 204, 207, 209, 210, 212], "circuit_to_timebox": [6, 208], "scheduling_algorithm": [6, 191, 194], "schedulingalgorithm": [6, 190, 191, 194], "hard_boundari": [6, 191, 192, 194], "locus_map": [6, 208], "convert": [6, 11, 20, 82, 111, 117, 125, 136, 146, 161, 169, 171, 175, 176, 184, 194, 208, 209, 210, 211], "resolv": [6, 20, 173, 192, 194, 209, 211], "option": [6, 11, 12, 13, 32, 69, 162, 178, 208, 210, 213], "placehold": [6, 11, 208], "physic": [6, 11, 21, 117, 186, 208, 209, 210], "while": [6, 20, 82, 192, 209, 210, 212, 215], "unresolv": 6, "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 192, 194, 208], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 104, 105, 110, 111, 117, 119, 125, 126, 127, 132, 135, 136, 137, 138, 139, 140, 143, 148, 150, 167, 169, 170, 171, 172, 174, 175, 176, 185, 191, 194, 198, 210, 212, 215], "temporari": 6, "helper": [6, 20], "playlist": [6, 71, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 134, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 184, 199, 203, 204, 207, 208, 211, 213, 215], "front": [6, 162], "pad": [6, 35, 80, 105, 129, 132, 133, 162, 186, 192, 215], "equal": [6, 11, 37, 71, 106, 109, 172, 173, 185, 188, 189, 208, 209, 215], "sinc": [6, 32, 49, 73, 106, 176, 178, 208, 210], "delai": [6, 37, 67, 68, 69, 70, 100, 145, 152, 208, 209, 213], "befor": [6, 75, 82, 84, 86, 88, 91, 117, 119, 198, 208, 215], "final": [6, 92, 169, 209, 210, 215], "wish": 6, "lose": [6, 208], "coher": [6, 150], "done": [6, 82, 157, 164, 176, 182, 187, 208, 210], "onc": [6, 208, 209, 210], "handl": [6, 19, 32, 55, 70, 100, 116, 117, 123, 186, 189, 198, 208, 210], "better": [6, 117, 194, 208], "remov": [6, 20, 106, 117, 162, 163, 164, 208, 215], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 75, 79, 81, 82, 87, 88, 92, 103, 116, 117, 119, 123, 125, 126, 127, 128, 129, 133, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 186, 191, 194, 200, 208], "far": 6, "By": [6, 20, 48, 49, 69, 70, 73, 89, 100, 106, 125, 136, 169, 171, 175, 176, 198], "occupi": [6, 162, 186, 187, 194, 209], "unnecessari": [6, 37, 186, 208], "pack": [6, 192], "assum": [6, 35, 49, 76, 94, 100, 106, 111, 123, 139, 140, 143, 162, 172, 173, 176, 209, 210, 212, 215], "refer": [6, 82, 110, 116, 157, 208, 210, 211, 215], "ensur": [6, 137, 138, 209, 213, 215], "work": [6, 11, 73, 101, 162, 185, 208, 209, 210, 212, 215], "intend": [6, 73, 101, 178, 209, 210], "properli": 6, "higher": [6, 134, 136, 137, 138, 208, 209, 213], "help": [6, 11, 209, 210, 213], "defend": [6, 212], "crosstalk": [6, 62, 63, 149, 182, 208, 210], "expens": 6, "longer": [6, 101, 208], "more": [6, 19, 55, 125, 146, 178, 194, 208, 209, 212, 213], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 101, 208], "readi": [6, 211], "execut": [6, 34, 35, 116, 151, 159, 162, 178, 182, 208, 209, 210, 211, 212, 213, 215], "sample_r": [6, 117, 118, 119, 120], "_finish_schedul": 6, "filter": 6, "zero": [6, 11, 35, 49, 55, 63, 64, 73, 82, 94, 97, 128, 129, 132, 133, 146, 152, 158, 175, 176, 178, 185, 188, 189, 208, 209], "spacer": [6, 182], "consequ": 6, "step": [6, 158, 176, 208], "process": [6, 76, 146, 209, 214], "consist": [6, 17, 48, 49, 79, 82, 94, 103, 125, 136, 162, 169, 171, 175, 176, 178, 208, 210, 212], "extend": [6, 7, 13, 15, 55, 129, 161, 162, 163, 186, 187, 188, 189, 194], "gone": 6, "_fuse_long_distance_virtual_rz": 6, "fuse": [6, 82, 208], "distanc": [6, 208], "virtualrz": [6, 73, 75, 76, 106, 144, 208, 209], "correct": [6, 13, 62, 63, 73, 76, 108, 149, 208, 210, 215], "next": [6, 185, 209, 210, 213], "fluxpuls": [6, 144], "resolve_timebox": [6, 194, 208, 215], "compute_neighborhood_hard_boundari": 6, "children": [6, 191, 194, 209, 215], "concaten": [6, 194, 209, 215], "strategi": [6, 186, 187, 193, 194], "composit": [6, 17, 18, 38, 39, 192, 193, 194, 208, 209, 210, 215], "solid": 6, "rectangl": [6, 215], "longest": [6, 55, 186, 192], "within": [6, 13, 155, 162, 193, 209, 212], "tetri": [6, 146, 192], "tightli": [6, 192], "possibl": [6, 55, 106, 148, 162, 176, 186, 187, 192, 193, 194, 208, 209, 212, 213, 215], "still": [6, 11, 63, 163], "overlap": [6, 146, 152, 161, 186, 209, 215], "regardless": [6, 210, 213], "boundari": [6, 58, 60, 186, 192, 193], "modifi": [6, 7, 11, 162, 163, 185, 186, 187, 188, 189, 198, 208, 210, 212, 215], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 106, 162, 163, 182, 194, 208, 209, 210, 211, 215], "becom": [6, 11, 37, 169, 215], "atom": [6, 20, 191, 192, 194, 209, 210, 215], "isn": 6, "t": [6, 63, 79, 92, 110, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 168, 169, 171, 174, 176, 208, 212], "alreadi": [6, 11, 61, 162, 194, 208, 210], "precomput": [6, 162, 194, 210], "typic": [6, 49, 69, 117, 129, 132, 178, 182, 209, 210, 213, 215], "want": [6, 11, 19, 48, 49, 69, 83, 84, 93, 129, 133, 158, 210], "top": [6, 210], "layer": 6, "would": [6, 11, 17, 49, 75, 208, 210, 213, 215], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 104, 122, 133, 162, 170, 178, 186, 187, 191, 194, 208, 209, 210, 211, 213, 215], "lower": [6, 211, 213], "where": [6, 48, 49, 55, 63, 69, 70, 71, 78, 92, 102, 103, 110, 117, 126, 127, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 152, 162, 169, 171, 174, 176, 178, 186, 189, 208, 209, 210, 212], "improv": [6, 37, 69, 208, 212], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 73, 96, 100, 101, 103, 125, 136, 162, 163, 169, 171, 175, 176, 178, 208, 209, 210, 211, 215], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 60, 155, 210], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 20, 61, 101, 116, 162, 188, 189, 208, 209, 210, 212, 215], "addit": [6, 11, 20, 31, 32, 35, 48, 49, 69, 71, 73, 100, 101, 103, 108, 150, 162, 175, 178, 194, 210, 212, 215], "ideal": [6, 16, 53, 178, 182], "model": [6, 124, 134, 168, 182, 209], "correctli": [6, 17, 208, 210], "interact": [6, 49], "frame": [6, 73, 149, 176, 198, 208, 210], "subspac": [6, 71, 178, 182, 209, 210], "connect": [6, 11, 101, 178, 194, 209, 210, 215], "those": [6, 32, 69, 100, 132, 178, 194, 208, 210, 212, 215], "henc": [6, 198], "evolut": 6, "Of": 6, "cours": [6, 53, 210], "realiti": [6, 53], "possibli": [6, 49, 213], "applic": [6, 210, 212], "essenti": [6, 132, 133, 210], "precis": [6, 209], "interest": 6, "howev": [6, 18, 55, 100, 125, 136, 158, 169, 171, 175, 176, 209, 210, 212], "well": [6, 77, 101, 151, 162, 178, 204, 207, 208, 210, 211, 213, 215], "local": [6, 73, 106, 149, 157, 198], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 101, 125, 136, 145, 169, 171, 175, 176, 208, 209, 210, 215], "end": [6, 11, 40, 73, 75, 76, 106, 110, 129, 133, 139, 140, 146, 161, 162, 163, 174, 208, 209, 210, 212, 213], "carri": [6, 209, 212], "meant": [6, 11], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 73, 117, 125, 126, 127, 129, 130, 131, 132, 133, 135, 137, 139, 140, 142, 143, 147, 152, 162, 176, 178, 191, 194, 204, 207, 208, 209, 210, 213, 215], "involv": [6, 20, 35, 209, 211, 215], "compress": [6, 209], "duplic": 6, "transfer": [6, 94, 212], "drop": 6, "point": [6, 106, 129, 130, 131, 133, 139, 140, 141, 185, 186, 187, 210], "finalis": 6, "unless": [6, 20, 125, 136, 169, 171, 175, 176, 194, 208, 210, 212, 215], "call": [6, 11, 13, 17, 18, 20, 73, 101, 109, 208, 210, 215], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 18, 20, 31, 37, 49, 79, 96, 167, 208, 209, 210, 211], "shortcut": [6, 11, 208, 215], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 210], "nativ": [7, 33, 178, 215], "ones": [7, 18, 34, 35, 100, 109, 111, 192, 194, 210], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 94, 101, 103, 106, 162, 171, 174, 178, 186, 189, 198, 208, 209, 210], "gate_definit": 7, "section": [7, 209, 210, 212, 213, 215], "file": [7, 8, 52, 212], "yaml": [7, 8, 208], "config": [8, 116, 208], "circuitoperationlist": [10, 208], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 40, 78, 94, 100, 101, 106, 108, 110, 152, 176, 194, 208, 210], "mostli": [11, 209], "conveni": [11, 20, 69, 194, 208, 211], "enabl": [11, 55, 73, 79, 172, 173, 208], "easi": [11, 215], "creation": [11, 210], "calcul": [11, 12, 15, 73, 174, 176, 208], "onto": 11, "import": [11, 56, 210, 212, 215], "present": [11, 12, 71, 162, 186, 215], "think": 11, "about": [11, 77, 148, 150, 151, 154, 208, 209, 213, 215], "qiskit": [11, 208], "quantumregist": 11, "most": [11, 210, 211], "simpli": [11, 37, 106, 178, 209], "taken": [11, 208], "you": [11, 69, 70, 73, 158, 178, 208, 211, 212, 215], "good": 11, "practic": [11, 210, 213, 215], "mutabl": [11, 162], "regist": [11, 12, 13, 18, 96, 178, 208, 209, 211, 215], "usabl": [11, 20, 37, 208], "fundament": 11, "popul": [11, 71], "qb1": [11, 69, 178, 210, 215], "qbn": 11, "qb2": [11, 69, 178, 210, 213, 215], "altern": [11, 209, 213], "To": [11, 37, 55, 162, 210, 211, 212, 213, 215], "your": [11, 210, 212], "own": [11, 17, 20, 33, 178, 208, 209, 210, 212], "initi": [11, 32, 33, 128, 136, 169, 176, 208, 209, 210], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 178, 208, 209, 210], "__add__": [11, 69, 208], "__mul__": [11, 208], "__getitem__": [11, 208], "redefin": [11, 125, 136, 169, 171, 175, 176], "3": [11, 37, 63, 67, 68, 69, 80, 105, 135, 186, 212, 214, 215], "circuit1": [11, 215], "circuit2": [11, 215], "4": [11, 57, 87, 88, 90, 91, 108, 110, 135, 211, 212, 214], "produc": [11, 188, 208, 209, 213, 215], "prx": [11, 18, 19, 37, 38, 39, 67, 68, 69, 70, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 106, 109, 111, 178, 198, 208, 209, 210, 213, 214, 215], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 72, 73, 74, 78, 79, 82, 89, 94, 95, 100, 102, 106, 107, 109, 110, 112, 149, 178, 197, 198, 208, 210, 215], "drag_crf": [11, 38, 208], "abov": [11, 209, 210, 211, 212, 215], "shorten": 11, "exactli": [11, 20, 178, 191], "syntax": [11, 208, 209, 210, 212, 215], "usual": [11, 17, 55, 153, 176, 209, 210, 213, 215], "attach": [11, 212], "init": [11, 208, 210], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 72, 73, 74, 80, 104, 105, 178, 210], "unitari": [11, 12, 13, 15, 40, 58, 60, 71, 95, 97, 107, 112, 178, 208, 209, 210], "propag": [11, 15, 58, 60, 100, 208, 213], "entir": [11, 13, 117, 208], "u": [11, 57, 111, 208], "get_unitari": 11, "dimens": [11, 129, 132], "alwai": [11, 18, 34, 35, 37, 73, 100, 109, 111, 137, 138, 178, 182, 186, 188, 210], "qb3": [11, 69, 178, 213, 215], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 110, 129, 178, 208, 210], "correspond": [11, 13, 18, 53, 57, 58, 59, 60, 63, 100, 109, 111, 125, 128, 129, 132, 148, 178, 186, 194, 209, 213], "three": [11, 79], "big": [11, 12, 13, 178], "endian": [11, 12, 13, 178], "convent": [11, 12, 73, 122], "With": [11, 19, 69, 70, 213], "action": [11, 12, 178, 209], "ident": [11, 15, 53, 59, 94, 208], "physical_circuit": 11, "map_loci": [11, 208], "physical_qubit": 11, "exampl": [11, 14, 17, 18, 73, 117, 128, 178, 208, 209, 210, 212, 215], "alic": 11, "zzz": 11, "qb5": [11, 178], "qb10": 11, "occurr": 11, "mani": [11, 208, 210, 215], "run": [11, 132, 208, 213], "parallel": [11, 178, 208], "larg": [11, 129, 133, 209], "left": [11, 20, 31, 35, 48, 49, 69, 70, 101, 103, 106, 188, 189, 209, 210, 213], "ignor": [11, 37, 128], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 117, 126, 127, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 143, 169, 176], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 169, 171, 172, 173, 174, 175, 176, 208, 210], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 87, 88, 90, 91, 95, 107, 112, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 171, 172, 173, 174, 175, 176, 178, 210], "locus_indic": 11, "append": [11, 35, 69, 162, 163, 208], "store": [11, 13, 17, 20, 48, 49, 69, 70, 89, 100, 106, 132, 149, 178, 210], "select": [11, 15, 213, 215], "indic": [11, 15, 75, 128, 129, 132, 167, 209, 212], "qb4": [11, 213], "param": [11, 13, 20, 178, 208, 210], "barrier": [11, 12, 178, 210], "compos": [11, 182, 211], "safer": 11, "wai": [11, 18, 145, 194, 208, 209, 210, 215], "togeth": [11, 37, 48, 69, 75, 186, 194, 208, 209, 210, 215], "probabl": 11, "wire": 11, "k": [11, 14, 129, 137, 138, 139, 140, 141, 142, 143, 176], "achiev": [11, 210], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 172, 173, 194], "make_circuit": [11, 208], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 142, 143, 156, 162, 176, 186, 192, 204, 206, 207, 208], "total": [11, 76, 163, 182, 215], "across": [11, 133, 137, 138], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 208, 210, 212], "skip": [12, 162], "product": [12, 132, 209, 212], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 101, 103, 106, 209, 210, 215], "fetch": 13, "Then": [13, 194, 210], "hilbert": [13, 15], "whole": [13, 63, 209, 212], "perm": 14, "permut": [14, 208], "state": [14, 40, 53, 71, 73, 78, 82, 97, 100, 101, 106, 108, 110, 178, 198, 209, 210, 212, 213], "vector": [14, 129, 208], "index": [14, 63, 116, 163, 185, 209, 211], "th": [14, 129, 176], "old": 14, "kron": [14, 178], "c": [14, 174, 194, 212], "n_qubit": 15, "larger": [15, 162, 209], "system": [15, 52, 208, 212, 213, 215], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 93, 101, 104, 105, 106], "hash": 15, "purpos": [15, 20, 69, 208, 210, 212], "rang": [15, 128, 129, 133, 139, 140, 169, 194, 208], "abstract": [16, 178, 209, 210, 211], "conceptu": [16, 209], "wherea": [16, 69, 146, 178, 209, 210], "concret": [16, 178, 210, 211, 215], "One": [16, 20, 89, 209, 215], "approxim": [16, 129, 133], "abc": [16, 18, 20, 34, 36, 40, 53, 62, 66, 71, 78, 79, 81, 82, 89, 92, 94, 97, 102, 108, 110], "customiqwaveform": [16, 66, 69, 70, 78, 81, 82, 210], "singlepulseg": [16, 78, 94, 208], "compositecach": 16, "__call__": [17, 18, 20, 31, 35, 48, 49, 69, 73, 100, 101, 103, 208, 210], "normal": [17, 37, 63, 137, 138, 141, 176, 178, 197, 208, 210, 212], "_timebox_cach": 17, "trust": 17, "itself": [17, 73, 101, 208, 210, 213], "member": [17, 18, 58, 60, 210], "deduc": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 210], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 98, 99, 100, 109, 111, 208, 209, 210], "identifi": [17, 37, 117, 145, 162, 210, 212], "cast": 17, "extra": [17, 37, 73, 82, 210], "string": [17, 63, 67, 68, 69, 155, 167], "id": 17, "further": [17, 175, 176, 194, 210], "did": [17, 208], "come": [17, 210, 215], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 208, 210], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 109, 111, 210], "term": [18, 125, 126, 127, 130, 131, 135, 136, 137, 139, 140, 141, 143, 169, 171, 175, 176, 178, 209, 210, 211, 212], "pre": [18, 128, 135, 136, 137, 138, 176], "abl": [18, 123, 208], "know": [18, 20, 210], "consid": [18, 19, 55, 64, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 132, 185, 188, 189, 208, 210, 215], "registered_g": [18, 100, 109, 111, 208, 210], "cz": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 71, 73, 106, 178, 208, 209, 210, 214, 215], "insid": [18, 20, 31, 35, 37, 48, 49, 73, 82, 100, 101, 103, 169, 185, 194, 208, 209, 210], "besid": [18, 100, 101, 109, 111], "here": [18, 63, 82, 100, 109, 111, 143, 168, 176, 210, 213, 215], "construct": [18, 20, 33, 69, 79, 80, 94, 100, 103, 104, 105, 109, 111, 125, 136, 169, 171, 175, 176, 208, 209, 211], "default_implement": [18, 38, 39, 178], "design": [18, 38, 39, 208, 212], "fill": [18, 38, 39, 209], "he": [18, 38, 39], "sought": 18, "custom": [19, 20, 69, 70, 208, 209, 211], "waveform": [19, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 72, 73, 74, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 103, 116, 124, 125, 126, 127, 128, 134, 136, 137, 138, 149, 150, 151, 154, 169, 170, 171, 172, 173, 174, 175, 176, 204, 206, 207, 208, 209, 211], "iqpuls": [19, 48, 69, 70, 79, 81, 82, 83, 84, 92, 93, 94, 103, 106, 144, 147, 152, 155, 157, 198, 206, 208, 209, 210], "info": [19, 20, 208, 210], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 103, 125, 127, 131, 138, 140, 150, 208, 210, 214, 215], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 83, 84, 85, 86, 87, 88, 90, 91, 93, 150, 210], "wave_q": [19, 67, 68, 83, 84, 85, 86, 87, 88, 90, 91, 93, 150, 210], "dependent_wav": [19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93], "share": [19, 32, 49, 67, 68, 69, 70, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 212], "drag": [19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 208, 210], "root_paramet": [19, 49, 69, 70, 73, 81, 82, 92], "independ": [19, 69, 70, 81, 82, 92, 162, 163, 178, 209, 213], "overrid": [19, 20, 31, 35, 48, 49, 69, 70, 73, 81, 82, 83, 84, 89, 92, 93, 100, 101, 103, 106, 128, 208, 210, 215], "excluded_paramet": [19, 48, 49, 83, 84, 93], "exclud": [19, 48, 49, 83, 84, 93, 212], "There": [20, 82, 210, 213, 215], "subclass": [20, 31, 33, 35, 48, 49, 69, 70, 101, 103, 106, 125, 136, 169, 171, 175, 176, 178, 208, 210], "__init__": [20, 208, 210], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 72, 73, 74, 78, 79, 82, 89, 94, 95, 102, 106, 107, 108, 110, 112, 198, 208, 210, 215], "input": [20, 37, 69, 92, 209, 210], "raw": [20, 147, 155, 156, 167, 213], "meaning": [20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 104, 105, 178], "special_implement": [20, 208], "special": [20, 49, 75, 94, 168, 178, 208, 210, 212, 215], "never": [20, 208, 210], "explicitli": [20, 69, 208, 210, 212, 215], "qualified_nam": 20, "qualifi": 20, "classmethod": [20, 48, 49, 63, 69, 70, 79, 81, 82, 83, 84, 89, 92, 93, 100, 101, 103, 106, 208], "needs_calibr": 20, "appropri": [20, 209, 212], "_call": [20, 31, 35, 37, 48, 49, 55, 69, 70, 73, 79, 82, 89, 94, 100, 101, 103, 106, 109, 111, 208, 210], "kwarg": [20, 31, 35, 48, 49, 73, 79, 83, 84, 93, 100, 101, 103], "signatur": [20, 31, 35, 48, 49, 73, 100, 101, 103, 178, 208, 210], "suffici": [20, 31, 35, 48, 49, 73, 100, 101, 103, 117, 176], "assign": [20, 49, 69, 70, 116, 208], "specifi": [20, 31, 37, 125, 151, 192, 210, 213, 215], "to_timebox": 20, "wrap": [20, 215], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 101, 103, 106, 162], "unimpl": [20, 31, 35, 48, 49, 69, 70, 101, 103, 106], "reimplement": [20, 31, 35, 48, 49, 69, 70, 101, 103, 106, 210], "make": [20, 31, 35, 48, 49, 69, 70, 73, 101, 103, 106, 151, 158, 162, 163, 178, 182, 185, 208, 210, 212, 215], "sens": [20, 31, 35, 48, 49, 69, 70, 101, 103, 106], "convert_calibration_data": 20, "channel_prop": 20, "item": [20, 162], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 72, 73, 74, 87, 88, 90, 91, 92, 93, 104, 117, 118, 120, 125, 128, 129, 132, 133, 136, 143, 169, 171, 175, 176, 210], "addition": [20, 186, 187, 213], "under": [20, 182, 194, 212], "n_sampl": [20, 32, 79, 81, 82, 92, 103, 125, 126, 127, 128, 136, 137, 138, 169, 170, 171, 172, 173, 174, 175, 176], "subset": [20, 58], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 93, 101, 104, 105], "cl": 20, "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 162, 212], "dot": 20, "root": [20, 58], "settingnod": [20, 121, 122], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 89, 100, 106, 210], "operation_nam": [20, 48, 49, 69, 70, 89, 100, 106], "implementation_nam": [20, 48, 49, 69, 70, 89, 100, 106, 210], "behaviour": [20, 48, 49, 69, 70, 89, 100, 106, 208, 210], "get_custom_locus_map": [20, 63, 101, 208, 210], "component_to_channel": [20, 63, 101, 122], "wrt": 20, "often": [20, 208, 210], "set_locus_map": 20, "frozenset": [20, 63, 101, 210], "matter": [21, 73, 210], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 74, 80, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 104, 105, 179], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 73, 79, 103, 150, 152, 153, 154, 191, 208, 209, 210, 215], "singl": [31, 33, 60, 67, 68, 69, 70, 78, 81, 82, 84, 94, 102, 106, 108, 110, 162, 163, 178, 191, 194, 205, 208, 209, 210, 213, 214, 215], "_get_puls": [31, 81, 82, 83, 84, 92, 93, 208], "_get_pulse_channel": 31, "basic": [31, 163, 208, 210], "insert": [31, 75, 208], "overridden": [31, 178, 210], "wave": [32, 149, 154, 171], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 98, 99, 101, 104, 105, 145, 147, 155, 156, 191, 194, 208, 209, 210], "format": [32, 208, 212], "been": [33, 37, 101, 194, 208, 209, 212, 213], "sever": [33, 146, 178, 208, 210, 213, 215], "scheme": [33, 209], "likewis": 33, "sometim": [33, 209], "metaoper": [34, 35, 178, 210], "forc": [34, 53, 117, 123], "tempor": [34, 35], "qudit": [35, 178], "metainstruct": 35, "caus": [35, 37, 55, 63, 208, 212, 213], "turn": [35, 208], "impos": 35, "relat": [35, 76, 208, 213, 215], "classic": [36, 37, 208, 213], "ccprx_composit": [36, 38, 39, 208, 213], "ccprx_composite_dragcosinerisefal": [36, 208], "ccprx_composite_draggaussian": [36, 208], "condit": [37, 38, 39, 100, 148, 155, 204, 207, 208, 210, 212, 213], "discrimin": 37, "obtain": [37, 94, 125, 129, 209, 212, 214], "segment": [37, 79, 101, 155, 157, 160, 162, 167, 185, 186, 187, 208, 209, 213], "activ": [37, 153, 209], "underneath": 37, "control_delai": [37, 213], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105, 125, 130, 131, 136, 139, 140, 141, 143, 150, 162, 169, 171, 175, 176, 209, 210, 213], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105, 196, 208], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105, 196], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105], "instrument": [37, 106, 117, 120, 128, 144, 160, 213], "drive_control": [37, 121], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 208], "conditionalinstruct": [37, 69, 144, 155, 213], "until": [37, 106, 209], "enough": [37, 213], "arriv": [37, 213], "place": [37, 162, 173, 175, 186, 187, 212], "sequenti": 37, "without": [37, 129, 132, 133, 156, 161, 194, 208, 209, 210, 212, 215], "care": [37, 215], "yourself": [37, 211], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 72, 73, 74, 82, 84, 86, 88, 91, 95, 104, 107, 150, 198], "multipl": [37, 69, 101, 117, 123, 125, 136, 141, 148, 152, 155, 169, 171, 175, 176, 208, 209], "f": [37, 63, 69, 70, 129, 169, 171, 174, 176, 178, 210], "__": [37, 63, 69, 70, 208], "current": [37, 69, 73, 185], "hw": [37, 69, 208], "per": [37, 69, 178, 208, 210], "listen": [37, 208], "user": [37, 63, 69, 128, 176, 194, 208, 209, 210, 213, 215], "drag_gaussian": [39, 208, 215], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 73, 74, 82, 102, 106, 108, 110, 112, 198, 208, 210], "flip": [40, 208], "rel": [40, 73, 125, 136, 143, 150, 169, 171, 175, 176, 208, 209, 210, 215], "11": [40, 214], "text": [40, 71, 82, 174, 176, 212], "begin": [40, 73, 75, 110, 145, 152, 163, 174, 185, 188, 189, 208, 213, 215], "pmatrix": [40, 110], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 71, 73, 210], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 208], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 208], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cosinerisefal": [41, 42, 46, 50, 51, 72, 74, 83, 84, 93, 175], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 72, 73, 74, 210], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 72, 74, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 103, 104, 125, 128, 136, 169, 171, 173, 175, 176, 208, 210], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 101, 104, 105], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 93, 104, 125, 126, 127, 136, 137, 138, 174, 175, 176, 210], "crf": [41, 42, 45, 46, 50, 51, 72, 74, 83, 84, 93], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 93, 104], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 72, 74, 83, 84, 85, 86, 87, 88, 90, 91, 93, 104, 125, 126, 127, 128, 136, 137, 138, 174, 175, 176], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 72, 74, 80, 83, 84, 93, 104, 105, 173, 174, 175], "rz": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 72, 73, 74, 82, 84, 86, 88, 91, 103, 104, 105, 106, 111, 149, 198, 208], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 72, 73, 74, 210], "cosin": [42, 45, 80, 93, 104, 105, 125, 126, 127, 130, 131, 132, 133, 135, 139, 140, 141, 142, 168, 169, 172, 173, 175, 176, 208], "rise": [42, 45, 79, 80, 93, 104, 105, 172, 173, 174, 175, 208], "fall": [42, 45, 79, 80, 93, 104, 105, 172, 174, 175, 178, 208], "ac": [42, 45, 48, 79, 80, 103, 104, 105, 208], "stark": [42, 45, 48, 79, 80, 103, 104, 105, 208], "first_qubit": [42, 45], "mcrf": [42, 45, 104], "modulation_frequ": [42, 45, 104, 150, 175], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 104, 168], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 168, 208], "coupling_strength_norm": [44, 45, 46, 176], "frequency_initial_norm": [44, 45, 46, 176], "frequency_to_minimize_norm": [44, 45, 46, 176], "lambda_1": [44, 45, 46, 176], "lambda_2": [44, 45, 46, 176], "squid_asymmetri": [44, 45, 46, 176], "truncatedgaussiansmoothedsquar": [47, 51, 74, 175], "tgss": [47, 51, 74], "analog": 48, "tune": [48, 124, 125, 126, 127], "frequenc": [48, 67, 68, 69, 70, 73, 92, 93, 103, 118, 119, 125, 128, 129, 132, 133, 135, 136, 137, 139, 140, 142, 143, 150, 169, 171, 175, 176, 208, 210], "_ac_stark_puls": [48, 103], "phase_incr": [48, 103, 104, 106, 150, 157], "quadratur": [48, 103, 150], "pi": [48, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 103, 108, 109, 110, 126, 127, 129, 130, 131, 132, 137, 138, 141, 142, 169, 170, 171, 174, 197, 208, 210, 213, 215], "discret": 49, "mediat": [49, 71], "coupl": [49, 176], "tunabl": [49, 214], "both": [49, 73, 79, 188, 208, 210, 213, 215], "arbitrari": [49, 92, 93, 106, 110, 152, 198, 208, 213, 215], "slot": 49, "move": [49, 72, 73, 74, 75, 185, 208, 215], "being": [49, 94, 129, 178, 210, 213], "flux_puls": 49, "radian": [49, 78, 79, 89, 94, 102, 106, 110, 150, 157, 171, 197], "maximum": [54, 64, 101, 137, 138, 162, 176, 186], "up": [55, 69, 73, 76, 117, 123, 137, 138, 162, 176, 186, 208, 210], "hardwar": [55, 157, 178, 204, 207, 209, 210, 211, 213], "again": 55, "much": [55, 209], "why": [55, 210], "10": [55, 64, 71, 214], "except": [55, 69, 82, 199, 201, 202, 203, 209, 210, 212], "enumer": [56, 58, 60], "xygat": [56, 59, 89], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 214], "j": [57, 59, 63, 129, 214], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 210], "enum": [58, 60, 190, 192, 193], "qualnam": [58, 60, 192, 193], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 110, 111, 112], "clifford": [60, 89], "axi": [60, 78, 108, 110, 198, 208, 210], "xy": [60, 78, 89], "plane": [60, 78, 108], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 96], "error": [61, 129, 133, 176, 180, 194, 201, 202, 203, 208, 209, 215], "fluxmultiplexer_samplelinear": [62, 208], "flux_multiplex": 63, "linear": [63, 94, 169, 170], "multiplex": [63, 69, 100, 191, 208], "cross": [63, 212, 215], "talk": [63, 215], "element": [63, 125, 129, 133, 194, 208, 209, 215], "c_ij": 63, "aris": [63, 212], "a_i": [63, 92], "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": [63, 129], "spars": 63, "form": [63, 176, 208, 209, 210, 212], "xarrai": 63, "yet": [63, 186, 187, 208], "matrix_index": 63, "relev": 63, "flat": [63, 122], "np": [63, 178, 210, 213, 215], "matrix_el": 63, "experiment": 63, "r": [63, 108, 174, 214], "d": [63, 129, 169, 194, 212, 214], "everyth": [63, 215], "subject": [63, 209, 212], "1e": [64, 164, 188, 189], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 100, 106], "basi": [66, 67, 68, 100, 106, 110, 125, 128, 129, 132, 133, 135, 137, 138, 139, 140, 141, 142, 178, 212], "measure_customwaveform": [66, 67, 68, 70, 210], "measure_const": [66, 208], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 208], "dispers": [67, 68, 69], "constant": [67, 68, 69, 79, 80, 99, 105, 172, 173, 174, 208, 213], "acquisition_delai": [67, 68, 69, 70], "acquisit": [67, 68, 69, 70, 145, 153, 208, 213], "acquisition_typ": [67, 68, 69], "threshold": [67, 68, 69, 155], "amplitude_i": [67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 105, 210], "amplitude_q": [67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 105, 210], "integration_length": [67, 68, 69, 70, 208], "integr": [67, 68, 69, 70, 119, 147, 155, 156, 176, 208, 213], "integration_threshold": [67, 68, 69], "integration_weights_i": [67, 68, 69], "weight": [67, 68, 69, 87, 88, 125, 126, 127, 129, 133, 147, 155, 208], "dtype": [67, 68, 69, 126, 127, 137, 138, 169, 171, 172, 173, 174, 175, 176, 210], "float64": [67, 68, 69], "integration_weights_q": [67, 68, 69], "demolit": 68, "dimension": [69, 132], "len": [69, 129, 132, 143], "intermedi": [69, 210], "IF": 69, "center": [69, 119, 128, 129, 143, 174, 175, 176], "offset": [69, 152, 174, 176], "readouttrigg": [69, 70, 144, 155, 191, 209, 211], "_multiplexed_timebox": 69, "multiplexedprobetimebox": [69, 190, 208], "probe_timebox": 69, "_time_trac": 69, "time_trac": [69, 70, 145], "_build_instruct": [69, 70], "waveform_param": [69, 70], "root_param": [69, 70], "if_freq": 69, "acquisitionmethod": [69, 70, 144, 147, 153, 156], "do_acquisit": 69, "nake": 69, "trigger": [69, 70, 153, 162, 191, 208, 213], "goe": 69, "maintain": 69, "backward": [69, 94], "rout": [69, 155], "probelin": [69, 209, 213], "behav": [69, 146, 158], "featur": [69, 210, 211], "mode": 69, "pick": 69, "anywher": [69, 155, 208], "pass": [69, 75, 76, 77, 208, 213], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "contrari": 70, "probl": 70, "exchang": 71, "invari": 71, "span": 71, "00": [71, 135], "rangl": [71, 97], "01": [71, 135], "swap": 71, "anyth": [71, 210], "orthogon": [71, 210], "involut": 71, "_": [71, 133, 137, 142, 143], "i_": 71, "langl": 71, "undefin": [71, 209], "complex": [71, 87, 88, 90, 91, 147, 210, 213, 215], "degre": [71, 108], "freedom": [71, 213], "continuum": 71, "cancel": [71, 208], "due": [71, 73, 103, 149, 173, 209], "movemark": [71, 73, 208], "move_customwaveform": [71, 72, 74, 76, 208], "move_crf_crf": [71, 208], "move_tgss_crf": 71, "detun": [72, 73, 74, 75, 76, 208], "bookkeep": 73, "unknown": [73, 178, 202], "pair": [73, 152, 172, 173, 178, 210], "back": [73, 178, 185], "came": 73, "sandwich": [73, 76, 77, 208], "At": [73, 129, 133, 210], "annot": [73, 75, 212], "mark": [73, 212], "counteract": 73, "accumul": 73, "proport": 73, "sum": [73, 76, 125, 136, 152, 163, 169, 171, 175, 176, 194, 215], "complet": [73, 209], "apply_move_gate_phase_correct": [73, 208], "track": [73, 163, 186, 208, 212, 215], "right": [75, 208, 209, 212, 213, 215], "link": [75, 168, 208, 212], "noth": [75, 160, 162, 182, 184, 188, 189, 210, 212], "explicit": [75, 208, 209], "aforement": [75, 163, 186, 210], "marker": 75, "post": [75, 128, 136], "compil": [75, 77, 117, 146, 211, 212, 215], "apply_detuning_correct": 76, "level": [76, 77, 178, 209, 210, 211, 213, 215], "validate_prx": 77, "prepar": [77, 212], "conform": 77, "constraint": [77, 152, 209, 213], "unmodifi": 77, "x": [78, 79, 82, 84, 89, 94, 108, 110, 208, 210, 214], "r_": [78, 82, 106], "phi": [78, 82, 102, 106, 110, 111, 112, 171, 198, 208], "theta": [78, 82, 106, 110, 111, 112, 176, 198, 208], "co": [78, 92, 110, 126, 129, 130, 132, 137, 138, 141, 142, 169, 171], "y": [78, 89, 108, 110, 112, 208], "sin": [78, 92, 110, 127, 131, 174], "r_z": [78, 82, 102, 106, 110, 111], "r_x": 78, "dagger": 78, "around": [78, 108, 110, 129, 175, 198], "li": 78, "bloch": [78, 110, 210], "sphere": [78, 110, 210], "prx_gateimplement": [78, 79, 94, 102], "prx_singlepulse_gateimplement": [78, 81, 82], "prx_customwaveform": [78, 83, 85, 87, 90, 92, 208, 210], "prx_draggaussian": 78, "prx_dragcosinerisefal": 78, "prx_customwaveformssx": [78, 84, 86, 88, 91, 208], "prx_draggaussiansx": [78, 208], "prx_dragcosinerisefallsx": [78, 208], "prx_fastdragsx": [78, 208], "prx_fastdrag": [78, 208], "prx_hddragsx": [78, 208], "prx_hddrag": [78, 208], "abc_constant_smooth": [78, 80, 102], "constant_prx_with_smooth_rise_fal": [78, 102, 105, 208], "prx_modulatedcustomwaveform": [78, 93, 208], "prx_modulateddragcosinerisefal": [78, 208], "arbitrarili": [79, 172, 173, 208], "smooth": [79, 172, 173], "rise_waveform": [79, 80, 105], "main_waveform": [79, 80, 105], "fall_waveform": [79, 80, 105], "middl": [79, 175], "limit": [79, 109, 204, 207, 208, 212, 215], "memori": [79, 208, 209], "doesn": 79, "_main_puls": 79, "main": [79, 209, 210], "_rise_puls": 79, "_fall_puls": 79, "cosinefal": [80, 105, 168], "cosineris": [80, 105, 168], "iq": [81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 117, 118, 125, 136, 147, 152, 155, 156, 198, 204, 207, 208], "hot": [81, 82, 92], "swappabl": [81, 82, 92], "rest_of_calibration_data": [81, 82, 92], "x_pi": [81, 83, 208], "sx": [82, 88, 91, 109, 208], "manipul": [82, 210], "formula": 82, "rz_after": [82, 84, 86, 88, 91], "rz_befor": [82, 84, 86, 88, 91, 208], "sqrt": [82, 84, 108, 208], "cosinerisefallderiv": [83, 84, 93, 168], "vz": [84, 86, 88, 91], "prx_customwaveformsvz": [84, 86], "truncatedgaussian": [85, 86, 210], "tg": [85, 86], "truncatedgaussianderiv": [85, 86, 210], "gaussian": [86, 210], "scale": [87, 90, 94, 128, 129, 149, 150, 154, 209, 210], "fdi": [87, 88], "coeffici": [87, 88, 90, 91, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 176], "compute_coefs_from_frequ": [87, 88, 90, 91, 125, 126, 127, 128, 136, 137, 138], "boolean": [87, 88, 90, 91, 128, 155], "number_of_cos_term": [87, 88, 125, 126, 127], "5": [87, 88, 129, 135, 169, 210, 212, 214, 215], "suppressed_frequ": [87, 88, 90, 91, 125, 126, 127, 128, 136, 137, 138], "suppressed_interval_width": [87, 88, 125, 126, 127], "fastdragi": [87, 88, 124, 208], "fastdragq": [87, 88, 124, 208], "rx": [89, 213, 215], "ry": [89, 208, 215], "xy_gat": 89, "hd": [90, 91, 128, 134, 136, 137, 138, 139, 140, 141, 143, 208], "hdi": [90, 91], "hddragi": [90, 91, 134, 208], "hddragq": [90, 91, 134, 208], "baseband": 92, "shape": [92, 125, 126, 127, 132, 137, 138, 154, 169, 171, 172, 173, 174, 175, 176, 211], "delta": 92, "omega_i": 92, "omega_d": 92, "a_q": 92, "omega_q": 92, "omega": [92, 169], "band": [92, 93], "static": [94, 125, 128, 136, 169, 171, 175, 176, 191, 194, 208], "_single_iq_puls": [94, 208], "resonantli": 94, "x_": 94, "linearli": [94, 210], "adjust": [94, 198, 208, 209, 213], "iq_puls": [94, 208], "2x2": [95, 107, 112], "gate_nam": [96, 210], "impl_class": [96, 210], "set_as_default": 96, "quantum_op_spec": [96, 210], "spec": 96, "reset_condit": [97, 213], "reset_wait": [97, 208], "__default_feedback": 98, "doubl": [98, 99], "underscor": [98, 99], "emphas": [98, 99], "fact": [98, 99], "manual": [98, 99, 171, 210], "__reset": 99, "reset": [100, 101, 150, 178, 208, 209, 210, 213], "necessari": [100, 182, 209, 210, 215], "accommod": 100, "upon": 100, "relax": [101, 208], "compar": [101, 155, 162, 208], "shot": [101, 209], "destroi": 101, "wait_box": 101, "rz_virtual": 102, "rz_acstarkshift": [102, 104], "rz_acstarkshift_cosinerisefal": 102, "rz_acstarkshift_smoothconst": [102, 208], "strong": 103, "off": [103, 208], "lead": [103, 208], "shift": [103, 149], "ac_stark_puls": 103, "ac_stark_waveform": 104, "increment": [104, 106, 150, 157, 198, 208], "techniqu": [106, 111], "oscil": [106, 157, 198], "shortest": 106, "algebra": [106, 157], "commut": [106, 198], "toward": 106, "hit": 106, "elimin": 106, "multi": 106, "hold": [106, 212], "diagon": 106, "immedi": [106, 182, 208], "conjug": 106, "alpha": [106, 169, 170], "accomplish": 106, "assumpt": [106, 176], "negat": 106, "sigma": [108, 210, 214], "_x": 108, "xz": 108, "90": [108, 214], "sxgate": [108, 208], "parametr": [110, 176, 210, 214], "euler": [110, 111], "lambda": [110, 111, 208, 210], "subsequ": [110, 212], "r_y": [110, 111], "express": [110, 125, 176, 212], "h": [110, 129], "8": [110, 135, 212], "http": [110, 212], "openqasm": 110, "com": 110, "languag": [110, 209, 212], "html": [110, 167, 208], "ugat": [110, 208], "lam": [111, 112], "decomposit": 111, "cdot": 111, "probechannelproperti": 114, "channelconfigur": [114, 120], "realchannelconfig": [114, 116, 118], "iqchannelconfig": 114, "channeldescript": [114, 204, 205], "instruction_t": 116, "uniqu": [116, 178, 209, 210], "waveform_t": 116, "add_instruct": 116, "integ": [116, 117, 148, 194, 215], "similar": [116, 208, 210], "manner": 116, "instruction_duration_granular": [117, 119], "instruction_duration_min": [117, 119, 123], "compatible_instruct": [117, 119, 200], "is_iq": [117, 119], "is_virtu": [117, 119], "blocks_compon": [117, 119], "zi": 117, "hdawg": 117, "shfsg": 117, "shfqa": 117, "32": [117, 209], "16": [117, 162, 209, 214], "hack": 117, "frontend": 117, "sent": [117, 208, 209, 212], "might": [117, 209, 210, 213, 215], "duration_to_sampl": 117, "duration_to_second": 117, "duration_to_int_sampl": 117, "messag": [117, 180, 194], "check_min_sampl": 117, "close": [117, 208, 215], "test": [117, 208], "output": [117, 146, 158, 167, 178, 208, 209, 213, 215], "unaccept": 117, "round_duration_to_granular": 117, "round_up": [117, 123], "force_min_dur": [117, 123], "closest": [117, 123], "upconvers": [118, 157], "center_frequ": 119, "integration_start_dead_tim": 119, "integration_stop_dead_tim": 119, "dead": 119, "real": [120, 150, 154, 155, 176, 209], "flux_control": 121, "readout_control": 121, "intern": [121, 208, 209, 215], "standard": [122, 215], "channel_properti": [122, 162, 187], "largest": 123, "fourier": [124, 125, 126, 127, 129, 132, 133, 176], "ansatz": [124, 125, 126, 127], "spectrum": [124, 125, 126, 127, 128, 133], "suppressedpuls": [124, 125, 134, 136], "fastdrag": [124, 126, 127], "fast_drag": [125, 126, 127, 128, 134], "envelop": [125, 126, 127, 128, 130, 131, 135, 137, 138, 139, 140, 141, 142, 150, 208, 214], "domain": [125, 133], "suppress": [125, 128, 129, 133, 135, 136, 137, 139, 140, 142, 143], "interv": [125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 142, 152, 209, 210], "accord": [125, 133, 137, 138, 194, 215], "furthermor": 125, "similarli": [125, 208, 210], "ordinari": 125, "detail": [125, 175, 176, 178, 209, 211, 213], "seri": [125, 126, 127, 128, 129, 130, 131, 141], "width": [125, 128, 162, 174, 175], "last": [125, 213, 215], "potenti": [125, 208], "cutoff": 125, "non_timelike_attribut": [125, 136, 169, 171, 175, 176, 210], "timelik": [125, 136, 169, 171, 175, 176], "dimensionless": [125, 136, 169, 171, 175, 176], "window": [125, 136, 145, 156, 169, 171, 174, 175, 176], "invers": [125, 129, 136, 169, 171, 175, 176], "sum_": [126, 127, 129, 130, 131, 137, 138, 139, 140, 141, 142], "c_n": [126, 127, 130, 131, 133], "t_p": [126, 127, 129, 130, 131, 132, 137, 138, 141, 142], "_sampl": [126, 127, 137, 138, 169, 171, 172, 173, 174, 175, 176, 210], "sample_coord": [126, 127, 137, 138, 169, 171, 172, 173, 174, 175, 176, 210], "coordin": [126, 127, 137, 138, 169, 171, 172, 173, 174, 175, 176], "expans": [128, 129], "choos": [128, 210, 212], "neglect": [128, 136], "_normal": 128, "avoid": [128, 129, 208], "clip": 128, "re": 128, "n_arr": [129, 132], "suppressed_freq_ranges_2darr": 129, "pulse_dur": [129, 130, 131, 132, 133, 139, 140, 141, 143], "time_scaling_factor": 129, "n_points_for_integr": [129, 133], "60": [129, 133], "evalu": [129, 130, 131, 132, 133, 139, 140, 141, 148], "eq": [129, 132, 133, 136, 137, 138, 143], "a_": 129, "nm": 129, "int_": 129, "f_": [129, 169], "l": [129, 214], "hat": 129, "_n": 129, "_m": 129, "mathrm": [129, 169], "m": [129, 214], "row": 129, "column": 129, "denot": [129, 137, 138, 210], "transform": [129, 132, 133, 208, 209, 211, 212], "g_n": [129, 132], "importantli": [129, 209], "fulli": 129, "1d": [129, 132, 133], "2d": [129, 133], "give": [129, 209, 210, 212, 215], "factor": [129, 150, 154, 176, 210], "excess": 129, "small": [129, 208, 209], "integrand": [129, 133], "50": [129, 133, 212], "recommend": [129, 133, 212], "numer": [129, 133, 176], "low": [129, 133, 210], "t_arr": [130, 131, 139, 140, 141], "nth": [132, 141], "analyt": [132, 176, 214], "a7": [132, 133], "frequency_arr": 132, "tensor": 132, "dim": 132, "cartesian": 132, "number_of_cosin": 133, "weights_tupl": 133, "suppressed_freq_ranges_2d_tupl": 133, "solv": [133, 142, 143], "optim": [133, 176, 188, 208], "a5": 133, "a12": 133, "a13": 133, "effici": [133, 213], "rb": 133, "outer": 133, "appendix": [134, 212], "hddrag": [134, 137, 138], "33333333": 135, "6": [135, 212, 214], "22857143": 135, "02857143": 135, "66666667": 135, "95238095": 135, "35714286": 135, "07936508": 135, "00793651": 135, "71428571": 135, "07142857": 135, "47619048": 135, "14285714": 135, "02597403": 135, "0021645": 135, "75000000e": 135, "16666667e": 135, "83333333e": 135, "12121212e": 135, "30303030e": 135, "02": 135, "15850816e": 135, "03": 135, "82750583e": 135, "04": [135, 211], "7": [135, 212], "77777778e": 135, "24444444e": 135, "78787879e": 135, "82828283e": 135, "70240870e": 135, "86480186e": 135, "48640249e": 135, "55400155e": 135, "0th": 135, "solve_cosine_coefs_for_hd_drag": 135, "hd_drag": [136, 137, 138], "b1": [136, 137, 138], "b2": 136, "beta_": [137, 138, 139, 140, 143], "2n": [137, 138, 139, 140, 143], "d_k": [137, 138, 141, 142], "continu": [137, 138], "2k": [137, 138], "slightli": [137, 138], "derivative_coefs_arr": [139, 140], "cosine_coefs_arr": [139, 140, 141], "even": [139, 186, 187, 208, 210, 212], "number_of_suppressed_freq": 142, "suppressed_freq_arr": 143, "b5": 143, "beta_0": 143, "ghz": 143, "realpuls": [144, 149, 204, 206, 207, 210], "multiplexediqpuls": [144, 153], "timetrac": 144, "complexintegr": [144, 155], "thresholdstatediscrimin": 144, "delay_sampl": [145, 147, 155, 156], "acquir": [145, 153, 209], "qb1__readout": 145, "strictli": [146, 209, 210], "strict": [146, 208, 209], "version": [146, 211, 212], "dd": 146, "outcom": 148, "choic": 148, "ok": [148, 150, 151, 154], "get_child_instruct": [148, 151], "child": [148, 151, 186, 187, 204, 207], "collect": [149, 209, 210], "scale_i": [150, 210], "scale_q": [150, 210], "upconvert": 150, "success": 150, "carrier": 150, "get_waveform": [150, 151, 154], "command": [151, 209, 213], "entri": [152, 210], "outsid": [152, 209, 210], "truncat": [152, 185, 208], "neg": 152, "probe_puls": 153, "feedback_signal_label": [155, 208], "transmit": 155, "field": [155, 210, 212], "duration_sampl": 156, "captur": [156, 211], "updat": [157, 208, 213], "sure": 158, "synchron": 162, "program": 162, "critic": 162, "constructor": 162, "account": [162, 176, 208], "pprint": 162, "time_unit": 162, "fix": [162, 209], "graphic": 162, "represent": [162, 194, 209], "symbol": 162, "keysview": 162, "mutat": [162, 163], "vice": [162, 163], "versa": [162, 163], "immut": [162, 163], "add_channel": 162, "channel_nam": [162, 215], "front_pad": 162, "to_dur": 162, "variabl": [162, 186, 208], "front_pad_in_second": 162, "pad_to_hard_box": 162, "pad_to_hard_box_in_second": 162, "smallest": 162, "revers": 162, "preserv": [162, 182, 209, 215], "rear": 162, "reverse_hard_box": 162, "No": [162, 208], "synchronis": 162, "break": 162, "cleanup": [162, 208], "clean": [162, 208], "thing": [162, 172, 173], "has_content_in": 162, "keep": [163, 186], "_instruct": 163, "_durat": 163, "prepend": 163, "pop": 163, "idx": [163, 185], "12": [164, 188, 189], "comp": [164, 208], "1281": 164, "visualis": [166, 208], "view": [167, 208], "browser": 167, "jupyt": 167, "notebook": 167, "ipython": 167, "core": [167, 208], "displai": [167, 208, 212], "inspect": 167, "don": [168, 212], "serial": 168, "reimport": 168, "document": [168, 208, 212], "appear": [168, 209, 212], "chirp": [168, 170, 208], "chirpimag": [168, 208], "freq_start": [169, 170], "freq_stop": [169, 170], "05": [169, 170], "taper": 169, "rectangular": [169, 186], "hann": 169, "nyquist": 169, "zone": 169, "constrain": 169, "5707963267948966": 170, "imaginari": 170, "period": 171, "sinusoid": [171, 174, 175], "made": [172, 173, 194, 210, 211, 212, 215], "dummi": 173, "bug": 173, "fixm": 173, "p": [174, 214], "plateau": 174, "Its": [174, 209], "midpoint": [174, 176], "descript": [175, 194, 212], "minim": [176, 182, 208], "adiabat": [176, 214], "prior": 176, "lambda_n": 176, "tau_": 176, "acceler": 176, "reconstruct": 176, "tau": 176, "lab": 176, "interpol": 176, "v": [176, 204, 207, 208], "voltag": 176, "go": [176, 210], "advis": [176, 212], "look": [176, 210], "mathemat": [176, 211], "heavi": 176, "leakag": [176, 214], "strength": 176, "squid": [176, 208], "asymmetri": [176, 208], "_sample_normalized_slepian": 176, "coord": 176, "_t_tau": 176, "num_sampl": 176, "129": 176, "convers": [176, 210, 212], "solut": 176, "therefor": [176, 209], "scipi": [176, 208], "romb": 176, "_theta_tau": 176, "shown": [176, 208, 213], "tau_puls": 176, "quantum_op": 178, "short": [178, 188], "simpl": [178, 194, 209, 210, 214], "unambigu": [178, 209, 210], "subsystem": 178, "qumod": 178, "pictur": [178, 213], "famili": [178, 209], "plural": 178, "intent": 178, "target": [178, 208, 215], "callabl": [178, 210], "lowest": [178, 209], "docstr": 178, "exact": [178, 210], "first_qubit_basis_ket": 178, "second_qubit_basis_ket": 178, "set_default_implement": [178, 210], "set_default_implementation_for_locu": [178, 210], "cal_data": 180, "impl": [180, 210], "noiseless": 182, "sync": 182, "try": [182, 208], "segmentpoint": 182, "nonsolid": 183, "nevertheless": 183, "tol": [185, 188, 189], "frac": 185, "serv": 185, "pointer": 185, "smaller": [185, 188, 189], "toler": 185, "remaind": 185, "cut_tail": 185, "cut": 185, "tail": 185, "onward": 185, "rewind": 185, "fastforward": 185, "forward": 185, "child_schedul": [186, 187], "child_compon": [186, 187], "neighborhood_compon": [186, 187, 191, 194], "component_dur": [186, 187], "is_alap": [186, 187], "respect": [186, 192, 204, 207, 209, 210], "hard": [186, 208], "rag": [186, 188, 189], "edg": [186, 208], "earliest": [186, 187], "max": 186, "combin": [186, 212], "extend_hard_boundary_in_second": 186, "computational_reson": [186, 187], "These": [186, 187, 194, 208, 209, 210, 215], "ever": [186, 187], "alap": [186, 187, 193, 194, 209, 215], "As": [186, 187, 194, 210, 213], "late": [186, 187, 193, 194], "extend_hard_boundari": 187, "incom": 187, "extens": [188, 189, 208], "reserv": 190, "resourc": 190, "schedulingstrategi": [190, 191, 192, 194, 215], "locus_compon": [191, 194, 210], "asap": [191, 193, 194, 209, 213, 215], "from_readout_trigg": 191, "readout_trigg": 191, "probe_channel": 191, "block_channel": 191, "block_dur": 191, "soon": [193, 194, 208, 213], "fragment": 194, "human": [194, 209, 210], "readabl": [194, 208, 209, 212], "union": [194, 212, 215], "rule": [194, 198, 208, 209, 210, 215], "operand": [194, 215], "pipe": [194, 215], "group": [194, 210, 215], "let": [194, 210], "a_then_b": 194, "c_then_d": 194, "set_alap": [194, 215], "abcd": 194, "abb": 194, "ccd": 194, "all_togeth": 194, "dictat": 194, "flatten": 194, "ancestor": 194, "set_asap": 194, "print": [194, 208, 212, 215], "_idx": 194, "type_hint": 196, "python": [196, 208, 210], "typehint": 196, "psi_1": 198, "psi_2": 198, "decrement": 198, "beforehand": 198, "opposit": 198, "direct": [198, 212], "playlistvalidationerror": 199, "awgschedulevalidationdata": [199, 204], "awgschedulevalidationerror": 199, "invalidinstructionerror": 199, "sampling_r": 200, "min_number_of_sampl": 200, "fail": [201, 203], "issue_str": 202, "encount": 202, "channel_descript": [204, 205], "device_constraint": [204, 205, 207], "minimum": [204, 207, 209], "broken": 208, "inspect_playlist": [208, 209], "miss": 208, "ifram": 208, "tag": 208, "code": [208, 210, 212, 213], "licens": [208, 211], "vulner": 208, "issu": [208, 212], "safe_load": 208, "harm": 208, "remot": 208, "sw": 208, "1378": 208, "prx_12": 208, "modulated_drag_crf": 208, "baseclass": 208, "packag": 208, "publish": 208, "doc": [208, 210], "footer": 208, "1392": 208, "pep": 208, "604": 208, "lint": 208, "1230": 208, "rework": 208, "delet": 208, "major": 208, "stai": 208, "register_implement": [208, 209, 210], "split": [208, 209], "seen": 208, "register_g": 208, "validate_oper": 208, "compare_oper": 208, "add_implement": 208, "validate_implement": 208, "set_default": 208, "build_quantum_op": [208, 209], "py": 208, "yield": 208, "didn": 208, "renam": 208, "crystal": 208, "star": 208, "architectur": 208, "crystal_5": 208, "star_6": 208, "mini": 208, "mini_crystal_20": 208, "crystal_20": 208, "1059": 208, "electron": [208, 210, 212], "bump": 208, "refactor": 208, "deprec": 208, "usag": [208, 210], "register_gate_implement": 208, "imposs": 208, "retain": [208, 212], "rapidjson": 208, "685": 208, "previous": 208, "x90": 208, "were": 208, "though": [208, 209, 210], "codebas": 208, "467": 208, "speed": 208, "reshap": 208, "faster": 208, "neither": [208, 210], "assing": 208, "signific": 208, "speedup": 208, "anywai": 208, "diffrenet": 208, "broader": 208, "numpi": [208, 215], "verifi": 208, "compatibili": 208, "ruff": 208, "migrat": 208, "guid": 208, "builtin": 208, "easili": [208, 211, 215], "quantumcircuit": 208, "extract": 208, "crf_acstarkcrf": 208, "slepian_acstarkcrf": 208, "repo": 208, "organ": [208, 215], "1042": 208, "disabl": 208, "horizont": 208, "scroll": 208, "toggl": 208, "cover": 208, "concept": [208, 210, 211], "531": 208, "gitlab": 208, "public": 208, "page": [208, 211, 212], "776": 208, "mr": 208, "514": 208, "client": [208, 209, 210, 211], "apach": [208, 212], "extlink": 208, "sphinx": 208, "916": 208, "intersphinx": 208, "665": 208, "becaus": [208, 210], "proper": 208, "realiz": [208, 214], "former": 208, "semant": [208, 209], "disturb": 208, "774": 208, "leak": 208, "web": 208, "artifact": 208, "resetwait": 208, "comfort": [208, 210], "timelin": [208, 209], "redisplai": 208, "upcom": 208, "releas": 208, "prefer": [208, 210, 212], "font": 208, "viewer": 208, "358": 208, "typo": 208, "api": [208, 210, 211, 215], "workflow": [208, 215], "meth": 208, "pulla": [208, 211, 215], "crash": 208, "discoveri": 208, "throw": 208, "sc": 208, "nonsens": 208, "mcm": 208, "cc_prx": [208, 213], "merge_dict": 208, "crf_crf": 208, "interfac": [208, 210, 212], "feedback_label": 208, "conditional_prx": 208, "hopefulli": 208, "yml": 208, "conditionalreset": 208, "mid": 208, "constant_qnd": 208, "qndness": 208, "phase_increment_befor": 208, "sign": 208, "phase_transform": 208, "fulfil": 208, "satisfi": [208, 213], "conditionalprx": 208, "accept": [208, 212], "signifi": 208, "weigth": 208, "canon": [208, 210], "whitelist": 208, "2112": 208, "write": [208, 210, 212], "1831": 208, "drag_crf_sx": 208, "drag_gaussian_sx": 208, "prx_u": 208, "prx_sx": 208, "_x_pi_puls": 208, "547": 208, "prioritis": 208, "1929": 208, "1468": 208, "programm": 208, "1925": 208, "crude": 208, "visual": [208, 209, 213], "measure_nop": 208, "validate_move_instruct": 208, "2056": 208, "pipelin": [208, 213], "overview": 209, "terminologi": 209, "deliv": 209, "send": [209, 213], "assembli": 209, "batch": 209, "summar": 209, "imag": [209, 213], "illustr": [209, 213], "visibl": 209, "microwav": [209, 211], "ambigu": 209, "machin": 209, "violat": 209, "concern": 209, "philosophi": 209, "inaccess": 209, "attempt": 209, "smart": 209, "magic": 209, "inconsist": 209, "transpar": 209, "technic": 209, "apart": 209, "few": 209, "instant": 209, "thought": [209, 213], "desir": [209, 215], "read": [209, 213, 215], "disjoint": [209, 215], "partli": 209, "figur": [209, 213], "demonstr": 209, "explain": 209, "necessarili": [209, 210, 212], "variou": [209, 210], "runtim": [209, 213, 215], "bridg": 209, "gap": 209, "repeat": [209, 215], "repetit": 209, "encod": 209, "aim": 209, "fit": [209, 212], "chunk": 209, "neat": 209, "metadata": 210, "question": [210, 215], "cnot": 210, "NOT": 210, "On": [210, 213], "hand": 210, "frozen": 210, "programmat": 210, "procedur": 210, "invok": 210, "random": 210, "benchmark": 210, "getter": 210, "qc": 210, "introduc": 210, "emphasi": 210, "def": 210, "_default": 210, "implementation_": 210, "default_prx_qb1": 210, "special_prx_qb1": 210, "my_special_prx": 210, "default_box": 210, "chain": [210, 213], "default_cz_box": 210, "pure": 210, "develop": 210, "thumb": 210, "rest": 210, "simplifi": [210, 213], "educ": 210, "__class__": 210, "__name__": 210, "subsect": 210, "relai": 210, "live": 210, "asymmetr": 210, "tri": 210, "replic": 210, "mandatori": 210, "alter": 210, "physcial": 210, "averag": 210, "mu": 210, "spread": 210, "recip": 210, "offset_coord": 210, "exp": 210, "resampl": 210, "understand": [210, 213, 214], "unitless": 210, "scalar_coeffieci": 210, "quick": [210, 211, 215], "simplest": 210, "composteg": 210, "compositehadamard": 210, "hadamard": 210, "_this_": 210, "member_prx": 210, "latter": 210, "onelin": 210, "prx_mycoolwaveform": 210, "coolwaveformi": 210, "coolwaveformq": 210, "my": 210, "cool": 210, "cz_mycoolwaveform": 210, "coolcouplerwaveform": 210, "coolqubitwaveform": 210, "measure_mycoolwaveform": 210, "preload": 210, "altogeth": 210, "snippet": 210, "cnot_matrix": 210, "cnot_op": 210, "my_build": 210, "my_cnot_impl": 210, "mycnotclass": 210, "implementation_class": 210, "access": [210, 215], "9": [211, 212, 213, 215], "date": [211, 212], "2025": 211, "24": 211, "high": [211, 214], "unifi": 211, "hide": 211, "But": 211, "framework": [211, 215], "machineri": 211, "standalon": 211, "librari": [211, 213], "encourag": [211, 215], "familiar": 211, "especi": [211, 215], "miscellan": 211, "pitfal": 211, "changelog": 211, "search": 211, "januari": 212, "2004": [212, 214], "www": 212, "org": 212, "AND": 212, "FOR": 212, "reproduct": 212, "distribut": 212, "shall": 212, "licensor": 212, "copyright": 212, "owner": 212, "entiti": 212, "author": 212, "grant": 212, "legal": 212, "power": 212, "indirect": 212, "manag": 212, "contract": 212, "ii": 212, "ownership": 212, "fifti": 212, "percent": 212, "outstand": 212, "iii": 212, "benefici": 212, "exercis": 212, "permiss": 212, "modif": 212, "softwar": [212, 214], "mechan": 212, "translat": 212, "media": 212, "authorship": 212, "notic": [212, 215], "editori": 212, "revis": 212, "elabor": 212, "mere": 212, "bind": 212, "thereof": 212, "contribut": 212, "intention": 212, "submit": 212, "inclus": 212, "behalf": 212, "verbal": 212, "written": 212, "commun": 212, "mail": 212, "discuss": 212, "conspicu": 212, "Not": [212, 215], "contributor": 212, "whom": 212, "incorpor": 212, "herebi": 212, "perpetu": 212, "worldwid": 212, "exclus": 212, "charg": 212, "royalti": 212, "free": [212, 214], "irrevoc": 212, "reproduc": 212, "publicli": 212, "sublicens": 212, "patent": 212, "offer": 212, "sell": 212, "claim": 212, "infring": 212, "alon": 212, "institut": 212, "litig": 212, "counterclaim": 212, "lawsuit": 212, "alleg": 212, "contributori": 212, "termin": 212, "redistribut": 212, "medium": 212, "meet": 212, "recipi": 212, "promin": 212, "trademark": 212, "pertain": 212, "along": 212, "wherev": 212, "third": 212, "parti": 212, "alongsid": 212, "addendum": 212, "constru": 212, "statement": [212, 213], "compli": 212, "submiss": 212, "notwithstand": 212, "herein": 212, "supersed": 212, "agreement": 212, "regard": 212, "trade": 212, "servic": 212, "customari": 212, "disclaim": 212, "warranti": 212, "law": 212, "agre": 212, "AS": 212, "OR": 212, "OF": 212, "kind": 212, "titl": 212, "merchant": 212, "sole": 212, "risk": 212, "liabil": 212, "event": 212, "theori": 212, "tort": 212, "neglig": 212, "deliber": 212, "grossli": 212, "liabl": 212, "damag": 212, "incident": 212, "consequenti": 212, "inabl": 212, "loss": 212, "goodwil": 212, "stoppag": 212, "failur": 212, "malfunct": 212, "commerci": 212, "fee": 212, "indemn": 212, "oblig": 212, "indemnifi": 212, "harmless": 212, "incur": 212, "assert": 212, "boilerpl": 212, "enclos": 212, "bracket": 212, "comment": 212, "easier": 212, "identif": 212, "archiv": 212, "2024": [212, 214], "complianc": 212, "govern": 212, "show": 213, "flexibl": 213, "goal": 213, "finit": 213, "condition": 213, "qccsw": 213, "excut": 213, "too": 213, "earli": 213, "facilit": 213, "travel": 213, "conditionalinstrucion": 213, "equaival": 213, "feedaback_kei": 213, "reset_qb2": 213, "set_qb3_to_1": 213, "cc_prx_qb4": 213, "2nd": [213, 214], "prx_qb3": 213, "prx_qb4": 213, "80e": [213, 215], "clariti": 213, "bottom": 213, "master": 213, "slave": 213, "compens": 213, "trigger_delai": 213, "explan": 213, "end_delai": 213, "spcecifi": 213, "trigger_mast": 213, "emit": 213, "daisi": 213, "central": 213, "cabl": 213, "eric": 214, "hyypp": 214, "\u00e4": 214, "antti": 214, "vep": 214, "inen": 214, "miha": 214, "papi": 214, "\u010d": 214, "chun": 214, "fai": 214, "chan": 214, "sinan": 214, "inel": 214, "alessandro": 214, "landra": 214, "wei": 214, "liu": 214, "\u00fc": 214, "rgen": 214, "luu": 214, "fabian": 214, "marxer": 214, "caspar": 214, "ockeloen": 214, "korppi": 214, "reduc": 214, "superconduct": 214, "processor": 214, "030353": 214, "doi": 214, "1103": 214, "prxquantum": 214, "john": 214, "martini": 214, "michael": 214, "geller": 214, "_z": 214, "phy": 214, "rev": 214, "022307": 214, "aug": 214, "2014": 214, "arxiv": 214, "1402": 214, "5467": 214, "physreva": 214, "lyon": 214, "digit": 214, "prentic": 214, "hall": 214, "edit": 214, "isbn": 214, "978": 214, "0131089891": 214, "cecilia": 214, "gisel": 214, "jarn": 214, "heurist": 214, "approach": 214, "anal": 214, "afa": 214, "29": 214, "51": 214, "57": 214, "2018": 214, "1703": 214, "06812": 214, "31527": 214, "analesafa": 214, "eyob": 214, "sete": 214, "nicola": 214, "didier": 214, "angela": 214, "chen": 214, "shobhan": 214, "kulshreshtha": 214, "riccardo": 214, "manenti": 214, "stefano": 214, "poletto": 214, "entangl": 214, "appl": 214, "024050": 214, "2021": 214, "2104": 214, "03511": 214, "physrevappli": 214, "youngkyu": 214, "sung": 214, "leon": 214, "ding": 214, "jochen": 214, "braum\u00fcller": 214, "veps\u00e4l\u00e4inen": 214, "bharath": 214, "kannan": 214, "morten": 214, "kjaergaard": 214, "ami": 214, "green": 214, "gabriel": 214, "o": 214, "samach": 214, "chri": 214, "mcnalli": 214, "david": 214, "kim": 214, "alexand": 214, "melvil": 214, "bethani": 214, "niedzielski": 214, "molli": 214, "schwartz": 214, "jonilyn": 214, "yoder": 214, "terri": 214, "orlando": 214, "simon": 214, "gustavsson": 214, "william": 214, "oliv": 214, "fidel": 214, "zz": 214, "021058": 214, "jun": 214, "2011": 214, "01261": 214, "physrevx": 214, "capabl": 215, "ask": 215, "recogn": 215, "cz_gate_impl": 215, "prx_gate_impl": 215, "measure_gate_impl": 215, "keyword": 215, "instanti": 215, "x180": 215, "y90": 215, "100e": 215, "decid": 215, "p1": 215, "p2": 215, "handi": 215, "circuit3": 215, "sub": 215, "word": 215, "slide": 215, "past": 215, "neighbour": 215, "neighbourhood": 215, "worri": 215, "advers": 215, "ruin": 215, "best": 215, "arrang": 215, "aid": 215, "discov": 215, "all_qubit": 215, "get_neighbor_locus_compon": 215, "160e": 215, "cz_schedul": 215, "forget": 215}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [113, 0, 0, "-", "playlist"], [177, 0, 0, "-", "quantum_ops"], [182, 0, 0, "-", "scheduler"], [190, 0, 0, "-", "timebox"], [195, 0, 0, "-", "utils"], [199, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "default_implementations"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 4, 1, "", "build"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 4, 1, "", "needs_calibration"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [71, 0, 0, "-", "move"], [78, 0, 0, "-", "prx"], [96, 1, 1, "", "register_implementation"], [97, 0, 0, "-", "reset"], [102, 0, 0, "-", "rz"], [108, 0, 0, "-", "sx"], [110, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[72, 2, 1, "", "MOVE_CRF_CRF"], [73, 2, 1, "", "MOVE_CustomWaveforms"], [74, 2, 1, "", "MOVE_TGSS_CRF"], [75, 2, 1, "", "MoveMarker"], [76, 1, 1, "", "apply_move_gate_phase_corrections"], [77, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[72, 3, 1, "", "coupler_wave"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "qubit_wave"], [72, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[73, 4, 1, "", "_call"], [73, 3, 1, "", "coupler_wave"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "qubit_wave"], [73, 3, 1, "", "root_parameters"], [73, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[74, 3, 1, "", "coupler_wave"], [74, 3, 1, "", "parameters"], [74, 3, 1, "", "qubit_wave"], [74, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[75, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[79, 2, 1, "", "ABC_Constant_smooth"], [80, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [81, 2, 1, "", "PRX_CustomWaveforms"], [82, 2, 1, "", "PRX_CustomWaveformsSX"], [83, 2, 1, "", "PRX_DRAGCosineRiseFall"], [84, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [85, 2, 1, "", "PRX_DRAGGaussian"], [86, 2, 1, "", "PRX_DRAGGaussianSX"], [87, 2, 1, "", "PRX_FastDrag"], [88, 2, 1, "", "PRX_FastDragSX"], [89, 2, 1, "", "PRX_GateImplementation"], [90, 2, 1, "", "PRX_HdDrag"], [91, 2, 1, "", "PRX_HdDragSX"], [92, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [93, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [94, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [95, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[79, 4, 1, "", "_call"], [79, 4, 1, "", "_fall_pulse"], [79, 4, 1, "", "_main_pulse"], [79, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[80, 3, 1, "", "fall_waveform"], [80, 3, 1, "", "main_waveform"], [80, 3, 1, "", "parameters"], [80, 3, 1, "", "rise_waveform"], [80, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[81, 4, 1, "", "_get_pulse"], [81, 3, 1, "", "dependent_waves"], [81, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[82, 4, 1, "", "_call"], [82, 4, 1, "", "_get_pulse"], [82, 3, 1, "", "dependent_waves"], [82, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[83, 4, 1, "", "_get_pulse"], [83, 3, 1, "", "dependent_waves"], [83, 3, 1, "", "excluded_parameters"], [83, 3, 1, "", "parameters"], [83, 3, 1, "", "wave_i"], [83, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[84, 4, 1, "", "_get_pulse"], [84, 3, 1, "", "dependent_waves"], [84, 3, 1, "", "excluded_parameters"], [84, 3, 1, "", "parameters"], [84, 3, 1, "", "wave_i"], [84, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[85, 3, 1, "", "dependent_waves"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "wave_i"], [85, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "parameters"], [86, 3, 1, "", "wave_i"], [86, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[87, 3, 1, "", "dependent_waves"], [87, 3, 1, "", "parameters"], [87, 3, 1, "", "wave_i"], [87, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[88, 3, 1, "", "dependent_waves"], [88, 3, 1, "", "parameters"], [88, 3, 1, "", "wave_i"], [88, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[89, 4, 1, "", "_call"], [89, 4, 1, "", "clifford"], [89, 4, 1, "", "get_locus_mapping_name"], [89, 4, 1, "", "rx"], [89, 4, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[90, 3, 1, "", "dependent_waves"], [90, 3, 1, "", "parameters"], [90, 3, 1, "", "wave_i"], [90, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[91, 3, 1, "", "dependent_waves"], [91, 3, 1, "", "parameters"], [91, 3, 1, "", "wave_i"], [91, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[92, 4, 1, "", "_get_pulse"], [92, 3, 1, "", "dependent_waves"], [92, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[93, 4, 1, "", "_get_pulse"], [93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "excluded_parameters"], [93, 3, 1, "", "parameters"], [93, 3, 1, "", "wave_i"], [93, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[94, 4, 1, "", "_call"], [94, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[98, 6, 1, "", "RESET_FEEDBACK_KEY"], [99, 6, 1, "", "RESET_MEASUREMENT_KEY"], [100, 2, 1, "", "Reset_Conditional"], [101, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[100, 4, 1, "", "_call"], [100, 4, 1, "", "get_locus_mapping_name"], [100, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[101, 4, 1, "", "_call"], [101, 4, 1, "", "duration_in_seconds"], [101, 4, 1, "", "get_custom_locus_mapping"], [101, 3, 1, "", "parameters"], [101, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[103, 2, 1, "", "RZ_ACStarkShift"], [104, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [105, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [106, 2, 1, "", "RZ_Virtual"], [107, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[103, 4, 1, "", "_ac_stark_pulse"], [103, 4, 1, "", "_call"], [103, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[104, 3, 1, "", "ac_stark_waveform"], [104, 3, 1, "", "parameters"], [104, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[105, 3, 1, "", "fall_waveform"], [105, 3, 1, "", "main_waveform"], [105, 3, 1, "", "parameters"], [105, 3, 1, "", "rise_waveform"], [105, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[106, 4, 1, "", "_call"], [106, 4, 1, "", "duration_in_seconds"], [106, 4, 1, "", "get_locus_mapping_name"], [106, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[109, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[109, 4, 1, "", "_call"], [109, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[111, 2, 1, "", "UGate"], [112, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[111, 4, 1, "", "_call"], [111, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[114, 0, 0, "-", "channel"], [124, 0, 0, "-", "fast_drag"], [134, 0, 0, "-", "hd_drag"], [144, 0, 0, "-", "instructions"], [159, 0, 0, "-", "playlist"], [160, 0, 0, "-", "schedule"], [165, 0, 0, "-", "visualisation"], [168, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[115, 2, 1, "", "ChannelConfiguration"], [116, 2, 1, "", "ChannelDescription"], [117, 2, 1, "", "ChannelProperties"], [118, 2, 1, "", "IQChannelConfig"], [119, 2, 1, "", "ProbeChannelProperties"], [120, 2, 1, "", "RealChannelConfig"], [121, 1, 1, "", "get_channel_properties"], [122, 1, 1, "", "get_channel_properties_from_station_settings"], [123, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[116, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[117, 3, 1, "", "blocks_component"], [117, 3, 1, "", "compatible_instructions"], [117, 4, 1, "", "duration_to_int_samples"], [117, 4, 1, "", "duration_to_samples"], [117, 4, 1, "", "duration_to_seconds"], [117, 3, 1, "", "instruction_duration_granularity"], [117, 3, 1, "", "instruction_duration_min"], [117, 3, 1, "", "is_iq"], [117, 3, 1, "", "is_virtual"], [117, 4, 1, "", "round_duration_to_granularity"], [117, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[118, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[119, 3, 1, "", "center_frequency"], [119, 3, 1, "", "integration_start_dead_time"], [119, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[120, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[125, 2, 1, "", "FastDrag"], [126, 2, 1, "", "FastDragI"], [127, 2, 1, "", "FastDragQ"], [128, 2, 1, "", "SuppressedPulse"], [129, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [130, 1, 1, "", "evaluate_fast_drag_i_envelope"], [131, 1, 1, "", "evaluate_fast_drag_q_envelope"], [132, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [133, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[125, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[126, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[127, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[128, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[135, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [136, 2, 1, "", "HdDrag"], [137, 2, 1, "", "HdDragI"], [138, 2, 1, "", "HdDragQ"], [139, 1, 1, "", "evaluate_hd_drag_i_envelope"], [140, 1, 1, "", "evaluate_hd_drag_q_envelope"], [141, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [142, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [143, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[136, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[137, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[138, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[145, 2, 1, "", "AcquisitionMethod"], [146, 2, 1, "", "Block"], [147, 2, 1, "", "ComplexIntegration"], [148, 2, 1, "", "ConditionalInstruction"], [149, 2, 1, "", "FluxPulse"], [150, 2, 1, "", "IQPulse"], [151, 2, 1, "", "Instruction"], [152, 2, 1, "", "MultiplexedIQPulse"], [153, 2, 1, "", "ReadoutTrigger"], [154, 2, 1, "", "RealPulse"], [155, 2, 1, "", "ThresholdStateDiscrimination"], [156, 2, 1, "", "TimeTrace"], [157, 2, 1, "", "VirtualRZ"], [158, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[145, 3, 1, "", "delay_samples"], [145, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[147, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[148, 3, 1, "", "condition"], [148, 4, 1, "", "get_child_instructions"], [148, 3, 1, "", "outcomes"], [148, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[149, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[150, 4, 1, "", "get_waveforms"], [150, 3, 1, "", "modulation_frequency"], [150, 3, 1, "", "phase"], [150, 3, 1, "", "phase_increment"], [150, 3, 1, "", "scale_i"], [150, 3, 1, "", "scale_q"], [150, 4, 1, "", "validate"], [150, 3, 1, "", "wave_i"], [150, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[151, 4, 1, "", "copy"], [151, 3, 1, "", "duration"], [151, 4, 1, "", "get_child_instructions"], [151, 4, 1, "", "get_waveforms"], [151, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[152, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[153, 3, 1, "", "acquisitions"], [153, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[154, 4, 1, "", "get_waveforms"], [154, 3, 1, "", "scale"], [154, 4, 1, "", "validate"], [154, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[155, 3, 1, "", "feedback_signal_label"], [155, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[156, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[157, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[161, 2, 1, "", "Nothing"], [162, 2, 1, "", "Schedule"], [163, 2, 1, "", "Segment"], [164, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[162, 4, 1, "", "add_channels"], [162, 4, 1, "", "append"], [162, 4, 1, "", "channels"], [162, 4, 1, "", "cleanup"], [162, 4, 1, "", "copy"], [162, 5, 1, "", "duration"], [162, 4, 1, "", "duration_in_seconds"], [162, 4, 1, "", "extend"], [162, 4, 1, "", "front_pad"], [162, 4, 1, "", "front_pad_in_seconds"], [162, 4, 1, "", "has_content_in"], [162, 4, 1, "", "items"], [162, 4, 1, "", "pad_to_hard_box"], [162, 4, 1, "", "pad_to_hard_box_in_seconds"], [162, 4, 1, "", "pprint"], [162, 4, 1, "", "reverse"], [162, 4, 1, "", "reverse_hard_box"], [162, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[163, 3, 1, "", "_duration"], [163, 3, 1, "", "_instructions"], [163, 4, 1, "", "append"], [163, 4, 1, "", "copy"], [163, 5, 1, "", "duration"], [163, 4, 1, "", "extend"], [163, 4, 1, "", "pop"], [163, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[166, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[167, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[169, 2, 1, "", "Chirp"], [170, 2, 1, "", "ChirpImag"], [171, 2, 1, "", "Cosine"], [172, 2, 1, "", "CosineFall"], [173, 2, 1, "", "CosineRise"], [174, 2, 1, "", "CosineRiseFallDerivative"], [175, 2, 1, "", "ModulatedCosineRiseFall"], [176, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[169, 4, 1, "", "_sample"], [169, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[170, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[171, 4, 1, "", "_sample"], [171, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[172, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[173, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[174, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[175, 4, 1, "", "_sample"], [175, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[176, 4, 1, "", "_sample"], [176, 4, 1, "", "_sample_normalized_slepian"], [176, 4, 1, "", "_t_tau"], [176, 4, 1, "", "_theta_tau"], [176, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[178, 2, 1, "", "QuantumOp"], [179, 6, 1, "", "QuantumOpTable"], [180, 1, 1, "", "validate_locus_calibration"], [181, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[178, 3, 1, "", "arity"], [178, 4, 1, "", "copy"], [178, 5, 1, "", "default_implementation"], [178, 3, 1, "", "defaults_for_locus"], [178, 3, 1, "", "factorizable"], [178, 4, 1, "", "get_default_implementation_for_locus"], [178, 3, 1, "", "implementations"], [178, 3, 1, "", "name"], [178, 3, 1, "", "params"], [178, 4, 1, "", "set_default_implementation"], [178, 4, 1, "", "set_default_implementation_for_locus"], [178, 3, 1, "", "symmetric"], [178, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[183, 6, 1, "", "BLOCKING"], [184, 6, 1, "", "NONSOLID"], [185, 2, 1, "", "SegmentPointer"], [186, 1, 1, "", "extend_hard_boundary"], [187, 1, 1, "", "extend_hard_boundary_in_seconds"], [188, 1, 1, "", "extend_schedule"], [189, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[185, 3, 1, "", "TOL"], [185, 4, 1, "", "cut_tail"], [185, 4, 1, "", "fastforward"], [185, 3, 1, "", "frac"], [185, 4, 1, "", "get"], [185, 3, 1, "", "idx"], [185, 4, 1, "", "next"], [185, 5, 1, "", "remainder"], [185, 4, 1, "", "rewind"], [185, 3, 1, "", "source"], [185, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[191, 2, 1, "", "MultiplexedProbeTimeBox"], [192, 2, 1, "", "SchedulingAlgorithm"], [193, 2, 1, "", "SchedulingStrategy"], [194, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[191, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[192, 3, 1, "", "HARD_BOUNDARY"], [192, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[193, 3, 1, "", "ALAP"], [193, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[194, 3, 1, "", "atom"], [194, 4, 1, "", "atomic"], [194, 3, 1, "", "children"], [194, 4, 1, "", "composite"], [194, 3, 1, "", "label"], [194, 3, 1, "", "locus_components"], [194, 3, 1, "", "neighborhood_components"], [194, 4, 1, "", "print"], [194, 3, 1, "", "scheduling"], [194, 3, 1, "", "scheduling_algorithm"], [194, 4, 1, "", "set_alap"], [194, 4, 1, "", "set_asap"], [194, 4, 1, "", "validate"]], "iqm.pulse.utils": [[196, 1, 1, "", "map_waveform_param_types"], [197, 1, 1, "", "normalize_angle"], [198, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[200, 2, 1, "", "AWGScheduleValidationData"], [201, 7, 1, "", "AWGScheduleValidationError"], [202, 7, 1, "", "InvalidInstructionError"], [203, 7, 1, "", "PlaylistValidationError"], [204, 1, 1, "", "validate_awg_and_schedule_compatibility"], [205, 1, 1, "", "validate_channel"], [206, 1, 1, "", "validate_instruction_and_wf_length"], [207, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 209, 214], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 76, 77, 95, 96, 98, 99, 107, 112, 121, 122, 123, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 143, 164, 167, 179, 180, 181, 183, 184, 186, 187, 188, 189, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 211, 213], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 76, 77, 95, 96, 98, 99, 107, 112, 121, 122, 123, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 143, 164, 167, 179, 180, 181, 183, 184, 186, 187, 188, 189, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 211], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 215], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 209, 210], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 76, 77, 95, 96, 98, 99, 107, 112, 210], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 164], "get_implementation_class": 65, "measur": [66, 213], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "move": [71, 76, 77], "move_crf_crf": 72, "move_customwaveform": 73, "move_tgss_crf": 74, "movemark": 75, "apply_move_gate_phase_correct": 76, "validate_move_instruct": 77, "prx": [78, 95], "abc_constant_smooth": 79, "constant_prx_with_smooth_rise_fal": 80, "prx_customwaveform": 81, "prx_customwaveformssx": 82, "prx_dragcosinerisefal": 83, "prx_dragcosinerisefallsx": 84, "prx_draggaussian": 85, "prx_draggaussiansx": 86, "prx_fastdrag": 87, "prx_fastdragsx": 88, "prx_gateimplement": 89, "prx_hddrag": 90, "prx_hddragsx": 91, "prx_modulatedcustomwaveform": 92, "prx_modulateddragcosinerisefal": 93, "prx_singlepulse_gateimplement": 94, "get_unitary_prx": 95, "register_implement": 96, "reset": [97, 98, 99], "reset_feedback_kei": 98, "reset_measurement_kei": 99, "reset_condit": 100, "reset_wait": 101, "rz": [102, 107], "rz_acstarkshift": 103, "rz_acstarkshift_cosinerisefal": 104, "rz_acstarkshift_smoothconst": 105, "rz_virtual": 106, "get_unitary_rz": 107, "sx": 108, "sxgate": 109, "u": [110, 112], "ugat": 111, "get_unitary_u": 112, "playlist": [113, 121, 122, 123, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 143, 159, 164, 167, 209], "channel": [114, 121, 122, 123], "channelconfigur": 115, "channeldescript": 116, "channelproperti": 117, "iqchannelconfig": 118, "probechannelproperti": 119, "realchannelconfig": 120, "get_channel_properti": 121, "get_channel_properties_from_station_set": 122, "round_duration_to_granularity_sampl": 123, "fast_drag": [124, 129, 130, 131, 132, 133], "fastdrag": 125, "fastdragi": 126, "fastdragq": 127, "suppressedpuls": 128, "compute_matrix_of_summed_fourier_transform_inner_product": 129, "evaluate_fast_drag_i_envelop": 130, "evaluate_fast_drag_q_envelop": 131, "fourier_transform_of_cos_basis_functions_as_tensor": 132, "solve_fast_coefficients_for_given_weights_and_rang": 133, "hd_drag": [134, 135, 139, 140, 141, 142, 143], "cosine_coefficients_dict": 135, "hddrag": 136, "hddragi": 137, "hddragq": 138, "evaluate_hd_drag_i_envelop": 139, "evaluate_hd_drag_q_envelop": 140, "evaluate_nth_derivative_of_basis_envelop": 141, "solve_cosine_coefs_for_hd_drag": 142, "solve_hd_drag_coefficients_from_suppressed_frequ": 143, "instruct": [144, 151, 209, 210], "acquisitionmethod": 145, "block": [146, 183], "complexintegr": 147, "conditionalinstruct": 148, "fluxpuls": 149, "iqpuls": 150, "multiplexediqpuls": 152, "readouttrigg": [153, 213], "realpuls": 154, "thresholdstatediscrimin": 155, "timetrac": 156, "virtualrz": 157, "wait": 158, "schedul": [160, 162, 164, 182, 183, 184, 186, 187, 188, 189, 209, 215], "noth": 161, "segment": 163, "visualis": [165, 167], "base": [166, 167, 210], "inspect_playlist": 167, "waveform": [168, 210], "chirp": 169, "chirpimag": 170, "cosin": 171, "cosinefal": 172, "cosineris": 173, "cosinerisefallderiv": 174, "modulatedcosinerisefal": 175, "slepian": 176, "quantum_op": [177, 179, 180, 181], "quantumop": [178, 209, 210], "quantumopt": 179, "validate_locus_calibr": 180, "validate_op_calibr": 181, "nonsolid": 184, "segmentpoint": 185, "extend_hard_boundari": 186, "extend_hard_boundary_in_second": 187, "extend_schedul": 188, "extend_schedule_new": 189, "timebox": [190, 194, 209, 215], "multiplexedprobetimebox": 191, "schedulingalgorithm": 192, "schedulingstrategi": 193, "util": [195, 196, 197, 198], "map_waveform_param_typ": 196, "normalize_angl": 197, "phase_transform": 198, "valid": [199, 201, 202, 203, 204, 205, 206, 207], "awgschedulevalidationdata": 200, "awgschedulevalidationerror": 201, "invalidinstructionerror": 202, "playlistvalidationerror": 203, "validate_awg_and_schedule_compat": 204, "validate_channel": 205, "validate_instruction_and_wf_length": 206, "validate_playlist_compat": 207, "changelog": 208, "version": 208, "9": 208, "4": 208, "2025": 208, "04": 208, "22": 208, "featur": [208, 215], "3": 208, "17": 208, "bug": 208, "fix": 208, "2": 208, "11": 208, "1": 208, "10": 208, "0": 208, "09": 208, "break": 208, "chang": 208, "8": 208, "13": 208, "07": 208, "12": 208, "03": 208, "02": 208, "28": 208, "7": 208, "27": 208, "6": 208, "26": 208, "5": 208, "21": 208, "19": 208, "24": 208, "20": 208, "23": 208, "18": 208, "16": 208, "15": 208, "01": 208, "14": 208, "08": 208, "2024": 208, "30": 208, "05": 208, "29": 208, "31": 208, "25": 208, "06": 208, "concept": 209, "class": [209, 210], "quick": 209, "custom": 210, "implement": 210, "calibr": 210, "data": 210, "more": 210, "regist": 210, "content": 211, "indic": 211, "tabl": 211, "licens": 212, "time": 213, "fast": 213, "feedback": 213, "us": 215, "creat": 215, "compos": 215, "resolv": 215, "miscellan": 215, "common": 215, "pitfal": 215}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "builder": [[4, "module-iqm.pulse.builder"]], "CircuitOperation": [[5, "circuitoperation"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[17, "compositecache"]], "CompositeGate": [[18, "compositegate"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "GateImplementation": [[20, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[31, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[33, "module-iqm.pulse.gates"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "Barrier": [[35, "barrier"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[41, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[44, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[55, "delay"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[58, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[60, "xygate"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[67, "measure-constant"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "move": [[71, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[72, "move-crf-crf"]], "MOVE_CustomWaveforms": [[73, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[74, "move-tgss-crf"]], "MoveMarker": [[75, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[76, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[77, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[78, "module-iqm.pulse.gates.prx"]], "ABC_Constant_smooth": [[79, "abc-constant-smooth"]], "Constant_PRX_with_smooth_rise_fall": [[80, "constant-prx-with-smooth-rise-fall"]], "PRX_CustomWaveforms": [[81, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[82, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[83, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[84, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[85, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[86, "prx-draggaussiansx"]], "PRX_FastDrag": [[87, "prx-fastdrag"]], "PRX_FastDragSX": [[88, "prx-fastdragsx"]], "PRX_GateImplementation": [[89, "prx-gateimplementation"]], "PRX_HdDrag": [[90, "prx-hddrag"]], "PRX_HdDragSX": [[91, "prx-hddragsx"]], "PRX_ModulatedCustomWaveForms": [[92, "prx-modulatedcustomwaveforms"]], "PRX_ModulatedDRAGCosineRiseFall": [[93, "prx-modulateddragcosinerisefall"]], "PRX_SinglePulse_GateImplementation": [[94, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[95, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[96, "iqm-pulse-gates-register-implementation"]], "reset": [[97, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[98, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[99, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[100, "reset-conditional"]], "Reset_Wait": [[101, "reset-wait"]], "rz": [[102, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[103, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[104, "rz-acstarkshift-cosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[105, "rz-acstarkshift-smoothconstant"]], "RZ_Virtual": [[106, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[107, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[108, "module-iqm.pulse.gates.sx"]], "SXGate": [[109, "sxgate"]], "u": [[110, "module-iqm.pulse.gates.u"]], "UGate": [[111, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[112, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[113, "module-iqm.pulse.playlist"], [159, "module-iqm.pulse.playlist.playlist"]], "channel": [[114, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[115, "channelconfiguration"]], "ChannelDescription": [[116, "channeldescription"]], "ChannelProperties": [[117, "channelproperties"]], "IQChannelConfig": [[118, "iqchannelconfig"]], "ProbeChannelProperties": [[119, "probechannelproperties"]], "RealChannelConfig": [[120, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[121, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[122, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[123, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "fast_drag": [[124, "module-iqm.pulse.playlist.fast_drag"]], "FastDrag": [[125, "fastdrag"]], "FastDragI": [[126, "fastdragi"]], "FastDragQ": [[127, "fastdragq"]], "SuppressedPulse": [[128, "suppressedpulse"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[129, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[130, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[131, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[132, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[133, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "hd_drag": [[134, "module-iqm.pulse.playlist.hd_drag"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[135, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "HdDrag": [[136, "hddrag"]], "HdDragI": [[137, "hddragi"]], "HdDragQ": [[138, "hddragq"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[139, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[140, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[141, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[142, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[143, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "instructions": [[144, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[145, "acquisitionmethod"]], "Block": [[146, "block"]], "ComplexIntegration": [[147, "complexintegration"]], "ConditionalInstruction": [[148, "conditionalinstruction"]], "FluxPulse": [[149, "fluxpulse"]], "IQPulse": [[150, "iqpulse"]], "Instruction": [[151, "instruction"]], "MultiplexedIQPulse": [[152, "multiplexediqpulse"]], "ReadoutTrigger": [[153, "readouttrigger"]], "RealPulse": [[154, "realpulse"]], "ThresholdStateDiscrimination": [[155, "thresholdstatediscrimination"]], "TimeTrace": [[156, "timetrace"]], "VirtualRZ": [[157, "virtualrz"]], "Wait": [[158, "wait"]], "schedule": [[160, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[161, "nothing"]], "Schedule": [[162, "schedule"]], "Segment": [[163, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[164, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[165, "module-iqm.pulse.playlist.visualisation"]], "base": [[166, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[167, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[168, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[169, "chirp"]], "ChirpImag": [[170, "chirpimag"]], "Cosine": [[171, "cosine"]], "CosineFall": [[172, "cosinefall"]], "CosineRise": [[173, "cosinerise"]], "CosineRiseFallDerivative": [[174, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[175, "modulatedcosinerisefall"]], "Slepian": [[176, "slepian"]], "quantum_ops": [[177, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[178, "quantumop"], [210, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[179, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[180, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[181, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[182, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[183, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[184, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[185, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[186, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[187, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[188, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[189, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[190, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[191, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[192, "schedulingalgorithm"]], "SchedulingStrategy": [[193, "schedulingstrategy"]], "TimeBox": [[194, "timebox"]], "utils": [[195, "module-iqm.pulse.utils"]], "iqm.pulse.utils.map_waveform_param_types": [[196, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.normalize_angle": [[197, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[198, "iqm-pulse-utils-phase-transformation"]], "validation": [[199, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[200, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[201, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[202, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[203, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[204, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[205, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[206, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[207, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[208, "changelog"]], "Version 9.4 (2025-04-22)": [[208, "version-9-4-2025-04-22"]], "Features": [[208, "features"], [208, "id2"], [208, "id5"], [208, "id10"], [208, "id11"], [208, "id12"], [208, "id13"], [208, "id14"], [208, "id15"], [208, "id19"], [208, "id21"], [208, "id23"], [208, "id24"], [208, "id27"], [208, "id28"], [208, "id31"], [208, "id33"], [208, "id36"], [208, "id37"], [208, "id40"], [208, "id41"], [208, "id42"], [208, "id45"], [208, "id46"], [208, "id49"], [208, "id52"], [208, "id55"], [208, "id58"], [208, "id61"], [208, "id63"], [208, "id66"], [208, "id69"], [208, "id73"], [208, "id75"], [208, "id76"], [208, "id77"], [208, "id83"], [208, "id89"], [208, "id94"], [208, "id96"], [208, "id97"], [208, "id99"], [208, "id102"], [208, "id105"], [208, "id107"], [208, "id110"], [208, "id111"], [208, "id112"], [208, "id113"], [208, "id116"], [208, "id117"], [208, "id119"], [208, "id122"], [208, "id123"], [208, "id124"], [208, "id125"], [208, "id126"], [208, "id127"], [208, "id128"], [208, "id129"], [208, "id132"], [208, "id134"], [208, "id137"], [208, "id139"], [208, "id140"], [208, "id143"]], "Version 9.3 (2025-04-17)": [[208, "version-9-3-2025-04-17"]], "Bug fixes": [[208, "bug-fixes"], [208, "id1"], [208, "id18"], [208, "id22"], [208, "id38"], [208, "id74"], [208, "id80"], [208, "id81"], [208, "id82"], [208, "id84"], [208, "id92"], [208, "id93"], [208, "id98"], [208, "id100"], [208, "id101"], [208, "id103"], [208, "id133"]], "Version 9.2 (2025-04-11)": [[208, "version-9-2-2025-04-11"]], "Version 9.1 (2025-04-10)": [[208, "version-9-1-2025-04-10"]], "Version 9.0 (2025-04-09)": [[208, "version-9-0-2025-04-09"]], "Breaking changes": [[208, "breaking-changes"], [208, "id72"], [208, "id95"], [208, "id104"], [208, "id106"], [208, "id118"], [208, "id138"]], "Version 8.13 (2025-04-07)": [[208, "version-8-13-2025-04-07"]], "Version 8.12 (2025-04-03)": [[208, "version-8-12-2025-04-03"]], "Version 8.11 (2025-04-02)": [[208, "version-8-11-2025-04-02"]], "Version 8.10 (2025-04-02)": [[208, "version-8-10-2025-04-02"]], "Version 8.9 (2025-03-28)": [[208, "version-8-9-2025-03-28"]], "Version 8.8 (2025-03-28)": [[208, "version-8-8-2025-03-28"]], "Version 8.7 (2025-03-27)": [[208, "version-8-7-2025-03-27"]], "Version 8.6 (2025-03-26)": [[208, "version-8-6-2025-03-26"]], "Version 8.5 (2025-03-26)": [[208, "version-8-5-2025-03-26"]], "Bug fix": [[208, "bug-fix"], [208, "id20"], [208, "id39"], [208, "id62"]], "Version 8.4 (2025-03-21)": [[208, "version-8-4-2025-03-21"]], "Version 8.3 (2025-03-19)": [[208, "version-8-3-2025-03-19"]], "Version 8.2 (2025-03-13)": [[208, "version-8-2-2025-03-13"]], "Version 8.1 (2025-02-28)": [[208, "version-8-1-2025-02-28"]], "Version 8.0 (2025-02-27)": [[208, "version-8-0-2025-02-27"]], "Version 7.24 (2025-02-20)": [[208, "version-7-24-2025-02-20"]], "Version 7.23 (2025-02-19)": [[208, "version-7-23-2025-02-19"]], "Version 7.22 (2025-02-10)": [[208, "version-7-22-2025-02-10"]], "Version 7.21 (2025-02-07)": [[208, "version-7-21-2025-02-07"]], "Version 7.20 (2025-02-04)": [[208, "version-7-20-2025-02-04"]], "Version 7.19 (2025-02-04)": [[208, "version-7-19-2025-02-04"]], "Bug Fixes": [[208, "id32"]], "Version 7.18 (2025-02-04)": [[208, "version-7-18-2025-02-04"]], "Version 7.17 (2025-02-03)": [[208, "version-7-17-2025-02-03"]], "Version 7.16 (2025-02-03)": [[208, "version-7-16-2025-02-03"]], "Version 7.15 (2025-01-28)": [[208, "version-7-15-2025-01-28"]], "Version 7.14 (2025-01-28)": [[208, "version-7-14-2025-01-28"]], "Version 7.13 (2025-01-28)": [[208, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[208, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[208, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[208, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[208, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[208, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[208, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[208, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[208, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[208, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[208, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[208, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[208, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[208, "version-7-0-2024-11-29"]], "Version 6.14 (2024-11-27)": [[208, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[208, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[208, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[208, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[208, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[208, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[208, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[208, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[208, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[208, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[208, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[208, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[208, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[208, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[208, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[208, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[208, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[208, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[208, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[208, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[208, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[208, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[208, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[208, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[208, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[208, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[208, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[208, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[208, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[208, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[208, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[208, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[208, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[208, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[208, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[208, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[208, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[208, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[208, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[208, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[208, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[208, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[208, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[208, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[208, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[208, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[208, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[208, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[208, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[208, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[208, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[208, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[208, "version-1-0-2024-07-01"]], "Concepts and Classes": [[209, "concepts-and-classes"]], "Quick reference": [[209, "quick-reference"]], "Instructions": [[209, "instructions"]], "Schedules": [[209, "schedules"]], "TimeBoxes": [[209, "timeboxes"]], "QuantumOps": [[209, "quantumops"]], "GateImplementations": [[209, "gateimplementations"]], "Playlists": [[209, "playlists"]], "Custom gate implementations": [[210, "custom-gate-implementations"], [210, "id1"]], "GateImplementation class": [[210, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[210, "instructions-waveforms-and-calibration-data"]], "More base classes": [[210, "more-base-classes"]], "Registering gates and implementations": [[210, "registering-gates-and-implementations"]], "IQM Pulse": [[211, "iqm-pulse"]], "Contents": [[211, "contents"]], "Indices and tables": [[211, "indices-and-tables"]], "License": [[212, "license"]], "Pulse timing": [[213, "pulse-timing"]], "Measure and ReadoutTrigger": [[213, "measure-and-readouttrigger"]], "Fast feedback timing": [[213, "fast-feedback-timing"]], "References": [[214, "references"]], "Using ScheduleBuilder": [[215, "using-schedulebuilder"]], "Creating TimeBoxes": [[215, "creating-timeboxes"]], "Composing TimeBoxes": [[215, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[215, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[215, "miscellaneous-features"]], "Common pitfalls": [[215, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [71, "module-iqm.pulse.gates.move"], [78, "module-iqm.pulse.gates.prx"], [97, "module-iqm.pulse.gates.reset"], [102, "module-iqm.pulse.gates.rz"], [108, "module-iqm.pulse.gates.sx"], [110, "module-iqm.pulse.gates.u"], [113, "module-iqm.pulse.playlist"], [114, "module-iqm.pulse.playlist.channel"], [124, "module-iqm.pulse.playlist.fast_drag"], [134, "module-iqm.pulse.playlist.hd_drag"], [144, "module-iqm.pulse.playlist.instructions"], [159, "module-iqm.pulse.playlist.playlist"], [160, "module-iqm.pulse.playlist.schedule"], [165, "module-iqm.pulse.playlist.visualisation"], [166, "module-iqm.pulse.playlist.visualisation.base"], [168, "module-iqm.pulse.playlist.waveforms"], [177, "module-iqm.pulse.quantum_ops"], [182, "module-iqm.pulse.scheduler"], [190, "module-iqm.pulse.timebox"], [195, "module-iqm.pulse.utils"], [199, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[71, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[75, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[75, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[78, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[87, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[88, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[89, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[90, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[91, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[92, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[92, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[92, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[93, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[94, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[94, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[96, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[97, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[98, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[99, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[100, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[100, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[100, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[100, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[101, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[101, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[101, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[101, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[101, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[101, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[102, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[103, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[104, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[104, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[104, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[104, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[106, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[106, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[106, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[106, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[106, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[107, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[108, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[109, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[109, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[109, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[110, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[111, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[111, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[111, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[112, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[113, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[114, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[115, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[116, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[116, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[117, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[117, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[118, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[118, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[119, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[119, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[119, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[119, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[120, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[120, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[121, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[122, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[123, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[124, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[125, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[125, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[126, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[126, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[127, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[127, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[128, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[128, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[129, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[130, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[131, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[132, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[133, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[134, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[135, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[136, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[136, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[137, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[137, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[138, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[138, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[139, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[140, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[141, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[142, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[143, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[144, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[145, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[145, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[145, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[146, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[147, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[147, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[148, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[148, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[148, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[148, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[148, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[149, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[149, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[150, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[150, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[150, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[150, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[151, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[151, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[151, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[151, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[151, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[151, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[152, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[152, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[153, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[153, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[153, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[154, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[154, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[154, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[154, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[154, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[155, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[155, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[155, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[156, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[156, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[157, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[157, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[158, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[159, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[160, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[161, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[162, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[162, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[162, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[163, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[163, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[163, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[163, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[163, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[163, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[163, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[163, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[163, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[164, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[165, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[166, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[167, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[168, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[169, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[169, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[169, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[170, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[170, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[171, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[171, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[171, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[172, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[172, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[173, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[173, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[174, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[174, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[175, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[175, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[175, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[176, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[176, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[176, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[176, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[176, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[176, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[177, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[178, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[178, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[178, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[178, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[178, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[178, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[178, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[179, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[180, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[181, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[182, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[183, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[184, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[185, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[185, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[185, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[185, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[185, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[185, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[185, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[185, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[185, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[185, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[185, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[185, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[186, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[187, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[188, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[189, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[190, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[191, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[191, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[192, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[192, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[192, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[193, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[193, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[193, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[194, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[194, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[194, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[194, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[194, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[194, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[194, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[194, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[195, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[196, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[197, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[198, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[199, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[200, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[201, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[202, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[203, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[204, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[205, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[206, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[207, "iqm.pulse.validation.validate_playlist_compatibility"]]}})