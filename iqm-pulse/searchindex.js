Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration", "api/iqm.pulse.gates.measure.Probe_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.PrxGateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_PRX_Composite", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.rst", "api/iqm.pulse.gates.measure.Probe_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_Constant.rst", "api/iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.PrxGateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_PRX_Composite.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "ProbePulse_CustomWaveforms_noIntegration", "Probe_Constant", "Shelved_Measure_Constant", "Shelved_Measure_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_SLEPIAN_CRF", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "PrxGateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_PRX_Composite", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 52, 53, 55, 58, 69, 71, 74, 119, 120, 122, 123, 128, 129, 134, 150, 152, 157, 166, 167, 168, 194, 195, 200, 206, 210, 213, 214, 215, 216, 218, 219, 220, 221], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 182, 184, 186, 204, 214, 215, 217, 219, 220, 221], "instruct": [1, 4, 6, 16, 20, 31, 32, 35, 49, 53, 55, 69, 70, 71, 74, 75, 77, 80, 81, 82, 84, 85, 98, 99, 106, 110, 112, 119, 122, 123, 125, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 184, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 204, 205, 208, 210, 212, 213, 214, 217, 219, 221], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 71, 74, 80, 81, 82, 84, 85, 87, 98, 99, 106, 108, 110, 112, 119, 123, 152, 164, 165, 167, 169, 184, 191, 196, 197, 198, 199, 200, 205, 207, 214, 216, 217, 219], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 71, 77, 82, 99, 101, 102, 105, 106, 108, 112, 119, 157, 183, 184, 185, 187, 204, 214, 215, 216, 217, 220, 221], "comput": [1, 5, 6, 16, 31, 69, 77, 105, 116, 119, 123, 134, 135, 138, 139, 141, 142, 143, 144, 155, 157, 168, 169, 184, 188, 192, 193, 200, 204, 214, 215, 216, 217, 218, 221], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 75, 83, 102, 107, 114, 116, 119, 120, 130, 134, 140, 150, 165, 166, 171, 172, 174, 181, 183, 188, 196, 201, 205, 214, 216], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 73, 75, 76, 78, 79, 83, 88, 89, 90, 91, 92, 93, 94, 95, 97, 102, 107, 109, 114, 116, 119, 120, 130, 140, 150, 165, 166, 168, 171, 172, 174, 183, 188, 196, 200, 201, 205, 214], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 196, 197, 198, 199, 200, 201, 205, 206, 214, 215, 216, 218, 219, 221], "subpackag": [1, 33, 119, 171], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 108, 109, 110, 111, 112, 115, 117, 119, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 140, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 197, 198, 199, 200, 206, 214, 215, 216, 217], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 111, 112, 115, 117, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 139, 140, 142, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 197, 198, 199, 200, 206, 214, 218, 219], "util": [2, 6, 18, 20, 214, 216], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 75, 77, 83, 98, 105, 106, 107, 108, 116, 120, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 172, 182, 183, 184, 188, 200, 201, 205, 214, 216], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 108, 112, 142, 154, 214, 216], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 71, 74, 77, 98, 105, 106, 111, 115, 117, 167, 177, 184, 192, 193, 198, 200, 210, 213, 214, 215, 216, 218, 219, 220, 221], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 196, 197, 198, 199, 200, 201, 205, 206, 214, 215, 216, 220, 221], "A": [3, 6, 11, 14, 37, 69, 71, 73, 74, 135, 152, 175, 184, 188, 194, 195, 197, 200, 202, 214, 215, 216, 217, 218, 219, 220, 221], "b": [3, 14, 55, 69, 71, 74, 140, 188, 194, 195, 200, 218], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 109, 110, 123, 125, 134, 168, 184, 214, 221], "merg": [3, 6, 18, 192], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 74, 75, 77, 87, 135, 139, 184, 192, 200, 214, 215, 216, 219, 221], "dictionari": [3, 58, 141, 216], "recurs": [3, 6, 200, 215, 221], "leav": 3, "origin": [3, 11, 15, 20, 168, 169, 214, 218], "unchang": [3, 168], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 112, 113, 115, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 191, 192, 193, 194, 195, 197, 200, 202, 203, 204, 206, 210, 211, 212, 213, 214, 215, 216, 221], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 71, 77, 86, 87, 96, 101, 106, 112, 127, 131, 142, 168, 175, 177, 181, 182, 184, 185, 192, 193, 194, 195, 197, 200, 213, 214, 216], "anoth": [3, 6, 35, 49, 77, 80, 118, 184, 194, 195, 214, 216], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 109, 110, 123, 125, 129, 131, 132, 133, 134, 142, 143, 144, 168, 184, 191, 192, 193, 214], "whether": [3, 6, 13, 20, 82, 101, 123, 129, 134, 192, 193, 216, 218, 221], "also": [3, 6, 11, 17, 18, 19, 20, 31, 35, 48, 49, 55, 77, 81, 88, 89, 97, 98, 105, 106, 108, 111, 115, 117, 122, 168, 184, 188, 192, 193, 195, 200, 204, 214, 216, 218, 219], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 109, 110, 157, 168, 169, 184, 186, 187, 191, 192, 193, 194, 195, 197, 198, 199, 200, 211, 213, 214, 216], "empti": [3, 6, 11, 18, 63, 69, 70, 71, 74, 161, 168, 184, 214, 216], "size": [3, 13, 216], "valu": [3, 6, 11, 13, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 71, 73, 74, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 109, 134, 135, 142, 143, 144, 152, 156, 158, 160, 161, 164, 175, 180, 187, 198, 199, 214, 215, 216, 221], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 77, 81, 87, 88, 89, 97, 98, 105, 111, 115, 117, 123, 128, 131, 134, 135, 138, 139, 141, 142, 151, 155, 158, 161, 168, 169, 173, 174, 175, 177, 180, 181, 182, 191, 193, 197, 200, 210, 214, 215, 216, 218, 219, 221], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 71, 74, 77, 81, 82, 84, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 105, 106, 108, 112, 113, 115, 117, 118, 122, 123, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 160, 168, 169, 173, 175, 177, 178, 179, 180, 181, 182, 184, 186, 187, 191, 192, 193, 194, 195, 197, 200, 202, 203, 204, 211, 213, 214, 216], "copi": [3, 6, 11, 81, 157, 168, 169, 184, 218], "content": [3, 6, 7, 11, 123, 157, 168, 169, 184, 191, 199, 200, 214, 215, 216, 218, 221], "take": [3, 7, 11, 20, 37, 49, 96, 168, 181, 182, 184, 214, 216, 219, 221], "preced": [3, 34, 35, 55, 112, 204], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 112, 113, 115, 117, 118, 122, 123, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 156, 157, 160, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 206, 211, 213, 214, 216, 218], "tool": [4, 188, 191, 217], "build": [4, 6, 7, 18, 20, 69, 70, 71, 81, 86, 87, 88, 89, 197, 200, 216], "class": [4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 196, 197, 198, 199, 200, 205, 206, 214, 217, 218], "inherit": [4, 10, 16, 18, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 75, 77, 83, 86, 87, 88, 89, 96, 97, 99, 102, 105, 106, 107, 108, 112, 114, 116, 120, 130, 140, 150, 166, 174, 183, 188, 196, 205, 214, 216], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 82, 214], "schedulebuild": [4, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 112, 115, 117, 200, 214, 215, 216, 217], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 111, 112, 115, 117, 214, 215, 216, 219, 221], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 108, 109, 110, 111, 112, 115, 117, 122, 128, 155, 168, 184, 185, 186, 193, 197, 198, 199, 200, 214, 215, 216, 218, 221], "locu": [5, 6, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 111, 112, 115, 117, 184, 186, 197, 200, 214, 215, 216, 219, 221], "arg": [5, 6, 11, 20, 31, 35, 48, 49, 77, 105, 106, 108, 216], "factori": [5, 6, 123, 125, 155, 184, 197, 200], "implement": [5, 6, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 108, 109, 110, 111, 112, 115, 117, 131, 134, 168, 184, 186, 187, 204, 214, 215, 217, 219, 220, 221], "object": [5, 6, 11, 17, 32, 121, 122, 123, 139, 151, 157, 168, 169, 184, 191, 200, 206, 214, 216, 218], "specif": [5, 6, 18, 20, 31, 33, 34, 35, 48, 49, 53, 77, 98, 105, 106, 108, 112, 122, 134, 168, 182, 184, 206, 210, 214, 215, 216, 218, 221], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 74, 75, 77, 99, 101, 102, 104, 105, 106, 108, 112, 183, 184, 185, 186, 187, 200, 206, 214, 215, 216, 217, 219, 221], "appli": [5, 6, 37, 49, 55, 74, 75, 77, 80, 81, 98, 106, 157, 184, 216, 218, 219, 221], "part": [5, 6, 20, 84, 161, 176, 178, 179, 180, 181, 184, 191, 200, 214, 215, 216, 218, 219, 221], "qpu": [5, 6, 20, 21, 35, 63, 164, 184, 192, 196, 200, 214, 215, 216, 221], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 77, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 107, 108, 112, 114, 116, 131, 142, 149, 175, 177, 181, 182, 184, 188, 192, 193, 194, 195, 200, 214, 216, 220], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 108, 112, 131, 135, 142, 143, 144, 145, 146, 147, 148, 149, 175, 177, 181, 182, 192, 193, 200, 214, 216, 220], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 71, 74, 82, 106, 112, 184, 214, 215, 216, 217, 219, 221], "attribut": [5, 6, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 108, 109, 110, 111, 112, 115, 117, 122, 123, 124, 125, 126, 131, 132, 133, 134, 140, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 197, 198, 199, 200, 206, 214, 216, 218, 219], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 111, 112, 115, 117, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 197, 198, 199, 200, 206, 214, 216, 221], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 108, 109, 110, 111, 112, 115, 117, 122, 123, 127, 131, 142, 151, 153, 154, 155, 161, 162, 168, 173, 175, 177, 181, 182, 184, 185, 186, 192, 193, 194, 195, 197, 200, 213, 216], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 63, 69, 70, 71, 106, 123, 125, 127, 139, 149, 154, 155, 156, 157, 158, 159, 160, 168, 184, 186, 197, 200, 202, 204, 206, 216], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 71, 74, 77, 105, 106, 108, 134, 158, 167, 168, 182, 184, 192, 193, 197, 200, 214, 215, 216, 218, 221], "inform": [5, 6, 32, 82, 184, 214, 215, 216, 218, 219, 221], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 71, 74, 76, 77, 78, 79, 85, 105, 106, 109, 110, 123, 128, 131, 132, 133, 142, 143, 144, 158, 164, 182, 184, 192, 193, 197, 200, 214, 215, 216, 221], "qubit": [5, 6, 11, 12, 13, 14, 15, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 98, 99, 102, 106, 107, 108, 112, 114, 116, 182, 184, 192, 193, 214, 215, 216, 219, 220, 221], "reson": [5, 75, 76, 77, 78, 79, 80, 81, 108, 117, 123, 192, 193, 204, 214, 215, 220, 221], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 77, 105, 106, 112, 184, 192, 193, 214, 215, 216, 218, 219, 221], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 71, 87, 106, 108, 112, 134, 184, 214, 216, 221], "valid": [5, 6, 9, 75, 82, 154, 156, 157, 160, 168, 186, 187, 200, 206, 214, 221], "op_tabl": [5, 6, 9, 11, 18, 38, 39, 105, 111, 115, 117, 216], "against": [5, 6, 161, 187, 218, 221], "tabl": [5, 7, 9, 11, 12, 13, 122, 185, 214], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 77, 118, 130, 140, 174, 184, 185, 214, 215, 216, 218], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 108, 109, 110, 112, 115, 117, 183, 185, 186, 214, 217, 221], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 71, 74, 82, 106, 122, 135, 138, 139, 141, 147, 154, 156, 157, 160, 168, 184, 197, 200, 210, 214, 215, 216, 218, 221], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 101, 112, 123, 134, 139, 158, 168, 192, 214, 215, 216, 219, 221], "rais": [5, 6, 9, 61, 82, 101, 123, 154, 156, 157, 160, 175, 184, 186, 187, 202, 207, 208, 209, 214, 215], "valueerror": [5, 6, 9, 82, 101, 123, 154, 156, 157, 160, 184, 186, 187, 202], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 112, 114, 116, 123, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 156, 157, 158, 160, 161, 168, 169, 170, 175, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 191, 192, 193, 194, 195, 200, 204, 210, 213, 214, 215, 216, 217, 218, 219, 221], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 109, 110, 111, 112, 115, 117, 131, 142, 175, 177, 181, 182, 184, 186, 187, 214, 215, 221], "chip_topologi": [6, 20, 63, 106, 127, 128, 216, 221], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 105, 106, 108, 112, 121, 122, 123, 124, 125, 126, 152, 155, 156, 157, 163, 167, 168, 169, 188, 192, 193, 194, 195, 197, 198, 200, 210, 211, 213, 214, 215, 216, 219, 221], "component_channel": 6, "out": [6, 11, 86, 88, 214, 215, 216, 218, 219], "individu": [6, 54, 184, 215, 218], "encapsul": [6, 20, 33, 82, 221], "known": [6, 7, 61, 101, 168, 182, 184, 185, 187, 216], "op": [6, 7, 12, 13, 16, 18, 20, 101, 184, 185, 186, 187], "them": [6, 11, 12, 70, 74, 96, 106, 112, 184, 200, 214, 216, 217, 221], "topologi": [6, 128, 221], "properti": [6, 11, 20, 75, 98, 120, 122, 123, 127, 128, 168, 169, 184, 191, 193, 194, 195, 214, 221], "quantumopt": [6, 11, 12, 13, 187, 214, 216], "opcalibrationdatatre": [6, 187], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 109, 110, 112, 122, 131, 142, 151, 175, 177, 181, 182, 184, 186, 187, 206, 210, 213, 214, 215], "tree": [6, 8, 20, 128, 186, 187], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 71, 99, 105, 106, 112, 127, 128, 216], "chip": [6, 11, 128, 214], "deriv": [6, 98, 131, 134, 140, 141, 142, 143, 144, 145, 146, 147, 149, 180, 182, 214, 216, 218], "chad": [6, 184], "channelproperti": [6, 20, 120, 125, 127, 129, 168, 193, 194, 195, 211, 213], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 69, 70, 71, 99, 101, 105, 112, 122, 128, 131, 139, 141, 142, 154, 168, 175, 177, 181, 182, 184, 185, 193, 200, 202, 214, 216], "configur": [6, 7, 121, 124, 126, 210, 213, 218], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 71, 74, 80, 81, 84, 96, 98, 105, 108, 112, 117, 123, 149, 155, 163, 204, 214, 215, 216, 219], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 76, 77, 78, 79, 155, 184, 214, 216], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 71, 72, 73, 74, 105, 151, 159, 168, 197, 214, 219], "respons": [6, 123, 126, 216, 218, 219], "_cach": 6, "gateimplement": [6, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 75, 77, 83, 99, 101, 102, 105, 106, 107, 108, 112, 114, 116, 184, 186, 200, 214, 217, 219, 221], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 71, 77, 105, 106, 108, 139, 168, 200, 214, 216], "The": [6, 11, 12, 17, 18, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 74, 75, 77, 80, 83, 84, 87, 96, 98, 101, 102, 103, 105, 106, 107, 108, 111, 112, 114, 115, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 156, 161, 163, 168, 173, 175, 177, 178, 179, 180, 181, 182, 184, 188, 192, 193, 194, 195, 200, 210, 212, 213, 214, 215, 216, 218, 219, 221], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 71, 74, 75, 77, 106, 108, 112, 122, 131, 142, 157, 158, 161, 168, 175, 177, 180, 181, 182, 184, 192, 193, 194, 195, 200, 210, 213, 214, 215, 216, 218, 219, 221], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 71, 74, 76, 77, 78, 79, 80, 84, 85, 98, 109, 110, 129, 132, 133, 136, 137, 139, 143, 144, 145, 146, 147, 156, 161, 175, 177, 178, 179, 180, 181, 182, 193, 200, 210, 213, 214, 215, 216, 218, 219, 221], "structur": [6, 214], "composite_cach": 6, "compositeg": [6, 16, 17, 36, 37, 38, 39, 102, 105, 107, 111, 114, 115, 116, 117, 214, 216], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 71, 74, 77, 84, 87, 98, 99, 105, 106, 108, 112, 115, 117, 192, 197, 198, 199, 214, 216, 217, 219], "flush": [6, 17, 214], "whenev": [6, 17, 69, 71, 74, 214], "inject": [6, 214], "_channel_to_compon": 6, "self": [6, 11, 18, 19, 20, 38, 39, 48, 49, 69, 70, 71, 74, 88, 89, 97, 98, 105, 106, 111, 115, 117, 168, 184, 191, 200, 215, 216], "invert": 6, "algorithm": [6, 188, 192, 194, 198, 200, 214, 216, 221], "perform": [6, 49, 153, 161, 168, 218], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 52, 55, 58, 60, 63, 69, 70, 71, 74, 75, 77, 80, 84, 86, 87, 88, 89, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 112, 122, 123, 131, 134, 139, 141, 142, 156, 158, 159, 161, 164, 168, 174, 175, 177, 178, 179, 180, 181, 182, 184, 188, 191, 192, 194, 195, 198, 200, 214, 215, 216, 218, 219, 221], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 84, 86, 87, 98, 103, 104, 105, 106, 108, 111, 112, 115, 116, 117, 122, 123, 131, 134, 135, 139, 141, 142, 149, 152, 161, 163, 164, 167, 168, 173, 175, 177, 179, 181, 182, 184, 192, 193, 198, 200, 204, 210, 213, 214, 215, 216, 217, 218, 219, 220], "determin": [6, 32, 192, 200, 215, 218, 221], "block": [6, 35, 37, 49, 69, 70, 71, 74, 98, 105, 106, 123, 150, 164, 167, 190, 192, 193, 197, 200, 214, 215, 219, 221], "associ": [6, 11, 69, 71, 74, 106, 122, 123, 159, 161, 216, 218, 219], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 74, 75, 76, 77, 78, 79, 85, 98, 105, 109, 110, 123, 168, 178, 179, 182, 184, 191, 200, 214, 215, 218, 219, 220, 221], "ar": [6, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 71, 74, 76, 77, 78, 79, 83, 85, 87, 88, 89, 97, 109, 110, 112, 116, 122, 123, 131, 132, 133, 134, 135, 136, 137, 139, 142, 143, 144, 145, 146, 147, 149, 156, 158, 161, 168, 169, 175, 177, 180, 181, 182, 184, 187, 191, 192, 193, 194, 195, 198, 199, 200, 210, 213, 214, 215, 216, 217, 218, 219, 221], "includ": [6, 9, 17, 19, 69, 70, 71, 77, 86, 87, 96, 122, 134, 184, 200, 214, 215, 216, 218], "non": [6, 11, 18, 20, 63, 68, 69, 71, 74, 102, 106, 131, 134, 142, 175, 177, 181, 182, 202, 216, 218, 221], "certain": [6, 19, 48, 49, 88, 89, 97, 123, 134, 216, 221], "virtual": [6, 37, 49, 77, 80, 81, 106, 112, 117, 123, 214, 219, 221], "do": [6, 9, 11, 32, 63, 112, 114, 123, 168, 174, 177, 192, 204, 214, 215, 216, 218, 221], "just": [6, 11, 17, 18, 31, 69, 71, 74, 87, 105, 184, 200, 214, 216], "themselv": [6, 70, 215, 216], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 71, 72, 74, 106, 125, 151, 159, 193, 197, 214, 216], "_require_scheduling_in_second": 6, "requir": [6, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 73, 76, 77, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 106, 109, 110, 112, 123, 131, 142, 175, 177, 179, 181, 182, 184, 186, 187, 197, 204, 210, 213, 214, 215, 216, 218], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 74, 75, 106, 108, 112, 123, 131, 135, 139, 142, 168, 175, 177, 181, 182, 191, 193, 194, 195, 214, 216, 219, 221], "instead": [6, 20, 80, 164, 192, 214, 215, 216, 219, 221], "sampl": [6, 20, 32, 80, 123, 125, 126, 129, 131, 132, 133, 134, 142, 143, 144, 151, 152, 156, 157, 158, 162, 164, 168, 169, 175, 177, 178, 179, 180, 181, 182, 192, 193, 197, 210, 213, 215, 216, 217], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 71, 74, 77, 84, 87, 88, 89, 97, 98, 105, 106, 108, 111, 112, 115, 117, 122, 123, 131, 138, 142, 152, 154, 155, 157, 158, 161, 163, 167, 168, 173, 175, 177, 181, 182, 184, 188, 190, 194, 195, 200, 204, 214, 215, 216, 219, 221], "happen": [6, 75, 80, 112, 164, 179, 188, 200, 215, 216], "reason": [6, 17, 87, 182, 200, 208, 215, 216, 218], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 156, 169, 175, 176, 180, 182, 184, 192, 198, 199, 200, 216, 218, 219, 220, 221], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 75, 77, 81, 87, 99, 105, 112, 161, 168, 184, 193, 199, 200, 214, 216, 218, 219], "rate": [6, 32, 80, 123, 126, 129, 156, 157, 168, 192, 193, 210, 213, 216, 217], "uhfqa": [6, 123], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 73, 74, 75, 83, 87, 92, 93, 94, 95, 96, 107, 108, 114, 115, 116, 117, 118, 123, 132, 133, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 175, 176, 177, 180, 181, 182, 192, 200, 216, 218, 219, 220, 221], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 71, 74, 77, 84, 98, 105, 106, 129, 135, 143, 144, 149, 158, 168, 174, 184, 187, 192, 193, 200, 204, 214, 215, 216, 218, 219, 221], "granular": [6, 55, 123, 129, 158, 168, 193, 206, 210, 213, 214, 215, 219], "some": [6, 17, 18, 53, 116, 131, 142, 174, 175, 177, 181, 182, 194, 195, 200, 214, 215, 216, 221], "mix": [6, 74], "station": [6, 37, 82, 123, 128, 184, 214, 215], "ro": 6, "devic": [6, 219], "vendor": 6, "than": [6, 11, 74, 106, 168, 184, 191, 194, 195, 210, 213, 214], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 77, 84, 98, 168, 207, 210, 213, 214, 219], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 100, 113, 118, 131, 135, 155, 168, 184, 185, 215, 216, 218, 219], "inject_calibr": [6, 214], "partial_calibr": 6, "new": [6, 11, 14, 17, 101, 168, 184, 192, 193, 194, 195, 197, 200, 214, 215, 216], "chang": [6, 17, 18, 20, 63, 112, 157, 163, 184, 191, 204, 216, 218, 219], "after": [6, 63, 74, 87, 89, 91, 93, 95, 96, 112, 125, 156, 164, 190, 191, 192, 204, 214, 219, 221], "initialis": [6, 19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106], "invalid": [6, 208], "gate_implement": [6, 17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 75, 83, 102, 107, 114, 116], "affect": [6, 11, 35, 69, 112, 168, 169, 184, 200, 214, 219], "loci": [6, 11, 24, 69, 106, 184, 216, 221], "factoriz": [6, 69, 105, 106, 184, 214], "its": [6, 7, 17, 18, 20, 33, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 76, 77, 78, 79, 85, 109, 110, 128, 134, 157, 158, 168, 169, 178, 179, 184, 193, 194, 195, 198, 200, 214, 215, 216, 218, 221], "wa": [6, 37, 77, 81, 182, 214, 218, 219, 221], "must": [6, 9, 11, 12, 20, 37, 49, 63, 123, 129, 139, 149, 168, 169, 182, 184, 200, 214, 216, 218], "doe": [6, 11, 37, 49, 61, 69, 71, 74, 82, 106, 156, 158, 164, 184, 214, 215, 216, 218, 219, 221], "all": [6, 11, 12, 15, 19, 20, 27, 28, 29, 30, 31, 32, 35, 49, 55, 60, 69, 70, 71, 74, 75, 81, 86, 87, 96, 98, 106, 112, 123, 128, 129, 131, 142, 154, 156, 157, 160, 163, 168, 169, 175, 177, 181, 182, 188, 192, 198, 210, 213, 214, 215, 216, 217, 218, 219, 221], "found": [6, 11, 18, 38, 39, 61, 168, 184], "actual": [6, 37, 55, 69, 71, 74, 132, 133, 143, 144, 175, 177, 178, 179, 180, 181, 182, 192, 210, 213, 214, 216, 219, 221], "previou": [6, 214, 219], "validate_calibr": 6, "check": [6, 13, 123, 210, 213, 214], "match": [6, 63, 149, 168, 169, 210, 212, 213, 214, 221], "someth": [6, 19, 69, 70, 123, 154, 156, 157, 160, 186, 187, 204], "wrong": [6, 186, 187, 214], "get_drive_channel": [6, 221], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 84, 85, 105, 108, 109, 110, 111, 115, 117, 123, 129, 131, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 157, 168, 169, 173, 184, 193, 200, 203, 210, 213, 215, 216, 221], "exist": [6, 18, 61, 101, 105, 111, 115, 117, 168, 214, 215, 216, 221], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 71, 74, 88, 89, 90, 91, 92, 93, 94, 95, 118, 131, 138, 142, 174, 181, 200, 214, 215, 216, 218, 219], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 71, 74, 125, 214, 216], "belong": [6, 69, 71, 74, 214], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 71, 74, 103, 104, 105, 161, 214, 217, 221], "signal": [6, 16, 37, 69, 71, 74, 153, 161, 162, 178, 179, 181, 214, 217, 219, 220], "between": [6, 16, 53, 55, 69, 75, 77, 80, 82, 106, 154, 168, 180, 182, 188, 215, 216, 219], "sourc": [6, 77, 191, 214, 218, 219], "destin": [6, 219], "either": [6, 35, 112, 163, 200, 214, 215, 218], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 88, 89, 97, 105, 111, 115, 117, 168, 169, 191, 214, 215, 216, 218], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 214, 219], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 71, 99, 105, 112, 122, 127, 128, 184, 191, 214, 216, 219, 221], "node": [6, 20], "receiv": [6, 161, 218, 219], "bit": [6, 37, 214, 219], "which": [6, 11, 15, 20, 35, 48, 69, 77, 84, 108, 112, 134, 135, 136, 137, 138, 139, 145, 146, 147, 168, 169, 176, 177, 181, 182, 184, 192, 200, 204, 214, 215, 216, 217, 218, 219, 221], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 109, 110, 112, 116, 122, 123, 129, 131, 134, 135, 138, 139, 142, 149, 168, 175, 177, 181, 182, 197, 202, 214, 215, 216, 217, 218, 221], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 71, 72, 73, 74, 104, 105, 112, 123, 184, 193, 214, 215, 216, 217, 221], "result": [6, 11, 17, 37, 69, 70, 71, 74, 81, 105, 112, 139, 153, 159, 161, 168, 214, 215, 218, 221], "support": [6, 33, 37, 63, 69, 71, 74, 106, 180, 182, 202, 210, 213, 214, 215, 216, 218, 219], "fast": [6, 48, 69, 71, 74, 92, 93, 103, 104, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 161, 214, 217, 220, 221], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 20], "impl_nam": [6, 11, 18, 20, 101, 186, 214, 216], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 109, 110, 123, 184], "request": [6, 11, 18, 20, 55, 99, 124, 126, 214, 215, 221], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 70, 134, 163, 214], "neighbor": [6, 192, 193, 200], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 76, 77, 78, 79, 106, 182, 184, 192, 193, 200, 214, 215, 216, 220, 221], "ad": [6, 11, 17, 69, 71, 74, 81, 122, 168, 188, 192, 193, 214, 216, 221], "separ": [6, 18, 20, 32, 105, 111, 115, 117, 214, 215, 218, 221], "resolut": [6, 200, 221], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 72, 73, 75, 77, 81, 83, 84, 87, 98, 99, 100, 108, 109, 112, 114, 155, 156, 163, 175, 176, 177, 181, 184, 204, 214, 215, 216, 221], "Will": [6, 55, 198], "iter": [6, 9, 11, 12, 20, 63, 82, 106, 129, 168, 169, 184, 197, 200, 221], "wait": [6, 35, 37, 55, 75, 80, 105, 106, 123, 150, 152, 167, 168, 190, 192, 214, 215, 219, 221], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 108, 109, 110, 112, 123, 129, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 175, 177, 178, 179, 180, 181, 182, 188, 191, 192, 193, 194, 195, 197, 200, 210, 213, 214, 215, 216, 219, 221], "round": [6, 55, 123, 129, 214, 219, 221], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 71, 73, 74, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 109, 123, 125, 129, 134, 168, 184, 214, 216], "everi": [6, 20, 156, 210, 213, 214, 216, 221], "guarante": [6, 55, 215], "idl": [6, 106, 164, 168, 214], "cannot": [6, 17, 152, 168, 200, 214, 216, 218, 219], "replac": [6, 11, 20, 101, 152, 164, 214, 218], "dynam": [6, 164, 214], "decoupl": [6, 164, 214], "sequenc": [6, 9, 11, 12, 16, 21, 77, 111, 152, 164, 165, 169, 173, 184, 191, 200, 204, 214, 215, 217, 219, 221], "thei": [6, 11, 18, 19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 112, 116, 122, 123, 168, 169, 184, 200, 210, 213, 214, 215, 216, 219, 221], "treat": [6, 192, 200, 221], "remain": [6, 188, 191, 204, 218], "align": [6, 215, 219, 221], "time": [6, 11, 20, 37, 53, 55, 69, 70, 75, 77, 80, 85, 98, 106, 110, 112, 123, 125, 129, 135, 136, 137, 139, 145, 146, 147, 152, 157, 161, 167, 168, 169, 178, 179, 182, 188, 191, 192, 194, 195, 200, 214, 215, 216, 217, 221], "dure": [6, 55, 74, 77, 123, 134, 142, 152, 167, 178, 179, 182, 200, 215, 221], "particular": [6, 11, 20, 23, 24, 25, 186, 218, 219, 221], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 105, 106, 108, 109, 110, 112, 161, 164, 184, 200, 215, 216, 218, 219], "thu": [6, 32, 75, 84, 112, 134, 138, 215, 219], "less": [6, 11, 74, 188, 214], "space": [6, 13, 14, 15, 182, 219], "side": [6, 34, 35, 74, 123, 194, 195, 215], "todo": [6, 37, 63, 69, 71, 74, 123, 170], "For": [6, 11, 14, 17, 23, 24, 69, 123, 138, 168, 175, 184, 214, 215, 216, 218, 219, 221], "now": [6, 63, 112, 214], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 71, 74, 77, 81, 106, 122, 135, 139, 158, 168, 184, 192, 193, 197, 200, 213, 215, 216, 218, 219, 221], "benefit": 6, "exa": [6, 20, 179, 202, 214, 216, 217, 221], "sweep": 6, "over": [6, 7, 12, 69, 71, 74, 135, 139, 168, 214], "In": [6, 7, 11, 18, 37, 53, 55, 69, 70, 71, 74, 75, 80, 98, 106, 152, 157, 161, 168, 184, 192, 214, 215, 216, 218, 219, 221], "futur": 6, "gener": [6, 11, 20, 69, 70, 71, 74, 98, 112, 139, 173, 200, 214, 216, 218], "should": [6, 18, 20, 37, 49, 69, 70, 71, 74, 84, 103, 104, 105, 111, 115, 117, 122, 123, 134, 135, 139, 182, 184, 188, 192, 193, 214, 216, 218, 219], "experi": [6, 11, 60, 184, 214], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 108, 109, 110, 112, 113, 117, 118, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 149, 155, 156, 160, 161, 163, 168, 170, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 193, 194, 195, 203, 204, 206, 214, 216], "how": [6, 184, 200, 215, 216, 218, 219, 221], "long": [6, 75, 84, 123, 178, 179, 214, 215, 216], "start": [6, 58, 60, 135, 139, 145, 146, 168, 188, 191, 192, 193, 198, 199, 214, 215, 216, 219], "simultan": [6, 69, 71, 74, 158, 188, 200, 215, 221], "box": [6, 37, 84, 98, 99, 192, 198, 199, 200, 214, 221], "get_implement": [6, 18, 20, 69, 214, 216, 221], "use_priority_ord": 6, "strict_locu": [6, 18, 20], "priority_calibr": [6, 221], "provid": [6, 11, 18, 19, 20, 31, 32, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 139, 184, 210, 213, 214, 215, 216, 217, 218, 221], "an": [6, 11, 13, 14, 16, 18, 19, 20, 29, 34, 38, 39, 48, 53, 61, 63, 69, 71, 75, 83, 84, 85, 86, 88, 98, 108, 109, 110, 112, 113, 116, 118, 122, 123, 124, 131, 154, 156, 158, 168, 169, 173, 182, 184, 192, 194, 197, 200, 204, 207, 208, 214, 215, 216, 217, 218, 219, 221], "mean": [6, 11, 69, 71, 74, 75, 161, 184, 200, 214, 216, 218, 219, 221], "chosen": [6, 117, 134, 215], "automat": [6, 11, 19, 70, 214, 216], "logic": [6, 19, 20, 31, 35, 48, 49, 77, 105, 106, 108, 134, 168, 214, 216, 221], "describ": [6, 11, 12, 20, 134, 135, 139, 151, 184, 200, 215, 218, 221], "below": [6, 20, 143, 144, 214, 215, 218, 219, 221], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 109, 110, 135, 184, 214, 216], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 77, 143, 144, 147, 168, 182, 184, 200, 215, 216, 217, 219, 221], "avail": [6, 18, 20, 215, 216, 218, 219, 221], "effect": [6, 20, 37, 75, 98, 108, 184, 188, 200, 215, 216, 217, 219, 221], "get_default_implementation_for_locu": [6, 184, 214, 216], "otherwis": [6, 18, 20, 49, 69, 71, 74, 80, 105, 123, 168, 169, 180, 214, 216, 218], "first": [6, 11, 13, 34, 35, 37, 49, 69, 71, 74, 135, 138, 139, 168, 182, 184, 216, 219, 221], "prioriti": [6, 7, 184, 214], "follow": [6, 55, 69, 70, 75, 105, 112, 128, 138, 163, 182, 188, 192, 200, 210, 213, 214, 215, 218, 219, 221], "defin": [6, 7, 11, 18, 19, 22, 28, 29, 30, 32, 38, 39, 48, 49, 52, 69, 70, 75, 83, 88, 89, 97, 106, 107, 123, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 174, 175, 182, 184, 186, 187, 198, 200, 214, 215, 216, 217, 218, 221], "defaults_for_locu": [6, 184, 214], "global": [6, 63, 184, 214], "load": [6, 8, 214], "common": [6, 18, 19, 38, 39, 69, 70, 71, 86, 87, 96, 105, 111, 115, 116, 117, 129, 192, 214, 217, 218], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 112, 122, 123, 131, 134, 142, 164, 168, 169, 175, 177, 181, 182, 184, 194, 200, 214, 215, 216, 218, 221], "note": [6, 16, 49, 69, 135, 139, 149, 156, 168, 187, 191, 200, 216, 219], "prevent": [6, 215, 216], "save": 6, "via": [6, 18, 20, 63, 87, 105, 106, 111, 115, 117, 147, 180, 182, 214, 216], "could": [6, 17, 55, 184, 216, 219], "_find_implementation_and_locu": 6, "find": [6, 182, 221], "instanc": [6, 11, 13, 18, 20, 33, 69, 71, 74, 80, 84, 85, 98, 108, 109, 110, 156, 159, 184, 204, 221], "compat": [6, 69, 71, 74, 98, 210, 213, 214], "highest": [6, 184], "we": [6, 17, 55, 63, 77, 112, 123, 134, 135, 138, 139, 142, 182, 184, 204, 216, 218, 219, 221], "equival": [6, 74, 112, 188, 200, 204, 215, 221], "one": [6, 9, 11, 18, 38, 39, 42, 45, 49, 56, 69, 70, 74, 84, 168, 184, 192, 193, 197, 200, 214, 215, 216, 218, 219, 221], "had": [6, 214], "_get_implement": 6, "built": [6, 11, 116, 214], "when": [6, 11, 17, 35, 37, 55, 69, 71, 74, 75, 106, 131, 142, 168, 170, 175, 177, 181, 182, 192, 193, 200, 207, 208, 209, 214, 215, 216, 219, 221], "later": [6, 11], "oilcalibrationdata": [6, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 112, 115, 117, 186, 216], "impli": [6, 218], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 52, 69, 70, 71, 74, 77, 99, 101, 105, 106, 108, 112, 131, 142, 156, 161, 175, 176, 177, 181, 182, 184, 187, 214, 215, 216, 221], "validate_quantum_circuit": [6, 214], "require_measur": [6, 9], "constitut": [6, 9, 218], "least": [6, 9, 55, 123, 129, 135, 139, 192, 193, 210, 213, 215, 216, 218], "circuit_to_timebox": [6, 214], "scheduling_algorithm": [6, 197, 200], "schedulingalgorithm": [6, 196, 197, 200], "hard_boundari": [6, 197, 198, 200], "locus_map": [6, 214], "convert": [6, 11, 20, 87, 117, 123, 131, 142, 152, 167, 175, 177, 181, 182, 190, 200, 214, 215, 216, 217], "resolv": [6, 20, 179, 198, 200, 215, 217], "option": [6, 11, 12, 13, 32, 69, 168, 184, 214, 216, 219], "placehold": [6, 11, 214], "physic": [6, 11, 21, 123, 192, 214, 215, 216], "while": [6, 20, 87, 198, 215, 216, 218, 221], "unresolv": 6, "fail": [6, 207, 209], "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 198, 200, 214], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 106, 109, 110, 116, 117, 123, 125, 131, 132, 133, 138, 141, 142, 143, 144, 145, 146, 149, 154, 156, 173, 175, 176, 177, 178, 180, 181, 182, 191, 197, 200, 204, 216, 217, 218, 221], "temporari": 6, "helper": [6, 20], "playlist": [6, 75, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 140, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 205, 209, 210, 213, 214, 217, 219, 221], "front": [6, 168], "pad": [6, 35, 85, 110, 135, 138, 139, 168, 192, 198, 221], "equal": [6, 11, 37, 75, 112, 115, 178, 179, 191, 194, 195, 214, 215, 221], "sinc": [6, 32, 49, 77, 112, 182, 184, 214, 216], "delai": [6, 37, 67, 68, 69, 70, 73, 105, 151, 158, 214, 215, 219], "befor": [6, 74, 80, 87, 89, 91, 93, 95, 123, 125, 204, 214, 221], "final": [6, 96, 175, 215, 216, 221], "wish": 6, "lose": [6, 214], "coher": [6, 156], "done": [6, 87, 163, 170, 182, 188, 193, 214, 216], "onc": [6, 214, 215, 216], "handl": [6, 19, 32, 55, 70, 105, 122, 123, 129, 192, 195, 204, 214, 216], "better": [6, 123, 200, 214], "remov": [6, 20, 71, 112, 123, 168, 169, 170, 214, 221], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 80, 84, 86, 87, 92, 93, 96, 108, 122, 123, 125, 129, 131, 132, 133, 134, 135, 139, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 192, 197, 200, 206, 214], "far": 6, "By": [6, 20, 48, 49, 69, 70, 71, 77, 99, 105, 112, 131, 142, 175, 177, 181, 182, 204], "occupi": [6, 168, 192, 193, 200, 215], "unnecessari": [6, 37, 192, 214], "pack": [6, 198], "assum": [6, 35, 49, 81, 98, 105, 112, 117, 129, 145, 146, 149, 168, 178, 179, 182, 215, 216, 218, 221], "refer": [6, 87, 116, 122, 163, 214, 216, 217, 221], "ensur": [6, 143, 144, 215, 219, 221], "work": [6, 11, 77, 106, 168, 191, 214, 215, 216, 218, 221], "intend": [6, 77, 106, 184, 215, 216], "properli": 6, "higher": [6, 140, 142, 143, 144, 214, 215, 219], "help": [6, 11, 215, 216, 219], "defend": [6, 218], "crosstalk": [6, 62, 63, 155, 188, 214, 216], "expens": 6, "longer": [6, 106, 214], "more": [6, 19, 55, 131, 152, 184, 200, 214, 215, 218, 219], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 106, 214], "readi": [6, 217], "execut": [6, 34, 35, 122, 157, 165, 168, 184, 188, 214, 215, 216, 217, 218, 219, 221], "sample_r": [6, 123, 124, 125, 126], "_finish_schedul": 6, "fuse": [6, 87, 214], "distanc": [6, 214], "rz": [6, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 76, 77, 78, 79, 87, 89, 91, 93, 95, 108, 109, 110, 111, 112, 117, 155, 204, 214], "correct": [6, 13, 62, 63, 77, 81, 114, 155, 214, 216, 221], "_fuse_long_distance_virtual_rz": 6, "virtualrz": [6, 77, 80, 81, 112, 150, 214, 215], "next": [6, 191, 215, 216, 219], "fluxpuls": [6, 150], "resolve_timebox": [6, 200, 214, 221], "compute_neighborhood_hard_boundari": 6, "children": [6, 197, 200, 215, 221], "concaten": [6, 200, 215, 221], "strategi": [6, 192, 193, 199, 200], "composit": [6, 17, 18, 38, 39, 198, 199, 200, 214, 215, 216, 221], "solid": 6, "rectangl": [6, 221], "longest": [6, 55, 192, 198], "within": [6, 13, 161, 168, 199, 215, 218], "tetri": [6, 152, 198], "tightli": [6, 198], "possibl": [6, 55, 112, 154, 168, 182, 192, 193, 198, 199, 200, 214, 215, 218, 219, 221], "still": [6, 11, 63, 169], "overlap": [6, 152, 158, 167, 192, 215, 221], "regardless": [6, 216, 219], "boundari": [6, 58, 60, 192, 198, 199], "modifi": [6, 7, 11, 168, 169, 191, 192, 193, 194, 195, 204, 214, 216, 218, 221], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 112, 168, 169, 188, 200, 214, 215, 216, 217, 221], "becom": [6, 11, 37, 175, 221], "atom": [6, 20, 197, 198, 200, 215, 216, 221], "isn": 6, "t": [6, 63, 84, 96, 116, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 174, 175, 177, 180, 182, 214, 218], "alreadi": [6, 11, 61, 168, 200, 214, 216], "precomput": [6, 168, 200, 216], "typic": [6, 49, 69, 123, 135, 138, 184, 188, 215, 216, 219, 221], "want": [6, 11, 19, 48, 49, 69, 71, 74, 88, 89, 97, 135, 139, 164, 216], "top": [6, 216], "layer": 6, "would": [6, 11, 17, 49, 80, 214, 216, 219, 221], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 105, 109, 128, 139, 168, 176, 184, 192, 193, 197, 200, 214, 215, 216, 217, 219, 221], "lower": [6, 217, 219], "where": [6, 48, 49, 55, 63, 69, 70, 71, 74, 75, 83, 96, 107, 108, 116, 123, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 158, 168, 175, 177, 180, 182, 184, 192, 195, 214, 215, 216, 218], "improv": [6, 37, 69, 71, 74, 214, 218], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 71, 74, 77, 101, 105, 106, 108, 131, 142, 168, 169, 175, 177, 181, 182, 184, 214, 215, 216, 217, 221], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 60, 161, 216], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 20, 61, 106, 122, 168, 194, 195, 214, 215, 216, 218, 221], "addit": [6, 11, 20, 31, 32, 35, 48, 49, 69, 75, 77, 105, 106, 108, 114, 156, 168, 181, 184, 200, 216, 218, 221], "ideal": [6, 16, 53, 184, 188], "model": [6, 130, 140, 174, 188, 215], "correctli": [6, 17, 214, 216], "interact": [6, 49], "frame": [6, 77, 155, 182, 204, 214, 216], "subspac": [6, 75, 184, 188, 215, 216], "connect": [6, 11, 106, 184, 200, 215, 216, 221], "those": [6, 32, 69, 71, 74, 105, 138, 184, 200, 214, 216, 218, 221], "henc": [6, 204], "evolut": 6, "Of": 6, "cours": [6, 53, 216], "realiti": [6, 53], "possibli": [6, 49, 219], "applic": [6, 216, 218], "essenti": [6, 138, 139, 216], "precis": [6, 215], "interest": 6, "howev": [6, 18, 55, 105, 131, 142, 164, 175, 177, 181, 182, 215, 216, 218], "well": [6, 82, 106, 157, 168, 184, 210, 213, 214, 216, 217, 219, 221], "local": [6, 77, 112, 155, 163, 204], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 71, 74, 106, 131, 142, 151, 175, 177, 181, 182, 214, 215, 216, 221], "end": [6, 11, 40, 74, 77, 80, 81, 112, 116, 135, 139, 145, 146, 152, 167, 168, 169, 180, 214, 215, 216, 218, 219], "carri": [6, 215, 218], "meant": [6, 11], "zero": [6, 11, 35, 49, 55, 63, 64, 77, 87, 98, 102, 134, 135, 138, 139, 152, 158, 164, 181, 182, 184, 191, 194, 195, 214, 215], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 77, 123, 131, 132, 133, 135, 136, 137, 138, 139, 141, 143, 145, 146, 148, 149, 153, 158, 168, 182, 184, 197, 200, 210, 213, 214, 215, 216, 219, 221], "involv": [6, 20, 35, 215, 217, 221], "compress": [6, 215], "duplic": 6, "transfer": [6, 98, 218], "drop": 6, "point": [6, 112, 135, 136, 137, 139, 145, 146, 147, 191, 192, 193, 216], "finalis": 6, "unless": [6, 20, 131, 142, 175, 177, 181, 182, 200, 214, 216, 218, 221], "process": [6, 81, 152, 215, 220], "call": [6, 11, 13, 17, 18, 20, 77, 106, 115, 214, 216, 221], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 18, 20, 31, 37, 49, 84, 101, 173, 214, 215, 216, 217], "shortcut": [6, 11, 214, 221], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 216], "nativ": [7, 33, 184, 221], "extend": [7, 13, 15, 55, 135, 167, 168, 169, 192, 193, 194, 195, 200], "ones": [7, 18, 34, 35, 105, 111, 115, 117, 198, 200, 216], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 71, 98, 106, 108, 112, 168, 177, 180, 184, 192, 195, 204, 214, 215, 216], "gate_definit": 7, "section": [7, 215, 216, 218, 219, 221], "file": [7, 8, 52, 218], "yaml": [7, 8, 214], "config": [8, 122, 214], "circuitoperationlist": [10, 214], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 40, 83, 98, 105, 106, 112, 114, 116, 158, 182, 200, 214, 216], "mostli": [11, 215], "conveni": [11, 20, 69, 71, 74, 200, 214, 217], "enabl": [11, 55, 77, 84, 178, 179, 214], "easi": [11, 221], "creation": [11, 214, 216], "calcul": [11, 12, 15, 77, 180, 182, 214], "onto": 11, "import": [11, 56, 216, 218, 221], "present": [11, 12, 75, 168, 192, 221], "think": 11, "about": [11, 82, 154, 156, 157, 160, 214, 215, 219, 221], "qiskit": [11, 214], "quantumregist": 11, "most": [11, 216, 217], "simpli": [11, 37, 112, 184, 215], "taken": [11, 214], "you": [11, 69, 70, 77, 164, 184, 214, 217, 218, 221], "good": 11, "practic": [11, 216, 219, 221], "mutabl": [11, 168], "regist": [11, 12, 13, 18, 101, 184, 214, 215, 217, 221], "usabl": [11, 20, 37, 214], "fundament": 11, "popul": [11, 74, 75], "qb1": [11, 69, 184, 216, 221], "qbn": 11, "qb2": [11, 69, 184, 216, 219, 221], "altern": [11, 215, 219], "To": [11, 37, 55, 168, 216, 217, 218, 219, 221], "your": [11, 216, 218], "own": [11, 17, 20, 33, 184, 214, 215, 216, 218], "initi": [11, 32, 33, 134, 142, 175, 182, 214, 215, 216], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 184, 214, 215, 216], "__add__": [11, 69, 71, 74, 214], "__mul__": [11, 214], "__getitem__": [11, 214], "redefin": [11, 131, 142, 175, 177, 181, 182], "3": [11, 37, 63, 67, 68, 69, 73, 85, 110, 141, 192, 218, 220, 221], "circuit1": [11, 221], "circuit2": [11, 221], "4": [11, 57, 92, 93, 94, 95, 114, 116, 141, 218, 220], "produc": [11, 194, 214, 215, 219, 221], "prx": [11, 18, 19, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 107, 111, 112, 115, 117, 184, 204, 214, 215, 216, 219, 220, 221], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 76, 77, 78, 79, 83, 84, 87, 98, 99, 100, 105, 107, 112, 113, 115, 116, 118, 155, 184, 203, 204, 214, 216, 221], "drag_crf": [11, 38, 214], "abov": [11, 215, 216, 217, 218, 221], "shorten": 11, "exactli": [11, 20, 184, 197], "syntax": [11, 214, 215, 216, 218, 221], "usual": [11, 17, 55, 159, 182, 215, 216, 219, 221], "attach": [11, 218], "init": [11, 214, 216], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 76, 77, 78, 79, 85, 109, 110, 184, 216], "unitari": [11, 12, 13, 15, 40, 58, 60, 75, 100, 102, 113, 118, 184, 214, 215, 216], "propag": [11, 15, 58, 60, 105, 214, 219], "entir": [11, 13, 123, 214], "u": [11, 57, 117, 214], "get_unitari": 11, "dimens": [11, 135, 138], "alwai": [11, 18, 34, 35, 37, 77, 105, 111, 115, 117, 143, 144, 184, 188, 192, 194, 216], "qb3": [11, 69, 184, 219, 221], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 116, 135, 184, 214, 216], "correspond": [11, 13, 18, 53, 57, 58, 59, 60, 63, 105, 111, 115, 117, 131, 134, 135, 138, 154, 184, 192, 200, 215, 219], "three": [11, 84], "big": [11, 12, 13, 184], "endian": [11, 12, 13, 184], "convent": [11, 12, 77, 128], "With": [11, 19, 69, 70, 71, 74, 219], "action": [11, 12, 184, 215], "ident": [11, 15, 53, 59, 98, 214], "physical_circuit": 11, "map_loci": [11, 214], "physical_qubit": 11, "exampl": [11, 14, 17, 18, 77, 123, 134, 184, 214, 215, 216, 218, 221], "alic": 11, "zzz": 11, "qb5": [11, 184], "qb10": 11, "occurr": 11, "mani": [11, 214, 216, 221], "run": [11, 138, 214, 219], "parallel": [11, 184, 214], "larg": [11, 135, 139, 215], "left": [11, 20, 31, 35, 48, 49, 69, 70, 71, 106, 108, 112, 194, 195, 215, 216, 219], "ignor": [11, 37, 134], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 123, 132, 133, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 149, 175, 182], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 73, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 175, 177, 178, 179, 180, 181, 182, 214, 216], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 73, 92, 93, 94, 95, 100, 113, 118, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 177, 178, 179, 180, 181, 182, 184, 216], "locus_indic": 11, "append": [11, 35, 69, 168, 169, 214], "store": [11, 13, 17, 20, 48, 49, 69, 70, 71, 99, 105, 112, 138, 155, 184, 216], "select": [11, 15, 219, 221], "indic": [11, 15, 80, 134, 135, 138, 173, 215, 218], "qb4": [11, 219], "param": [11, 13, 20, 184, 214, 216], "barrier": [11, 12, 184, 216], "compos": [11, 188, 217], "safer": 11, "wai": [11, 18, 151, 200, 214, 215, 216, 221], "togeth": [11, 37, 48, 69, 71, 74, 80, 192, 200, 214, 215, 216, 221], "probabl": 11, "wire": 11, "k": [11, 14, 135, 143, 144, 145, 146, 147, 148, 149, 182], "achiev": [11, 216], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 178, 179, 200], "make_circuit": [11, 214], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 73, 148, 149, 162, 168, 182, 192, 198, 210, 212, 213, 214], "total": [11, 81, 169, 188, 221], "across": [11, 139, 143, 144], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 71, 74, 214, 216, 218], "skip": [12, 168], "product": [12, 138, 215, 218], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 71, 106, 108, 112, 215, 216, 221], "fetch": 13, "Then": [13, 200, 216], "hilbert": [13, 15], "whole": [13, 63, 215, 218], "perm": 14, "permut": [14, 214], "state": [14, 40, 53, 74, 75, 77, 83, 87, 102, 105, 106, 112, 114, 116, 184, 204, 215, 216, 218, 219], "vector": [14, 135, 214], "index": [14, 63, 122, 169, 191, 215, 217], "th": [14, 135, 182], "old": 14, "kron": [14, 184], "c": [14, 180, 200, 218], "n_qubit": 15, "larger": [15, 168, 215], "system": [15, 52, 214, 218, 219, 221], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 76, 77, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 106, 109, 110, 112], "hash": 15, "purpos": [15, 20, 69, 71, 74, 214, 216, 218], "rang": [15, 134, 135, 139, 145, 146, 175, 200, 214], "abstract": [16, 99, 184, 215, 216, 217], "conceptu": [16, 215], "wherea": [16, 69, 152, 184, 215, 216], "concret": [16, 184, 216, 217, 221], "One": [16, 20, 99, 215, 221], "approxim": [16, 135, 139], "abc": [16, 18, 20, 34, 36, 40, 53, 62, 66, 75, 83, 99, 102, 107, 114, 116], "customiqwaveform": [16, 66, 69, 70, 71, 83, 86, 87, 216], "singlepulseg": [16, 83, 98, 214], "compositecach": 16, "__call__": [17, 18, 20, 31, 35, 48, 49, 69, 71, 74, 77, 105, 106, 108, 214, 216], "normal": [17, 37, 63, 143, 144, 147, 182, 184, 203, 214, 216, 218], "_timebox_cach": 17, "trust": 17, "itself": [17, 77, 106, 214, 216, 219], "member": [17, 18, 58, 60, 216], "consist": [17, 48, 49, 84, 87, 98, 108, 131, 142, 168, 175, 177, 181, 182, 184, 214, 216, 218], "deduc": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 216], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 71, 74, 103, 104, 105, 111, 115, 117, 214, 215, 216], "identifi": [17, 37, 123, 151, 168, 216, 218], "cast": 17, "extra": [17, 37, 77, 87, 216], "string": [17, 63, 67, 68, 69, 73, 161, 173], "id": 17, "further": [17, 181, 182, 200, 216], "did": [17, 214], "come": [17, 216, 221], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 111, 112, 115, 117, 214, 216], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 108, 109, 110, 111, 112, 115, 117, 216], "term": [18, 131, 132, 133, 136, 137, 141, 142, 143, 145, 146, 147, 149, 175, 177, 181, 182, 184, 215, 216, 217, 218], "pre": [18, 134, 141, 142, 143, 144, 182], "abl": [18, 129, 214], "know": [18, 20, 216], "consid": [18, 19, 55, 64, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 138, 191, 194, 195, 214, 216, 221], "registered_g": [18, 105, 111, 115, 117, 214, 216], "cz": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 75, 77, 112, 184, 214, 215, 216, 220, 221], "insid": [18, 20, 31, 35, 37, 48, 49, 77, 87, 105, 106, 108, 175, 191, 200, 214, 215, 216], "besid": [18, 105, 106, 111, 115, 117], "here": [18, 63, 87, 105, 111, 115, 117, 149, 174, 182, 216, 219, 221], "construct": [18, 20, 33, 69, 84, 85, 98, 105, 108, 109, 110, 111, 115, 117, 131, 142, 175, 177, 181, 182, 214, 215, 217], "default_implement": [18, 38, 39, 184], "design": [18, 38, 39, 214, 218], "fill": [18, 38, 39, 215], "he": [18, 38, 39], "sought": 18, "custom": [19, 20, 69, 70, 71, 214, 215, 217], "waveform": [19, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 122, 130, 131, 132, 133, 134, 140, 142, 143, 144, 155, 156, 157, 160, 175, 176, 177, 178, 179, 180, 181, 182, 210, 212, 213, 214, 215, 217], "iqpuls": [19, 48, 69, 70, 71, 84, 86, 87, 88, 89, 96, 97, 98, 108, 112, 150, 153, 158, 161, 163, 204, 212, 214, 215, 216], "info": [19, 20, 214, 216], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 71, 72, 73, 74, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 131, 133, 137, 144, 146, 156, 214, 216, 220, 221], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 97, 156, 216], "wave_q": [19, 67, 68, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 97, 156, 216], "dependent_wav": [19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "share": [19, 32, 49, 67, 68, 69, 70, 71, 72, 73, 74, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 218], "drag": [19, 67, 68, 69, 70, 71, 72, 73, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 214, 216], "root_paramet": [19, 49, 69, 70, 71, 77, 86, 87, 96], "independ": [19, 69, 70, 71, 86, 87, 96, 168, 169, 184, 215, 219], "overrid": [19, 20, 31, 35, 48, 49, 69, 70, 71, 77, 86, 87, 88, 89, 96, 97, 99, 105, 106, 108, 112, 134, 214, 216, 221], "excluded_paramet": [19, 48, 49, 88, 89, 97], "exclud": [19, 48, 49, 88, 89, 97, 218], "There": [20, 87, 216, 219, 221], "subclass": [20, 31, 33, 35, 48, 49, 69, 70, 71, 106, 108, 112, 131, 142, 175, 177, 181, 182, 184, 214, 216], "__init__": [20, 214, 216], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 76, 77, 78, 79, 83, 84, 87, 98, 99, 100, 107, 112, 113, 114, 116, 118, 204, 214, 216, 221], "input": [20, 37, 69, 71, 74, 96, 215, 216], "raw": [20, 153, 161, 162, 173, 219], "meaning": [20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 76, 77, 78, 79, 85, 109, 110, 184], "special_implement": [20, 214], "special": [20, 49, 80, 98, 174, 184, 214, 216, 218, 221], "never": [20, 214, 216], "explicitli": [20, 69, 71, 74, 214, 216, 218, 221], "qualified_nam": 20, "qualifi": 20, "classmethod": [20, 48, 49, 63, 69, 70, 71, 84, 86, 87, 88, 89, 96, 97, 99, 105, 106, 108, 112, 214], "needs_calibr": 20, "appropri": [20, 215, 218], "_call": [20, 31, 35, 37, 48, 49, 55, 69, 70, 71, 74, 77, 84, 87, 98, 99, 105, 106, 108, 112, 115, 117, 214, 216], "kwarg": [20, 31, 35, 48, 49, 69, 77, 84, 88, 89, 97, 105, 106, 108], "signatur": [20, 31, 35, 48, 49, 77, 105, 106, 108, 184, 214, 216], "suffici": [20, 31, 35, 48, 49, 77, 105, 106, 108, 123, 182], "assign": [20, 49, 69, 70, 71, 74, 122, 214], "specifi": [20, 31, 37, 131, 157, 198, 216, 219, 221], "to_timebox": 20, "wrap": [20, 221], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 71, 106, 108, 112, 168], "unimpl": [20, 31, 35, 48, 49, 69, 70, 71, 106, 108, 112], "reimplement": [20, 31, 35, 48, 49, 69, 70, 71, 106, 108, 112, 216], "make": [20, 31, 35, 48, 49, 69, 70, 71, 77, 106, 108, 112, 157, 164, 168, 169, 184, 188, 191, 214, 216, 218, 221], "sens": [20, 31, 35, 48, 49, 69, 70, 71, 106, 108, 112], "convert_calibration_data": 20, "channel_prop": 20, "item": [20, 168], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 92, 93, 94, 95, 96, 97, 109, 123, 124, 126, 131, 134, 135, 138, 139, 142, 149, 175, 177, 181, 182, 216], "addition": [20, 192, 193, 219], "under": [20, 188, 200, 218], "n_sampl": [20, 32, 84, 86, 87, 96, 108, 131, 132, 133, 134, 142, 143, 144, 175, 176, 177, 178, 179, 180, 181, 182], "subset": [20, 58], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 76, 77, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 106, 109, 110], "cl": 20, "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 168, 218], "dot": 20, "root": [20, 58], "settingnod": [20, 127, 128], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 71, 99, 105, 112, 216], "operation_nam": [20, 48, 49, 69, 70, 71, 99, 105, 112], "implementation_nam": [20, 48, 49, 69, 70, 71, 99, 105, 112, 216], "behaviour": [20, 48, 49, 69, 70, 71, 99, 105, 112, 214, 216], "get_custom_locus_map": [20, 63, 106, 214, 216], "component_to_channel": [20, 63, 106, 128], "wrt": 20, "often": [20, 214, 216], "set_locus_map": 20, "frozenset": [20, 63, 106, 216], "matter": [21, 77, 216], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 73, 76, 78, 79, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 109, 110, 185], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 71, 74, 77, 84, 108, 156, 158, 159, 160, 197, 214, 215, 216, 221], "singl": [31, 33, 60, 67, 68, 69, 70, 72, 83, 86, 87, 89, 98, 107, 112, 114, 116, 168, 169, 184, 197, 200, 211, 214, 215, 216, 219, 220, 221], "_get_puls": [31, 86, 87, 88, 89, 96, 97, 214], "_get_pulse_channel": 31, "basic": [31, 169, 214, 216], "insert": [31, 80, 214], "overridden": [31, 184, 216], "wave": [32, 155, 160, 177], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 106, 109, 110, 151, 153, 161, 162, 197, 200, 214, 215, 216], "format": [32, 214, 218], "been": [33, 37, 106, 200, 214, 215, 218, 219], "sever": [33, 152, 184, 214, 216, 219, 221], "scheme": [33, 215], "likewis": 33, "sometim": [33, 215], "metaoper": [34, 35, 184, 216], "forc": [34, 53, 123, 129], "tempor": [34, 35], "qudit": [35, 184], "metainstruct": 35, "caus": [35, 37, 55, 63, 214, 218, 219], "turn": [35, 214], "impos": 35, "relat": [35, 81, 214, 219, 221], "classic": [36, 37, 214, 219], "ccprx_composit": [36, 38, 39, 214, 219], "ccprx_composite_dragcosinerisefal": [36, 214], "ccprx_composite_draggaussian": [36, 214], "condit": [37, 38, 39, 105, 154, 161, 210, 213, 214, 216, 218, 219], "discrimin": [37, 74], "obtain": [37, 98, 131, 135, 215, 218, 220], "segment": [37, 84, 106, 161, 163, 166, 168, 173, 191, 192, 193, 214, 215, 219], "activ": [37, 159, 215], "underneath": 37, "control_delai": [37, 219], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110, 131, 136, 137, 142, 145, 146, 147, 149, 156, 168, 175, 177, 181, 182, 215, 216, 219], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110, 202, 214], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110, 202], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110], "instrument": [37, 112, 123, 126, 134, 150, 166, 219], "drive_control": [37, 127], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 71, 74, 214], "conditionalinstruct": [37, 69, 71, 74, 150, 161, 219], "until": [37, 112, 215], "enough": [37, 219], "arriv": [37, 219], "place": [37, 168, 179, 181, 192, 193, 218], "sequenti": 37, "without": [37, 71, 135, 138, 139, 162, 167, 200, 214, 215, 216, 218, 221], "care": [37, 221], "yourself": [37, 217], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 87, 89, 91, 93, 95, 100, 109, 113, 156, 204], "multipl": [37, 69, 71, 74, 106, 123, 129, 131, 142, 147, 154, 158, 161, 175, 177, 181, 182, 214, 215], "f": [37, 63, 69, 70, 71, 74, 135, 175, 177, 180, 182, 184, 216], "__": [37, 63, 69, 70, 71, 74, 214], "current": [37, 69, 71, 74, 77, 191], "hw": [37, 69, 71, 74, 214], "per": [37, 69, 71, 74, 184, 214, 216], "listen": [37, 214], "user": [37, 63, 69, 71, 74, 134, 182, 200, 214, 215, 216, 219, 221], "drag_gaussian": [39, 214, 221], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 76, 77, 78, 79, 87, 107, 112, 114, 116, 118, 204, 214, 216], "flip": [40, 214], "rel": [40, 77, 131, 142, 149, 156, 175, 177, 181, 182, 214, 215, 216, 221], "11": [40, 220], "text": [40, 75, 87, 180, 182, 218], "begin": [40, 77, 80, 116, 151, 158, 169, 180, 191, 194, 195, 214, 219, 221], "pmatrix": [40, 116], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 75, 77, 216], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 214], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 214], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cosinerisefal": [41, 42, 46, 50, 51, 76, 78, 79, 88, 89, 97, 181], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 76, 77, 78, 79, 216], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 109, 131, 134, 142, 175, 177, 179, 181, 182, 214, 216], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 109, 110], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 109, 131, 132, 133, 142, 143, 144, 180, 181, 182, 216], "crf": [41, 42, 45, 46, 50, 51, 76, 78, 79, 88, 89, 97], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 73, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 109], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 76, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 109, 131, 132, 133, 134, 142, 143, 144, 180, 181, 182], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 76, 78, 79, 85, 88, 89, 97, 109, 110, 179, 180, 181], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 76, 77, 78, 79, 216], "cosin": [42, 45, 85, 97, 109, 110, 131, 132, 133, 136, 137, 138, 139, 141, 145, 146, 147, 148, 174, 175, 178, 179, 181, 182, 214], "rise": [42, 45, 84, 85, 97, 109, 110, 178, 179, 180, 181, 214], "fall": [42, 45, 84, 85, 97, 109, 110, 178, 180, 181, 184, 214], "ac": [42, 45, 48, 84, 85, 108, 109, 110, 214], "stark": [42, 45, 48, 84, 85, 108, 109, 110, 214], "first_qubit": [42, 45], "mcrf": [42, 45, 109], "modulation_frequ": [42, 45, 109, 156, 181], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 109, 174], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 78, 174, 214], "coupling_strength_norm": [44, 45, 46, 78, 182], "frequency_initial_norm": [44, 45, 46, 78, 182], "frequency_to_minimize_norm": [44, 45, 46, 78, 182], "lambda_1": [44, 45, 46, 78, 182], "lambda_2": [44, 45, 46, 78, 182], "squid_asymmetri": [44, 45, 46, 78, 182], "truncatedgaussiansmoothedsquar": [47, 51, 79, 181], "tgss": [47, 51, 79], "analog": 48, "tune": [48, 130, 131, 132, 133], "frequenc": [48, 67, 68, 69, 70, 71, 72, 73, 77, 96, 97, 108, 124, 125, 131, 134, 135, 138, 139, 141, 142, 143, 145, 146, 148, 149, 156, 175, 177, 181, 182, 214, 216], "_ac_stark_puls": [48, 108], "phase_incr": [48, 108, 109, 112, 156, 163], "quadratur": [48, 108, 156], "pi": [48, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 108, 114, 115, 116, 132, 133, 135, 136, 137, 138, 143, 144, 147, 148, 175, 176, 177, 180, 203, 214, 216, 219, 221], "discret": 49, "mediat": [49, 75], "coupl": [49, 182], "tunabl": [49, 220], "both": [49, 77, 84, 194, 214, 216, 219, 221], "arbitrari": [49, 96, 97, 112, 116, 158, 204, 214, 219, 221], "slot": 49, "move": [49, 76, 77, 78, 79, 80, 191, 214, 221], "being": [49, 98, 135, 184, 216, 219], "flux_puls": 49, "radian": [49, 83, 84, 98, 99, 107, 112, 116, 156, 163, 177, 203], "maximum": [54, 64, 106, 143, 144, 168, 182, 192], "up": [55, 69, 71, 74, 77, 81, 123, 129, 143, 144, 168, 182, 192, 214, 216], "hardwar": [55, 163, 184, 210, 213, 215, 216, 217, 219], "again": 55, "much": [55, 215], "why": [55, 216], "10": [55, 64, 75, 220], "except": [55, 69, 71, 87, 205, 207, 208, 209, 214, 215, 216, 218], "enumer": [56, 58, 60], "xygat": [56, 59, 99], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 220], "j": [57, 59, 63, 135, 220], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 216], "enum": [58, 60, 196, 198, 199], "qualnam": [58, 60, 198, 199], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 116, 117, 118], "clifford": [60, 99], "axi": [60, 83, 114, 116, 204, 214, 216], "xy": [60, 83, 99], "plane": [60, 83, 114], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 101], "error": [61, 135, 139, 182, 186, 200, 207, 208, 209, 214, 215, 221], "fluxmultiplexer_samplelinear": [62, 214], "flux_multiplex": 63, "linear": [63, 98, 175, 176], "multiplex": [63, 69, 71, 74, 105, 197, 214], "cross": [63, 218, 221], "talk": [63, 221], "element": [63, 131, 135, 139, 200, 214, 215, 221], "c_ij": 63, "aris": [63, 218], "a_i": [63, 96], "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": [63, 135], "spars": 63, "form": [63, 182, 214, 215, 216, 218], "xarrai": 63, "yet": [63, 192, 193, 214], "matrix_index": 63, "relev": 63, "flat": [63, 128], "np": [63, 184, 216, 219, 221], "matrix_el": 63, "experiment": 63, "r": [63, 114, 180, 220], "d": [63, 135, 175, 200, 218, 220], "everyth": [63, 221], "subject": [63, 215, 218], "1e": [64, 170, 194, 195], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 72, 105, 112], "basi": [66, 67, 68, 72, 105, 112, 116, 131, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 184, 218], "measure_customwaveform": [66, 67, 68, 70, 74, 216], "measure_const": [66, 214], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 71, 214], "probepulse_customwaveforms_nointegr": [66, 72, 214], "probe_const": 66, "shelved_measure_customwaveform": [66, 73, 214], "shelved_measure_const": [66, 214], "dispers": [67, 68, 69, 72, 74], "constant": [67, 68, 69, 72, 73, 84, 85, 104, 110, 178, 179, 180, 214, 219], "acquisition_delai": [67, 68, 69, 70, 73], "acquisit": [67, 68, 69, 70, 71, 73, 74, 151, 159, 214, 219], "acquisition_typ": [67, 68, 69, 73], "threshold": [67, 68, 69, 71, 73, 74, 161], "amplitude_i": [67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 110, 216], "amplitude_q": [67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 110, 216], "integration_length": [67, 68, 69, 70, 73, 214], "integr": [67, 68, 69, 70, 71, 73, 125, 153, 161, 162, 182, 214, 219], "integration_threshold": [67, 68, 69, 73], "integration_weights_i": [67, 68, 69, 73], "weight": [67, 68, 69, 73, 92, 93, 131, 132, 133, 135, 139, 153, 161, 214], "dtype": [67, 68, 69, 73, 132, 133, 143, 144, 175, 177, 178, 179, 180, 181, 182, 216], "float64": [67, 68, 69, 73], "integration_weights_q": [67, 68, 69, 73], "demolit": 68, "dimension": [69, 138], "len": [69, 71, 74, 135, 138, 149], "intermedi": [69, 216], "IF": 69, "center": [69, 125, 134, 135, 149, 180, 181, 182], "offset": [69, 158, 180, 182], "readouttrigg": [69, 70, 71, 74, 150, 161, 197, 215, 217], "_multiplexed_timebox": [69, 71], "multiplexedprobetimebox": [69, 71, 74, 196, 214], "probe_timebox": [69, 71, 74], "_time_trac": 69, "time_trac": [69, 70, 151], "_build_instruct": [69, 70, 71], "waveform_param": [69, 70, 71], "root_param": [69, 70, 71], "if_freq": [69, 71], "acquisitionmethod": [69, 70, 150, 153, 159, 162], "do_acquisit": [69, 71, 74], "nake": [69, 71, 74], "trigger": [69, 70, 71, 74, 159, 168, 197, 214, 219], "goe": [69, 71, 74], "maintain": [69, 71, 74], "backward": [69, 71, 74, 98], "rout": [69, 71, 74, 161], "probelin": [69, 71, 74, 215, 219], "behav": [69, 71, 74, 152, 164], "featur": [69, 71, 74, 216, 217], "mode": [69, 71, 74], "pick": [69, 71, 74], "anywher": [69, 71, 74, 161, 214], "pass": [69, 71, 74, 80, 81, 82, 214, 219], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "contrari": 70, "probl": 70, "similar": [71, 122, 214, 216], "shelv": [73, 74, 214], "surround": 73, "prx_12": [73, 74, 214], "standard": [74, 128, 221], "swap": [74, 75], "back": [74, 77, 184, 191], "roughtli": 74, "collaps": 74, "advantag": 74, "suscept": 74, "t_1": 74, "decai": 74, "_skip_overrid": 74, "exchang": 75, "invari": 75, "span": 75, "00": [75, 141], "rangl": [75, 102], "01": [75, 141], "anyth": [75, 216], "orthogon": [75, 216], "involut": 75, "_": [75, 139, 143, 148, 149], "i_": 75, "langl": 75, "undefin": [75, 215], "complex": [75, 92, 93, 94, 95, 153, 216, 219, 221], "degre": [75, 114], "freedom": [75, 219], "continuum": 75, "cancel": [75, 214], "due": [75, 77, 108, 155, 179, 215], "movemark": [75, 77, 214], "move_customwaveform": [75, 76, 78, 79, 81, 214], "move_crf_crf": [75, 214], "move_slepian_crf": [75, 214], "move_tgss_crf": 75, "detun": [76, 77, 78, 79, 80, 81, 214], "bookkeep": 77, "unknown": [77, 184, 208], "pair": [77, 158, 178, 179, 184, 216], "came": 77, "sandwich": [77, 81, 82, 214], "At": [77, 135, 139, 216], "annot": [77, 80, 218], "mark": [77, 218], "counteract": 77, "accumul": 77, "proport": 77, "sum": [77, 81, 131, 142, 158, 169, 175, 177, 181, 182, 200, 221], "complet": [77, 215], "apply_move_gate_phase_correct": [77, 214], "track": [77, 169, 192, 214, 218, 221], "right": [80, 214, 215, 218, 219, 221], "link": [80, 174, 214, 218], "noth": [80, 166, 168, 188, 190, 194, 195, 216, 218], "explicit": [80, 214, 215], "aforement": [80, 169, 192, 216], "marker": 80, "post": [80, 134, 142], "compil": [80, 82, 123, 152, 217, 218, 221], "apply_detuning_correct": 81, "level": [81, 82, 184, 215, 216, 217, 219, 221], "validate_prx": 82, "prepar": [82, 218], "conform": 82, "constraint": [82, 158, 215, 219], "unmodifi": 82, "x": [83, 84, 87, 89, 98, 99, 114, 116, 214, 216, 220], "r_": [83, 87, 112], "phi": [83, 87, 107, 112, 116, 117, 118, 177, 204, 214], "theta": [83, 87, 112, 116, 117, 118, 182, 204, 214], "co": [83, 96, 116, 132, 135, 136, 138, 143, 144, 147, 148, 175, 177], "y": [83, 99, 114, 116, 118, 214], "sin": [83, 96, 116, 133, 137, 180], "r_z": [83, 87, 107, 112, 116, 117], "r_x": 83, "dagger": 83, "around": [83, 114, 116, 135, 181, 204], "li": 83, "bloch": [83, 116, 216], "sphere": [83, 116, 216], "prxgateimplement": [83, 84, 98, 107], "prx_singlepulse_gateimplement": [83, 86, 87], "prx_customwaveform": [83, 88, 90, 92, 94, 96, 214, 216], "prx_draggaussian": 83, "prx_dragcosinerisefal": 83, "prx_customwaveformssx": [83, 89, 91, 93, 95, 214], "prx_draggaussiansx": [83, 214], "prx_dragcosinerisefallsx": [83, 214], "prx_fastdragsx": [83, 214], "prx_fastdrag": [83, 214], "prx_hddragsx": [83, 214], "prx_hddrag": [83, 214], "abc_constant_smooth": [83, 85, 107], "constant_prx_with_smooth_rise_fal": [83, 107, 110, 214], "prx_modulatedcustomwaveform": [83, 97, 214], "prx_modulateddragcosinerisefal": [83, 214], "arbitrarili": [84, 178, 179, 214], "smooth": [84, 178, 179], "rise_waveform": [84, 85, 110], "main_waveform": [84, 85, 110], "fall_waveform": [84, 85, 110], "middl": [84, 181], "limit": [84, 115, 210, 213, 214, 218, 221], "memori": [84, 214, 215], "doesn": [84, 214], "_main_puls": 84, "main": [84, 215, 216], "_rise_puls": 84, "_fall_puls": 84, "cosinefal": [85, 110, 174], "cosineris": [85, 110, 174], "iq": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 123, 124, 131, 142, 153, 158, 161, 162, 204, 210, 213, 214], "hot": [86, 87, 96], "swappabl": [86, 87, 96], "rest_of_calibration_data": [86, 87, 96], "x_pi": [86, 88, 214], "sx": [87, 93, 95, 115, 214], "manipul": [87, 216], "formula": 87, "rz_after": [87, 89, 91, 93, 95], "rz_befor": [87, 89, 91, 93, 95, 214], "sqrt": [87, 89, 114, 214], "cosinerisefallderiv": [88, 89, 97, 174], "vz": [89, 91, 93, 95], "prx_customwaveformsvz": [89, 91], "truncatedgaussian": [90, 91, 216], "tg": [90, 91], "truncatedgaussianderiv": [90, 91, 216], "gaussian": [91, 216], "scale": [92, 94, 98, 134, 135, 155, 156, 160, 215, 216], "fdi": [92, 93], "coeffici": [92, 93, 94, 95, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 182], "compute_coefs_from_frequ": [92, 93, 94, 95, 131, 132, 133, 134, 142, 143, 144], "boolean": [92, 93, 94, 95, 134, 161], "number_of_cos_term": [92, 93, 131, 132, 133], "5": [92, 93, 135, 141, 175, 216, 218, 220, 221], "suppressed_frequ": [92, 93, 94, 95, 131, 132, 133, 134, 142, 143, 144], "suppressed_interval_width": [92, 93, 131, 132, 133], "fastdragi": [92, 93, 130, 214], "fastdragq": [92, 93, 130, 214], "hd": [94, 95, 134, 140, 142, 143, 144, 145, 146, 147, 149, 214], "hdi": [94, 95], "hddragi": [94, 95, 140, 214], "hddragq": [94, 95, 140, 214], "baseband": 96, "shape": [96, 131, 132, 133, 138, 143, 144, 160, 175, 177, 178, 179, 180, 181, 182, 217], "delta": 96, "omega_i": 96, "omega_d": 96, "a_q": 96, "omega_q": 96, "omega": [96, 175], "band": [96, 97], "static": [98, 131, 134, 142, 175, 177, 181, 182, 197, 200, 214], "_single_iq_puls": [98, 214], "resonantli": 98, "x_": 98, "linearli": [98, 216], "adjust": [98, 204, 214, 215, 219], "iq_puls": [98, 214], "rx": [99, 214, 219, 221], "ry": [99, 214, 221], "xy_gat": 99, "2x2": [100, 113, 118], "gate_nam": [101, 216], "impl_class": [101, 216], "set_as_default": 101, "quantum_op_spec": [101, 216], "spec": 101, "reset_condit": [102, 219], "reset_wait": [102, 214], "__default_feedback": 103, "doubl": [103, 104], "underscor": [103, 104], "emphas": [103, 104], "fact": [103, 104], "manual": [103, 104, 177, 216], "__reset": 104, "reset": [105, 106, 156, 184, 214, 215, 216, 219], "necessari": [105, 188, 215, 216, 221], "accommod": 105, "upon": 105, "relax": [106, 214], "compar": [106, 161, 168, 214], "shot": [106, 215], "destroi": 106, "wait_box": 106, "rz_virtual": 107, "rz_acstarkshift": [107, 109], "rz_acstarkshift_cosinerisefal": 107, "rz_acstarkshift_smoothconst": [107, 214], "rz_prx_composit": [107, 214], "strong": 108, "off": [108, 214], "lead": [108, 214], "shift": [108, 155], "ac_stark_puls": 108, "ac_stark_waveform": 109, "increment": [109, 112, 156, 163, 204, 214], "techniqu": [112, 117], "oscil": [112, 163, 204], "shortest": 112, "algebra": [112, 163], "commut": [112, 204], "toward": 112, "hit": 112, "elimin": 112, "multi": 112, "hold": [112, 218], "diagon": 112, "immedi": [112, 188, 214], "conjug": 112, "alpha": [112, 175, 176], "accomplish": 112, "assumpt": [112, 182], "negat": 112, "sigma": [114, 216, 220], "_x": 114, "xz": 114, "90": [114, 220], "sxgate": [114, 214], "parametr": [116, 182, 216, 220], "euler": [116, 117], "lambda": [116, 117, 214, 216], "subsequ": [116, 218], "r_y": [116, 117], "express": [116, 131, 182, 218], "h": [116, 135], "8": [116, 141, 218], "http": [116, 218], "openqasm": 116, "com": 116, "languag": [116, 215, 218], "html": [116, 173, 214], "ugat": [116, 214], "lam": [117, 118], "decomposit": 117, "cdot": 117, "probechannelproperti": 120, "channelconfigur": [120, 126], "realchannelconfig": [120, 122, 124], "iqchannelconfig": 120, "channeldescript": [120, 210, 211], "instruction_t": 122, "uniqu": [122, 184, 215, 216], "waveform_t": 122, "add_instruct": 122, "integ": [122, 123, 154, 200, 221], "manner": 122, "instruction_duration_granular": [123, 125], "instruction_duration_min": [123, 125, 129], "compatible_instruct": [123, 125, 206], "is_iq": [123, 125], "is_virtu": [123, 125], "blocks_compon": [123, 125], "zi": 123, "hdawg": 123, "shfsg": 123, "shfqa": 123, "32": [123, 215], "16": [123, 168, 215, 220], "hack": 123, "frontend": 123, "sent": [123, 214, 215, 218], "might": [123, 215, 216, 219, 221], "duration_to_sampl": 123, "duration_to_second": 123, "duration_to_int_sampl": 123, "messag": [123, 186, 200], "check_min_sampl": 123, "close": [123, 214, 221], "test": [123, 214], "output": [123, 152, 164, 173, 184, 214, 215, 219, 221], "unaccept": 123, "round_duration_to_granular": 123, "round_up": [123, 129], "force_min_dur": [123, 129], "closest": [123, 129], "upconvers": [124, 163], "center_frequ": 125, "integration_start_dead_tim": 125, "integration_stop_dead_tim": 125, "dead": 125, "real": [126, 156, 160, 161, 182, 215], "flux_control": 127, "readout_control": 127, "intern": [127, 214, 215, 221], "channel_properti": [128, 168, 193], "largest": 129, "fourier": [130, 131, 132, 133, 135, 138, 139, 182], "ansatz": [130, 131, 132, 133], "spectrum": [130, 131, 132, 133, 134, 139], "suppressedpuls": [130, 131, 140, 142], "fastdrag": [130, 132, 133], "fast_drag": [131, 132, 133, 134, 140], "envelop": [131, 132, 133, 134, 136, 137, 141, 143, 144, 145, 146, 147, 148, 156, 214, 220], "domain": [131, 139], "suppress": [131, 134, 135, 139, 141, 142, 143, 145, 146, 148, 149], "interv": [131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 148, 158, 215, 216], "accord": [131, 139, 143, 144, 200, 221], "furthermor": 131, "similarli": [131, 214, 216], "ordinari": 131, "detail": [131, 181, 182, 184, 215, 217, 219], "seri": [131, 132, 133, 134, 135, 136, 137, 147], "width": [131, 134, 168, 180, 181], "last": [131, 219, 221], "potenti": [131, 214], "cutoff": 131, "non_timelike_attribut": [131, 142, 175, 177, 181, 182, 216], "timelik": [131, 142, 175, 177, 181, 182], "dimensionless": [131, 142, 175, 177, 181, 182], "window": [131, 142, 151, 162, 175, 177, 180, 181, 182], "invers": [131, 135, 142, 175, 177, 181, 182], "sum_": [132, 133, 135, 136, 137, 143, 144, 145, 146, 147, 148], "c_n": [132, 133, 136, 137, 139], "t_p": [132, 133, 135, 136, 137, 138, 143, 144, 147, 148], "_sampl": [132, 133, 143, 144, 175, 177, 178, 179, 180, 181, 182, 216], "sample_coord": [132, 133, 143, 144, 175, 177, 178, 179, 180, 181, 182, 216], "coordin": [132, 133, 143, 144, 175, 177, 178, 179, 180, 181, 182], "expans": [134, 135], "choos": [134, 216, 218], "neglect": [134, 142], "_normal": 134, "avoid": [134, 135, 214], "clip": 134, "re": 134, "n_arr": [135, 138], "suppressed_freq_ranges_2darr": 135, "pulse_dur": [135, 136, 137, 138, 139, 145, 146, 147, 149], "time_scaling_factor": 135, "n_points_for_integr": [135, 139], "60": [135, 139], "evalu": [135, 136, 137, 138, 139, 145, 146, 147, 154], "eq": [135, 138, 139, 142, 143, 144, 149], "a_": 135, "nm": 135, "int_": 135, "f_": [135, 175], "l": [135, 220], "hat": 135, "_n": 135, "_m": 135, "mathrm": [135, 175], "m": [135, 220], "row": 135, "column": 135, "denot": [135, 143, 144, 216], "transform": [135, 138, 139, 214, 215, 217, 218], "g_n": [135, 138], "importantli": [135, 215], "fulli": 135, "1d": [135, 138, 139], "2d": [135, 139], "give": [135, 215, 216, 218, 221], "factor": [135, 156, 160, 182, 216], "excess": 135, "small": [135, 214, 215], "integrand": [135, 139], "50": [135, 139, 218], "recommend": [135, 139, 218], "numer": [135, 139, 182], "low": [135, 139, 216], "t_arr": [136, 137, 145, 146, 147], "nth": [138, 147], "analyt": [138, 182, 220], "a7": [138, 139], "frequency_arr": 138, "tensor": 138, "dim": 138, "cartesian": 138, "number_of_cosin": 139, "weights_tupl": 139, "suppressed_freq_ranges_2d_tupl": 139, "solv": [139, 148, 149], "optim": [139, 182, 194, 214], "a5": 139, "a12": 139, "a13": 139, "effici": [139, 219], "rb": 139, "outer": 139, "appendix": [140, 218], "hddrag": [140, 143, 144], "33333333": 141, "6": [141, 218, 220], "22857143": 141, "02857143": 141, "66666667": 141, "95238095": 141, "35714286": 141, "07936508": 141, "00793651": 141, "71428571": 141, "07142857": 141, "47619048": 141, "14285714": 141, "02597403": 141, "0021645": 141, "75000000e": 141, "16666667e": 141, "83333333e": 141, "12121212e": 141, "30303030e": 141, "02": 141, "15850816e": 141, "03": 141, "82750583e": 141, "04": 141, "7": [141, 218], "77777778e": 141, "24444444e": 141, "78787879e": 141, "82828283e": 141, "70240870e": 141, "86480186e": 141, "48640249e": 141, "55400155e": 141, "0th": 141, "solve_cosine_coefs_for_hd_drag": 141, "hd_drag": [142, 143, 144], "b1": [142, 143, 144], "b2": 142, "beta_": [143, 144, 145, 146, 149], "2n": [143, 144, 145, 146, 149], "d_k": [143, 144, 147, 148], "continu": [143, 144], "2k": [143, 144], "slightli": [143, 144], "derivative_coefs_arr": [145, 146], "cosine_coefs_arr": [145, 146, 147], "even": [145, 192, 193, 214, 216, 218], "number_of_suppressed_freq": 148, "suppressed_freq_arr": 149, "b5": 149, "beta_0": 149, "ghz": 149, "realpuls": [150, 155, 210, 212, 213, 216], "multiplexediqpuls": [150, 159], "timetrac": 150, "complexintegr": [150, 161], "thresholdstatediscrimin": 150, "delay_sampl": [151, 153, 161, 162], "acquir": [151, 159, 215], "qb1__readout": 151, "strictli": [152, 215, 216], "strict": [152, 214, 215], "version": [152, 217, 218], "dd": 152, "outcom": 154, "choic": 154, "ok": [154, 156, 157, 160], "get_child_instruct": [154, 157], "child": [154, 157, 192, 193, 210, 213], "collect": [155, 215, 216], "scale_i": [156, 216], "scale_q": [156, 216], "upconvert": 156, "success": 156, "carrier": 156, "get_waveform": [156, 157, 160], "command": [157, 215, 219], "entri": [158, 216], "outsid": [158, 215, 216], "truncat": [158, 191, 214], "neg": 158, "probe_puls": 159, "feedback_signal_label": [161, 214], "transmit": 161, "field": [161, 216, 218], "duration_sampl": 162, "captur": [162, 217], "updat": [163, 214, 219], "step": [164, 182, 214], "sure": 164, "synchron": 168, "program": 168, "critic": 168, "constructor": 168, "account": [168, 182, 214], "pprint": 168, "time_unit": 168, "fix": [168, 215], "graphic": 168, "represent": [168, 200, 215], "symbol": 168, "keysview": 168, "mutat": [168, 169], "vice": [168, 169], "versa": [168, 169], "immut": [168, 169], "add_channel": 168, "channel_nam": [168, 221], "front_pad": 168, "to_dur": 168, "variabl": [168, 192, 214], "front_pad_in_second": 168, "pad_to_hard_box": 168, "pad_to_hard_box_in_second": 168, "smallest": 168, "revers": 168, "preserv": [168, 188, 215, 221], "rear": 168, "reverse_hard_box": 168, "No": [168, 214], "synchronis": 168, "break": 168, "cleanup": [168, 214], "clean": [168, 214], "thing": [168, 178, 179], "has_content_in": 168, "keep": [169, 192], "_instruct": 169, "_durat": 169, "prepend": 169, "pop": 169, "idx": [169, 191], "12": [170, 194, 195], "comp": [170, 214], "1281": 170, "visualis": [172, 214], "view": [173, 214], "browser": 173, "jupyt": 173, "notebook": 173, "ipython": 173, "core": [173, 214], "displai": [173, 214, 218], "inspect": 173, "don": [174, 218], "serial": 174, "reimport": 174, "document": [174, 214, 218], "appear": [174, 215, 218], "chirp": [174, 176, 214], "chirpimag": [174, 214], "freq_start": [175, 176], "freq_stop": [175, 176], "05": [175, 176, 217], "taper": 175, "rectangular": [175, 192], "hann": 175, "nyquist": 175, "zone": 175, "constrain": 175, "5707963267948966": 176, "imaginari": 176, "period": 177, "sinusoid": [177, 180, 181], "made": [178, 179, 200, 216, 217, 218, 221], "dummi": 179, "bug": 179, "fixm": 179, "p": [180, 220], "plateau": 180, "Its": [180, 215], "midpoint": [180, 182], "descript": [181, 200, 218], "minim": [182, 188, 214], "adiabat": [182, 220], "prior": 182, "lambda_n": 182, "tau_": 182, "acceler": 182, "reconstruct": 182, "tau": 182, "lab": 182, "interpol": 182, "v": [182, 210, 213, 214], "voltag": 182, "go": [182, 216], "advis": [182, 218], "look": [182, 216], "mathemat": [182, 217], "heavi": 182, "leakag": [182, 220], "strength": 182, "squid": [182, 214], "asymmetri": [182, 214], "_sample_normalized_slepian": 182, "coord": 182, "_t_tau": 182, "num_sampl": 182, "129": 182, "convers": [182, 216, 218], "solut": 182, "therefor": [182, 215], "scipi": [182, 214], "romb": 182, "_theta_tau": 182, "shown": [182, 214, 219], "tau_puls": 182, "quantum_op": 184, "short": [184, 194], "simpl": [184, 200, 215, 216, 220], "unambigu": [184, 215, 216], "subsystem": 184, "qumod": 184, "pictur": [184, 219], "famili": [184, 215], "plural": 184, "intent": 184, "target": [184, 214, 221], "callabl": [184, 216], "lowest": [184, 215], "docstr": [184, 214], "exact": [184, 216], "first_qubit_basis_ket": 184, "second_qubit_basis_ket": 184, "set_default_implement": [184, 216], "set_default_implementation_for_locu": [184, 216], "cal_data": 186, "impl": [186, 216], "noiseless": 188, "sync": 188, "spacer": 188, "try": [188, 214], "segmentpoint": 188, "nonsolid": 189, "nevertheless": 189, "tol": [191, 194, 195], "frac": 191, "serv": 191, "pointer": 191, "smaller": [191, 194, 195], "toler": 191, "remaind": 191, "cut_tail": 191, "cut": 191, "tail": 191, "onward": 191, "rewind": 191, "fastforward": 191, "forward": 191, "child_schedul": [192, 193], "child_compon": [192, 193], "neighborhood_compon": [192, 193, 197, 200], "component_dur": [192, 193], "is_alap": [192, 193], "respect": [192, 198, 210, 213, 215, 216], "hard": [192, 214], "rag": [192, 194, 195], "edg": [192, 214], "earliest": [192, 193], "max": 192, "combin": [192, 218], "extend_hard_boundary_in_second": 192, "computational_reson": [192, 193], "These": [192, 193, 200, 214, 215, 216, 221], "ever": [192, 193], "alap": [192, 193, 199, 200, 215, 221], "As": [192, 193, 200, 216, 219], "late": [192, 193, 199, 200], "extend_hard_boundari": 193, "incom": 193, "extens": [194, 195, 214], "reserv": 196, "resourc": 196, "schedulingstrategi": [196, 197, 198, 200, 221], "locus_compon": [197, 200, 216], "asap": [197, 199, 200, 215, 219, 221], "from_readout_trigg": 197, "readout_trigg": 197, "probe_channel": 197, "block_channel": 197, "block_dur": 197, "soon": [199, 200, 214, 219], "fragment": 200, "human": [200, 215, 216], "readabl": [200, 214, 215, 218], "union": [200, 218, 221], "rule": [200, 204, 214, 215, 216, 221], "operand": [200, 221], "pipe": [200, 221], "group": [200, 216, 221], "let": [200, 216], "a_then_b": 200, "c_then_d": 200, "set_alap": [200, 221], "abcd": 200, "abb": 200, "ccd": 200, "all_togeth": 200, "dictat": 200, "flatten": 200, "ancestor": 200, "set_asap": 200, "print": [200, 214, 218, 221], "_idx": 200, "type_hint": 202, "python": [202, 214, 216], "typehint": 202, "psi_1": 204, "psi_2": 204, "decrement": 204, "beforehand": 204, "opposit": 204, "direct": [204, 218], "playlistvalidationerror": 205, "awgschedulevalidationdata": [205, 210], "awgschedulevalidationerror": 205, "invalidinstructionerror": 205, "sampling_r": 206, "min_number_of_sampl": 206, "issue_str": 208, "encount": 208, "channel_descript": [210, 211], "device_constraint": [210, 211, 213], "minimum": [210, 213, 215], "faster": 214, "mypi": 214, "numpi": [214, 221], "inspector": 214, "render": 214, "mr": 214, "1086": 214, "bump": 214, "coco": 214, "ruff": 214, "isort": 214, "patch": 214, "issu": [214, 218], "sw": 214, "1429": 214, "deprec": 214, "usag": [214, 216], "broken": 214, "inspect_playlist": [214, 215], "miss": 214, "ifram": 214, "tag": 214, "code": [214, 216, 218, 219], "licens": [214, 217], "vulner": 214, "safe_load": 214, "harm": 214, "remot": 214, "1378": 214, "modulated_drag_crf": 214, "baseclass": 214, "packag": 214, "publish": 214, "doc": [214, 216], "footer": 214, "1392": 214, "pep": 214, "604": 214, "lint": 214, "1230": 214, "rework": 214, "delet": 214, "major": 214, "stai": 214, "register_implement": [214, 215, 216], "split": [214, 215], "seen": 214, "register_g": 214, "validate_oper": 214, "compare_oper": 214, "add_implement": 214, "validate_implement": 214, "set_default": 214, "build_quantum_op": [214, 215], "py": 214, "yield": 214, "didn": 214, "renam": 214, "crystal": 214, "star": 214, "architectur": 214, "crystal_5": 214, "star_6": 214, "mini": 214, "mini_crystal_20": 214, "crystal_20": 214, "1059": 214, "electron": [214, 216, 218], "refactor": 214, "register_gate_implement": 214, "imposs": 214, "retain": [214, 218], "rapidjson": 214, "685": 214, "previous": 214, "x90": 214, "were": 214, "though": [214, 215, 216], "codebas": 214, "467": 214, "speed": 214, "reshap": 214, "neither": [214, 216], "assing": 214, "signific": 214, "speedup": 214, "anywai": 214, "diffrenet": 214, "broader": 214, "verifi": 214, "compatibili": 214, "migrat": 214, "guid": 214, "builtin": 214, "easili": [214, 217, 221], "quantumcircuit": 214, "extract": 214, "crf_acstarkcrf": 214, "slepian_acstarkcrf": 214, "repo": 214, "organ": [214, 221], "1042": 214, "disabl": 214, "horizont": 214, "scroll": 214, "toggl": 214, "cover": 214, "concept": [214, 216, 217], "531": 214, "gitlab": 214, "public": 214, "page": [214, 217, 218], "776": 214, "514": 214, "client": [214, 215, 216, 217], "apach": [214, 218], "extlink": 214, "sphinx": 214, "916": 214, "intersphinx": 214, "665": 214, "becaus": [214, 216], "proper": 214, "realiz": [214, 220], "former": 214, "semant": [214, 215], "disturb": 214, "774": 214, "leak": 214, "web": 214, "artifact": 214, "resetwait": 214, "comfort": [214, 216], "timelin": [214, 215], "redisplai": 214, "upcom": 214, "releas": 214, "prefer": [214, 216, 218], "font": 214, "viewer": 214, "358": 214, "typo": 214, "api": [214, 216, 217, 221], "workflow": [214, 221], "meth": 214, "pulla": [214, 217, 221], "crash": 214, "discoveri": 214, "throw": 214, "sc": 214, "nonsens": 214, "mcm": 214, "cc_prx": [214, 219], "merge_dict": 214, "crf_crf": 214, "interfac": [214, 216, 218], "feedback_label": 214, "conditional_prx": 214, "hopefulli": 214, "yml": 214, "conditionalreset": 214, "mid": 214, "constant_qnd": 214, "qndness": 214, "phase_increment_befor": 214, "sign": 214, "phase_transform": 214, "fulfil": 214, "satisfi": [214, 219], "conditionalprx": 214, "accept": [214, 218], "signifi": 214, "weigth": 214, "canon": [214, 216], "whitelist": 214, "2112": 214, "write": [214, 216, 218], "1831": 214, "drag_crf_sx": 214, "drag_gaussian_sx": 214, "prx_u": 214, "prx_sx": 214, "_x_pi_puls": 214, "547": 214, "prioritis": 214, "1929": 214, "1468": 214, "programm": 214, "1925": 214, "crude": 214, "visual": [214, 215, 219], "measure_nop": 214, "validate_move_instruct": 214, "2056": 214, "pipelin": [214, 219], "overview": 215, "terminologi": 215, "deliv": 215, "send": [215, 219], "assembli": 215, "batch": 215, "summar": 215, "imag": [215, 219], "illustr": [215, 219], "visibl": 215, "microwav": [215, 217], "ambigu": 215, "machin": 215, "violat": 215, "concern": 215, "philosophi": 215, "inaccess": 215, "attempt": 215, "smart": 215, "magic": 215, "inconsist": 215, "transpar": 215, "technic": 215, "apart": 215, "few": 215, "instant": 215, "thought": [215, 219], "desir": [215, 221], "read": [215, 219, 221], "disjoint": [215, 221], "partli": 215, "figur": [215, 219], "demonstr": 215, "explain": 215, "necessarili": [215, 216, 218], "variou": [215, 216], "runtim": [215, 219, 221], "bridg": 215, "gap": 215, "repeat": [215, 221], "repetit": 215, "encod": 215, "aim": 215, "fit": [215, 218], "chunk": 215, "neat": 215, "metadata": 216, "question": [216, 221], "cnot": 216, "NOT": 216, "On": [216, 219], "hand": 216, "frozen": 216, "programmat": 216, "procedur": 216, "invok": 216, "random": 216, "benchmark": 216, "getter": 216, "qc": 216, "introduc": 216, "emphasi": 216, "def": 216, "_default": 216, "implementation_": 216, "default_prx_qb1": 216, "special_prx_qb1": 216, "my_special_prx": 216, "default_box": 216, "chain": [216, 219], "default_cz_box": 216, "pure": 216, "develop": 216, "thumb": 216, "rest": 216, "simplifi": [216, 219], "educ": 216, "__class__": 216, "__name__": 216, "subsect": 216, "relai": 216, "live": 216, "asymmetr": 216, "tri": 216, "replic": 216, "mandatori": 216, "alter": 216, "physcial": 216, "averag": 216, "mu": 216, "spread": 216, "recip": 216, "offset_coord": 216, "exp": 216, "resampl": 216, "understand": [216, 219, 220], "unitless": 216, "scalar_coeffieci": 216, "quick": [216, 217, 221], "simplest": 216, "composteg": 216, "compositehadamard": 216, "hadamard": 216, "_this_": 216, "member_prx": 216, "latter": 216, "onelin": 216, "prx_mycoolwaveform": 216, "coolwaveformi": 216, "coolwaveformq": 216, "my": 216, "cool": 216, "cz_mycoolwaveform": 216, "coolcouplerwaveform": 216, "coolqubitwaveform": 216, "measure_mycoolwaveform": 216, "preload": 216, "altogeth": 216, "snippet": 216, "cnot_matrix": 216, "cnot_op": 216, "my_build": 216, "my_cnot_impl": 216, "mycnotclass": 216, "implementation_class": 216, "access": [216, 221], "9": [217, 218, 219, 221], "18": 217, "date": [217, 218], "2025": 217, "07": 217, "high": [217, 220], "unifi": 217, "hide": 217, "But": 217, "framework": [217, 221], "machineri": 217, "standalon": 217, "librari": [217, 219], "encourag": [217, 221], "familiar": 217, "especi": [217, 221], "miscellan": 217, "pitfal": 217, "changelog": 217, "search": 217, "januari": 218, "2004": [218, 220], "www": 218, "org": 218, "AND": 218, "FOR": 218, "reproduct": 218, "distribut": 218, "shall": 218, "licensor": 218, "copyright": 218, "owner": 218, "entiti": 218, "author": 218, "grant": 218, "legal": 218, "power": 218, "indirect": 218, "manag": 218, "contract": 218, "ii": 218, "ownership": 218, "fifti": 218, "percent": 218, "outstand": 218, "iii": 218, "benefici": 218, "exercis": 218, "permiss": 218, "modif": 218, "softwar": [218, 220], "mechan": 218, "translat": 218, "media": 218, "authorship": 218, "notic": [218, 221], "editori": 218, "revis": 218, "elabor": 218, "mere": 218, "bind": 218, "thereof": 218, "contribut": 218, "intention": 218, "submit": 218, "inclus": 218, "behalf": 218, "verbal": 218, "written": 218, "commun": 218, "mail": 218, "discuss": 218, "conspicu": 218, "Not": [218, 221], "contributor": 218, "whom": 218, "incorpor": 218, "herebi": 218, "perpetu": 218, "worldwid": 218, "exclus": 218, "charg": 218, "royalti": 218, "free": [218, 220], "irrevoc": 218, "reproduc": 218, "publicli": 218, "sublicens": 218, "patent": 218, "offer": 218, "sell": 218, "claim": 218, "infring": 218, "alon": 218, "institut": 218, "litig": 218, "counterclaim": 218, "lawsuit": 218, "alleg": 218, "contributori": 218, "termin": 218, "redistribut": 218, "medium": 218, "meet": 218, "recipi": 218, "promin": 218, "trademark": 218, "pertain": 218, "along": 218, "wherev": 218, "third": 218, "parti": 218, "alongsid": 218, "addendum": 218, "constru": 218, "statement": [218, 219], "compli": 218, "submiss": 218, "notwithstand": 218, "herein": 218, "supersed": 218, "agreement": 218, "regard": 218, "trade": 218, "servic": 218, "customari": 218, "disclaim": 218, "warranti": 218, "law": 218, "agre": 218, "AS": 218, "OR": 218, "OF": 218, "kind": 218, "titl": 218, "merchant": 218, "sole": 218, "risk": 218, "liabil": 218, "event": 218, "theori": 218, "tort": 218, "neglig": 218, "deliber": 218, "grossli": 218, "liabl": 218, "damag": 218, "incident": 218, "consequenti": 218, "inabl": 218, "loss": 218, "goodwil": 218, "stoppag": 218, "failur": 218, "malfunct": 218, "commerci": 218, "fee": 218, "indemn": 218, "oblig": 218, "indemnifi": 218, "harmless": 218, "incur": 218, "assert": 218, "boilerpl": 218, "enclos": 218, "bracket": 218, "comment": 218, "easier": 218, "identif": 218, "archiv": 218, "2024": [218, 220], "complianc": 218, "govern": 218, "show": 219, "flexibl": 219, "goal": 219, "finit": 219, "condition": 219, "qccsw": 219, "excut": 219, "too": 219, "earli": 219, "facilit": 219, "travel": 219, "conditionalinstrucion": 219, "equaival": 219, "feedaback_kei": 219, "reset_qb2": 219, "set_qb3_to_1": 219, "cc_prx_qb4": 219, "2nd": [219, 220], "prx_qb3": 219, "prx_qb4": 219, "80e": [219, 221], "clariti": 219, "bottom": 219, "master": 219, "slave": 219, "compens": 219, "trigger_delai": 219, "explan": 219, "end_delai": 219, "spcecifi": 219, "trigger_mast": 219, "emit": 219, "daisi": 219, "central": 219, "cabl": 219, "eric": 220, "hyypp": 220, "\u00e4": 220, "antti": 220, "vep": 220, "inen": 220, "miha": 220, "papi": 220, "\u010d": 220, "chun": 220, "fai": 220, "chan": 220, "sinan": 220, "inel": 220, "alessandro": 220, "landra": 220, "wei": 220, "liu": 220, "\u00fc": 220, "rgen": 220, "luu": 220, "fabian": 220, "marxer": 220, "caspar": 220, "ockeloen": 220, "korppi": 220, "reduc": 220, "superconduct": 220, "processor": 220, "030353": 220, "doi": 220, "1103": 220, "prxquantum": 220, "john": 220, "martini": 220, "michael": 220, "geller": 220, "_z": 220, "phy": 220, "rev": 220, "022307": 220, "aug": 220, "2014": 220, "arxiv": 220, "1402": 220, "5467": 220, "physreva": 220, "lyon": 220, "digit": 220, "prentic": 220, "hall": 220, "edit": 220, "isbn": 220, "978": 220, "0131089891": 220, "cecilia": 220, "gisel": 220, "jarn": 220, "heurist": 220, "approach": 220, "anal": 220, "afa": 220, "29": 220, "51": 220, "57": 220, "2018": 220, "1703": 220, "06812": 220, "31527": 220, "analesafa": 220, "eyob": 220, "sete": 220, "nicola": 220, "didier": 220, "angela": 220, "chen": 220, "shobhan": 220, "kulshreshtha": 220, "riccardo": 220, "manenti": 220, "stefano": 220, "poletto": 220, "entangl": 220, "appl": 220, "024050": 220, "2021": 220, "2104": 220, "03511": 220, "physrevappli": 220, "youngkyu": 220, "sung": 220, "leon": 220, "ding": 220, "jochen": 220, "braum\u00fcller": 220, "veps\u00e4l\u00e4inen": 220, "bharath": 220, "kannan": 220, "morten": 220, "kjaergaard": 220, "ami": 220, "green": 220, "gabriel": 220, "o": 220, "samach": 220, "chri": 220, "mcnalli": 220, "david": 220, "kim": 220, "alexand": 220, "melvil": 220, "bethani": 220, "niedzielski": 220, "molli": 220, "schwartz": 220, "jonilyn": 220, "yoder": 220, "terri": 220, "orlando": 220, "simon": 220, "gustavsson": 220, "william": 220, "oliv": 220, "fidel": 220, "zz": 220, "021058": 220, "jun": 220, "2011": 220, "01261": 220, "physrevx": 220, "capabl": 221, "ask": 221, "recogn": 221, "cz_gate_impl": 221, "prx_gate_impl": 221, "measure_gate_impl": 221, "keyword": 221, "instanti": 221, "x180": 221, "y90": 221, "100e": 221, "decid": 221, "p1": 221, "p2": 221, "handi": 221, "circuit3": 221, "sub": 221, "word": 221, "slide": 221, "past": 221, "neighbour": 221, "neighbourhood": 221, "worri": 221, "advers": 221, "ruin": 221, "best": 221, "arrang": 221, "aid": 221, "discov": 221, "all_qubit": 221, "get_neighbor_locus_compon": 221, "160e": 221, "cz_schedul": 221, "forget": 221}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [119, 0, 0, "-", "playlist"], [183, 0, 0, "-", "quantum_ops"], [188, 0, 0, "-", "scheduler"], [196, 0, 0, "-", "timebox"], [201, 0, 0, "-", "utils"], [205, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "default_implementations"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 4, 1, "", "build"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 4, 1, "", "needs_calibration"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [75, 0, 0, "-", "move"], [83, 0, 0, "-", "prx"], [101, 1, 1, "", "register_implementation"], [102, 0, 0, "-", "reset"], [107, 0, 0, "-", "rz"], [114, 0, 0, "-", "sx"], [116, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"], [71, 2, 1, "", "ProbePulse_CustomWaveforms_noIntegration"], [72, 2, 1, "", "Probe_Constant"], [73, 2, 1, "", "Shelved_Measure_Constant"], [74, 2, 1, "", "Shelved_Measure_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration": [[71, 4, 1, "", "_build_instructions"], [71, 4, 1, "", "_call"], [71, 3, 1, "", "_multiplexed_timeboxes"], [71, 3, 1, "", "dependent_waves"], [71, 4, 1, "", "duration_in_seconds"], [71, 4, 1, "", "get_locus_mapping_name"], [71, 4, 1, "", "probe_timebox"], [71, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.Probe_Constant": [[72, 3, 1, "", "dependent_waves"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "wave_i"], [72, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_Constant": [[73, 3, 1, "", "dependent_waves"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "wave_i"], [73, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms": [[74, 4, 1, "", "_call"], [74, 3, 1, "", "dependent_waves"], [74, 4, 1, "", "probe_timebox"]], "iqm.pulse.gates.move": [[76, 2, 1, "", "MOVE_CRF_CRF"], [77, 2, 1, "", "MOVE_CustomWaveforms"], [78, 2, 1, "", "MOVE_SLEPIAN_CRF"], [79, 2, 1, "", "MOVE_TGSS_CRF"], [80, 2, 1, "", "MoveMarker"], [81, 1, 1, "", "apply_move_gate_phase_corrections"], [82, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[76, 3, 1, "", "coupler_wave"], [76, 3, 1, "", "parameters"], [76, 3, 1, "", "qubit_wave"], [76, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[77, 4, 1, "", "_call"], [77, 3, 1, "", "coupler_wave"], [77, 3, 1, "", "parameters"], [77, 3, 1, "", "qubit_wave"], [77, 3, 1, "", "root_parameters"], [77, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF": [[78, 3, 1, "", "coupler_wave"], [78, 3, 1, "", "parameters"], [78, 3, 1, "", "qubit_wave"], [78, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[79, 3, 1, "", "coupler_wave"], [79, 3, 1, "", "parameters"], [79, 3, 1, "", "qubit_wave"], [79, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[80, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[84, 2, 1, "", "ABC_Constant_smooth"], [85, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [86, 2, 1, "", "PRX_CustomWaveforms"], [87, 2, 1, "", "PRX_CustomWaveformsSX"], [88, 2, 1, "", "PRX_DRAGCosineRiseFall"], [89, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [90, 2, 1, "", "PRX_DRAGGaussian"], [91, 2, 1, "", "PRX_DRAGGaussianSX"], [92, 2, 1, "", "PRX_FastDrag"], [93, 2, 1, "", "PRX_FastDragSX"], [94, 2, 1, "", "PRX_HdDrag"], [95, 2, 1, "", "PRX_HdDragSX"], [96, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [97, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [98, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [99, 2, 1, "", "PrxGateImplementation"], [100, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[84, 4, 1, "", "_call"], [84, 4, 1, "", "_fall_pulse"], [84, 4, 1, "", "_main_pulse"], [84, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[85, 3, 1, "", "fall_waveform"], [85, 3, 1, "", "main_waveform"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "rise_waveform"], [85, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[86, 4, 1, "", "_get_pulse"], [86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[87, 4, 1, "", "_call"], [87, 4, 1, "", "_get_pulse"], [87, 3, 1, "", "dependent_waves"], [87, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[88, 4, 1, "", "_get_pulse"], [88, 3, 1, "", "dependent_waves"], [88, 3, 1, "", "excluded_parameters"], [88, 3, 1, "", "parameters"], [88, 3, 1, "", "wave_i"], [88, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[89, 4, 1, "", "_get_pulse"], [89, 3, 1, "", "dependent_waves"], [89, 3, 1, "", "excluded_parameters"], [89, 3, 1, "", "parameters"], [89, 3, 1, "", "wave_i"], [89, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[90, 3, 1, "", "dependent_waves"], [90, 3, 1, "", "parameters"], [90, 3, 1, "", "wave_i"], [90, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[91, 3, 1, "", "dependent_waves"], [91, 3, 1, "", "parameters"], [91, 3, 1, "", "wave_i"], [91, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[92, 3, 1, "", "dependent_waves"], [92, 3, 1, "", "parameters"], [92, 3, 1, "", "wave_i"], [92, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "parameters"], [93, 3, 1, "", "wave_i"], [93, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[94, 3, 1, "", "dependent_waves"], [94, 3, 1, "", "parameters"], [94, 3, 1, "", "wave_i"], [94, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[95, 3, 1, "", "dependent_waves"], [95, 3, 1, "", "parameters"], [95, 3, 1, "", "wave_i"], [95, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[96, 4, 1, "", "_get_pulse"], [96, 3, 1, "", "dependent_waves"], [96, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[97, 4, 1, "", "_get_pulse"], [97, 3, 1, "", "dependent_waves"], [97, 3, 1, "", "excluded_parameters"], [97, 3, 1, "", "parameters"], [97, 3, 1, "", "wave_i"], [97, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[98, 4, 1, "", "_call"], [98, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.prx.PrxGateImplementation": [[99, 4, 1, "", "_call"], [99, 4, 1, "", "clifford"], [99, 4, 1, "", "get_locus_mapping_name"], [99, 4, 1, "", "rx"], [99, 4, 1, "", "ry"]], "iqm.pulse.gates.reset": [[103, 6, 1, "", "RESET_FEEDBACK_KEY"], [104, 6, 1, "", "RESET_MEASUREMENT_KEY"], [105, 2, 1, "", "Reset_Conditional"], [106, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[105, 4, 1, "", "_call"], [105, 4, 1, "", "get_locus_mapping_name"], [105, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[106, 4, 1, "", "_call"], [106, 4, 1, "", "duration_in_seconds"], [106, 4, 1, "", "get_custom_locus_mapping"], [106, 3, 1, "", "parameters"], [106, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[108, 2, 1, "", "RZ_ACStarkShift"], [109, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [110, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [111, 2, 1, "", "RZ_PRX_Composite"], [112, 2, 1, "", "RZ_Virtual"], [113, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[108, 4, 1, "", "_ac_stark_pulse"], [108, 4, 1, "", "_call"], [108, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[109, 3, 1, "", "ac_stark_waveform"], [109, 3, 1, "", "parameters"], [109, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[110, 3, 1, "", "fall_waveform"], [110, 3, 1, "", "main_waveform"], [110, 3, 1, "", "parameters"], [110, 3, 1, "", "rise_waveform"], [110, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_PRX_Composite": [[111, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.rz.RZ_Virtual": [[112, 4, 1, "", "_call"], [112, 4, 1, "", "duration_in_seconds"], [112, 4, 1, "", "get_locus_mapping_name"], [112, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[115, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[115, 4, 1, "", "_call"], [115, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[117, 2, 1, "", "UGate"], [118, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[117, 4, 1, "", "_call"], [117, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[120, 0, 0, "-", "channel"], [130, 0, 0, "-", "fast_drag"], [140, 0, 0, "-", "hd_drag"], [150, 0, 0, "-", "instructions"], [165, 0, 0, "-", "playlist"], [166, 0, 0, "-", "schedule"], [171, 0, 0, "-", "visualisation"], [174, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[121, 2, 1, "", "ChannelConfiguration"], [122, 2, 1, "", "ChannelDescription"], [123, 2, 1, "", "ChannelProperties"], [124, 2, 1, "", "IQChannelConfig"], [125, 2, 1, "", "ProbeChannelProperties"], [126, 2, 1, "", "RealChannelConfig"], [127, 1, 1, "", "get_channel_properties"], [128, 1, 1, "", "get_channel_properties_from_station_settings"], [129, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[122, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[123, 3, 1, "", "blocks_component"], [123, 3, 1, "", "compatible_instructions"], [123, 4, 1, "", "duration_to_int_samples"], [123, 4, 1, "", "duration_to_samples"], [123, 4, 1, "", "duration_to_seconds"], [123, 3, 1, "", "instruction_duration_granularity"], [123, 3, 1, "", "instruction_duration_min"], [123, 3, 1, "", "is_iq"], [123, 3, 1, "", "is_virtual"], [123, 4, 1, "", "round_duration_to_granularity"], [123, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[124, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[125, 3, 1, "", "center_frequency"], [125, 3, 1, "", "integration_start_dead_time"], [125, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[126, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[131, 2, 1, "", "FastDrag"], [132, 2, 1, "", "FastDragI"], [133, 2, 1, "", "FastDragQ"], [134, 2, 1, "", "SuppressedPulse"], [135, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [136, 1, 1, "", "evaluate_fast_drag_i_envelope"], [137, 1, 1, "", "evaluate_fast_drag_q_envelope"], [138, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [139, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[131, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[132, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[133, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[134, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[141, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [142, 2, 1, "", "HdDrag"], [143, 2, 1, "", "HdDragI"], [144, 2, 1, "", "HdDragQ"], [145, 1, 1, "", "evaluate_hd_drag_i_envelope"], [146, 1, 1, "", "evaluate_hd_drag_q_envelope"], [147, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [148, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [149, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[142, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[143, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[144, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[151, 2, 1, "", "AcquisitionMethod"], [152, 2, 1, "", "Block"], [153, 2, 1, "", "ComplexIntegration"], [154, 2, 1, "", "ConditionalInstruction"], [155, 2, 1, "", "FluxPulse"], [156, 2, 1, "", "IQPulse"], [157, 2, 1, "", "Instruction"], [158, 2, 1, "", "MultiplexedIQPulse"], [159, 2, 1, "", "ReadoutTrigger"], [160, 2, 1, "", "RealPulse"], [161, 2, 1, "", "ThresholdStateDiscrimination"], [162, 2, 1, "", "TimeTrace"], [163, 2, 1, "", "VirtualRZ"], [164, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[151, 3, 1, "", "delay_samples"], [151, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[153, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[154, 3, 1, "", "condition"], [154, 4, 1, "", "get_child_instructions"], [154, 3, 1, "", "outcomes"], [154, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[155, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[156, 4, 1, "", "get_waveforms"], [156, 3, 1, "", "modulation_frequency"], [156, 3, 1, "", "phase"], [156, 3, 1, "", "phase_increment"], [156, 3, 1, "", "scale_i"], [156, 3, 1, "", "scale_q"], [156, 4, 1, "", "validate"], [156, 3, 1, "", "wave_i"], [156, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[157, 4, 1, "", "copy"], [157, 3, 1, "", "duration"], [157, 4, 1, "", "get_child_instructions"], [157, 4, 1, "", "get_waveforms"], [157, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[158, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[159, 3, 1, "", "acquisitions"], [159, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[160, 4, 1, "", "get_waveforms"], [160, 3, 1, "", "scale"], [160, 4, 1, "", "validate"], [160, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[161, 3, 1, "", "feedback_signal_label"], [161, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[162, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[163, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[167, 2, 1, "", "Nothing"], [168, 2, 1, "", "Schedule"], [169, 2, 1, "", "Segment"], [170, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[168, 4, 1, "", "add_channels"], [168, 4, 1, "", "append"], [168, 4, 1, "", "channels"], [168, 4, 1, "", "cleanup"], [168, 4, 1, "", "copy"], [168, 5, 1, "", "duration"], [168, 4, 1, "", "duration_in_seconds"], [168, 4, 1, "", "extend"], [168, 4, 1, "", "front_pad"], [168, 4, 1, "", "front_pad_in_seconds"], [168, 4, 1, "", "has_content_in"], [168, 4, 1, "", "items"], [168, 4, 1, "", "pad_to_hard_box"], [168, 4, 1, "", "pad_to_hard_box_in_seconds"], [168, 4, 1, "", "pprint"], [168, 4, 1, "", "reverse"], [168, 4, 1, "", "reverse_hard_box"], [168, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[169, 3, 1, "", "_duration"], [169, 3, 1, "", "_instructions"], [169, 4, 1, "", "append"], [169, 4, 1, "", "copy"], [169, 5, 1, "", "duration"], [169, 4, 1, "", "extend"], [169, 4, 1, "", "pop"], [169, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[172, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[173, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[175, 2, 1, "", "Chirp"], [176, 2, 1, "", "ChirpImag"], [177, 2, 1, "", "Cosine"], [178, 2, 1, "", "CosineFall"], [179, 2, 1, "", "CosineRise"], [180, 2, 1, "", "CosineRiseFallDerivative"], [181, 2, 1, "", "ModulatedCosineRiseFall"], [182, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[175, 4, 1, "", "_sample"], [175, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[176, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[177, 4, 1, "", "_sample"], [177, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[178, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[179, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[180, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[181, 4, 1, "", "_sample"], [181, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[182, 4, 1, "", "_sample"], [182, 4, 1, "", "_sample_normalized_slepian"], [182, 4, 1, "", "_t_tau"], [182, 4, 1, "", "_theta_tau"], [182, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[184, 2, 1, "", "QuantumOp"], [185, 6, 1, "", "QuantumOpTable"], [186, 1, 1, "", "validate_locus_calibration"], [187, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[184, 3, 1, "", "arity"], [184, 4, 1, "", "copy"], [184, 5, 1, "", "default_implementation"], [184, 3, 1, "", "defaults_for_locus"], [184, 3, 1, "", "factorizable"], [184, 4, 1, "", "get_default_implementation_for_locus"], [184, 3, 1, "", "implementations"], [184, 3, 1, "", "name"], [184, 3, 1, "", "params"], [184, 4, 1, "", "set_default_implementation"], [184, 4, 1, "", "set_default_implementation_for_locus"], [184, 3, 1, "", "symmetric"], [184, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[189, 6, 1, "", "BLOCKING"], [190, 6, 1, "", "NONSOLID"], [191, 2, 1, "", "SegmentPointer"], [192, 1, 1, "", "extend_hard_boundary"], [193, 1, 1, "", "extend_hard_boundary_in_seconds"], [194, 1, 1, "", "extend_schedule"], [195, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[191, 3, 1, "", "TOL"], [191, 4, 1, "", "cut_tail"], [191, 4, 1, "", "fastforward"], [191, 3, 1, "", "frac"], [191, 4, 1, "", "get"], [191, 3, 1, "", "idx"], [191, 4, 1, "", "next"], [191, 5, 1, "", "remainder"], [191, 4, 1, "", "rewind"], [191, 3, 1, "", "source"], [191, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[197, 2, 1, "", "MultiplexedProbeTimeBox"], [198, 2, 1, "", "SchedulingAlgorithm"], [199, 2, 1, "", "SchedulingStrategy"], [200, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[197, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[198, 3, 1, "", "HARD_BOUNDARY"], [198, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[199, 3, 1, "", "ALAP"], [199, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[200, 3, 1, "", "atom"], [200, 4, 1, "", "atomic"], [200, 3, 1, "", "children"], [200, 4, 1, "", "composite"], [200, 3, 1, "", "label"], [200, 3, 1, "", "locus_components"], [200, 3, 1, "", "neighborhood_components"], [200, 4, 1, "", "print"], [200, 3, 1, "", "scheduling"], [200, 3, 1, "", "scheduling_algorithm"], [200, 4, 1, "", "set_alap"], [200, 4, 1, "", "set_asap"], [200, 4, 1, "", "validate"]], "iqm.pulse.utils": [[202, 1, 1, "", "map_waveform_param_types"], [203, 1, 1, "", "normalize_angle"], [204, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[206, 2, 1, "", "AWGScheduleValidationData"], [207, 7, 1, "", "AWGScheduleValidationError"], [208, 7, 1, "", "InvalidInstructionError"], [209, 7, 1, "", "PlaylistValidationError"], [210, 1, 1, "", "validate_awg_and_schedule_compatibility"], [211, 1, 1, "", "validate_channel"], [212, 1, 1, "", "validate_instruction_and_wf_length"], [213, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 215, 220], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 81, 82, 100, 101, 103, 104, 113, 118, 127, 128, 129, 135, 136, 137, 138, 139, 141, 145, 146, 147, 148, 149, 170, 173, 185, 186, 187, 189, 190, 192, 193, 194, 195, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 217, 219], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 81, 82, 100, 101, 103, 104, 113, 118, 127, 128, 129, 135, 136, 137, 138, 139, 141, 145, 146, 147, 148, 149, 170, 173, 185, 186, 187, 189, 190, 192, 193, 194, 195, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 217], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 221], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 215, 216], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 81, 82, 100, 101, 103, 104, 113, 118, 216], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 170], "get_implementation_class": 65, "measur": [66, 219], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "probepulse_customwaveforms_nointegr": 71, "probe_const": 72, "shelved_measure_const": 73, "shelved_measure_customwaveform": 74, "move": [75, 81, 82], "move_crf_crf": 76, "move_customwaveform": 77, "move_slepian_crf": 78, "move_tgss_crf": 79, "movemark": 80, "apply_move_gate_phase_correct": 81, "validate_move_instruct": 82, "prx": [83, 100], "abc_constant_smooth": 84, "constant_prx_with_smooth_rise_fal": 85, "prx_customwaveform": 86, "prx_customwaveformssx": 87, "prx_dragcosinerisefal": 88, "prx_dragcosinerisefallsx": 89, "prx_draggaussian": 90, "prx_draggaussiansx": 91, "prx_fastdrag": 92, "prx_fastdragsx": 93, "prx_hddrag": 94, "prx_hddragsx": 95, "prx_modulatedcustomwaveform": 96, "prx_modulateddragcosinerisefal": 97, "prx_singlepulse_gateimplement": 98, "prxgateimplement": 99, "get_unitary_prx": 100, "register_implement": 101, "reset": [102, 103, 104], "reset_feedback_kei": 103, "reset_measurement_kei": 104, "reset_condit": 105, "reset_wait": 106, "rz": [107, 113], "rz_acstarkshift": 108, "rz_acstarkshift_cosinerisefal": 109, "rz_acstarkshift_smoothconst": 110, "rz_prx_composit": 111, "rz_virtual": 112, "get_unitary_rz": 113, "sx": 114, "sxgate": 115, "u": [116, 118], "ugat": 117, "get_unitary_u": 118, "playlist": [119, 127, 128, 129, 135, 136, 137, 138, 139, 141, 145, 146, 147, 148, 149, 165, 170, 173, 215], "channel": [120, 127, 128, 129], "channelconfigur": 121, "channeldescript": 122, "channelproperti": 123, "iqchannelconfig": 124, "probechannelproperti": 125, "realchannelconfig": 126, "get_channel_properti": 127, "get_channel_properties_from_station_set": 128, "round_duration_to_granularity_sampl": 129, "fast_drag": [130, 135, 136, 137, 138, 139], "fastdrag": 131, "fastdragi": 132, "fastdragq": 133, "suppressedpuls": 134, "compute_matrix_of_summed_fourier_transform_inner_product": 135, "evaluate_fast_drag_i_envelop": 136, "evaluate_fast_drag_q_envelop": 137, "fourier_transform_of_cos_basis_functions_as_tensor": 138, "solve_fast_coefficients_for_given_weights_and_rang": 139, "hd_drag": [140, 141, 145, 146, 147, 148, 149], "cosine_coefficients_dict": 141, "hddrag": 142, "hddragi": 143, "hddragq": 144, "evaluate_hd_drag_i_envelop": 145, "evaluate_hd_drag_q_envelop": 146, "evaluate_nth_derivative_of_basis_envelop": 147, "solve_cosine_coefs_for_hd_drag": 148, "solve_hd_drag_coefficients_from_suppressed_frequ": 149, "instruct": [150, 157, 215, 216], "acquisitionmethod": 151, "block": [152, 189], "complexintegr": 153, "conditionalinstruct": 154, "fluxpuls": 155, "iqpuls": 156, "multiplexediqpuls": 158, "readouttrigg": [159, 219], "realpuls": 160, "thresholdstatediscrimin": 161, "timetrac": 162, "virtualrz": 163, "wait": 164, "schedul": [166, 168, 170, 188, 189, 190, 192, 193, 194, 195, 215, 221], "noth": 167, "segment": 169, "visualis": [171, 173], "base": [172, 173, 216], "inspect_playlist": 173, "waveform": [174, 216], "chirp": 175, "chirpimag": 176, "cosin": 177, "cosinefal": 178, "cosineris": 179, "cosinerisefallderiv": 180, "modulatedcosinerisefal": 181, "slepian": 182, "quantum_op": [183, 185, 186, 187], "quantumop": [184, 215, 216], "quantumopt": 185, "validate_locus_calibr": 186, "validate_op_calibr": 187, "nonsolid": 190, "segmentpoint": 191, "extend_hard_boundari": 192, "extend_hard_boundary_in_second": 193, "extend_schedul": 194, "extend_schedule_new": 195, "timebox": [196, 200, 215, 221], "multiplexedprobetimebox": 197, "schedulingalgorithm": 198, "schedulingstrategi": 199, "util": [201, 202, 203, 204], "map_waveform_param_typ": 202, "normalize_angl": 203, "phase_transform": 204, "valid": [205, 207, 208, 209, 210, 211, 212, 213], "awgschedulevalidationdata": 206, "awgschedulevalidationerror": 207, "invalidinstructionerror": 208, "playlistvalidationerror": 209, "validate_awg_and_schedule_compat": 210, "validate_channel": 211, "validate_instruction_and_wf_length": 212, "validate_playlist_compat": 213, "changelog": 214, "version": 214, "9": 214, "18": 214, "0": 214, "2025": 214, "07": 214, "02": 214, "featur": [214, 221], "17": 214, "01": 214, "16": 214, "bug": 214, "fix": 214, "15": 214, "06": 214, "14": 214, "13": 214, "11": 214, "12": 214, "05": 214, "30": 214, "28": 214, "10": 214, "21": 214, "19": 214, "8": 214, "7": 214, "1": 214, "04": 214, "6": 214, "5": 214, "25": 214, "4": 214, "22": 214, "3": 214, "2": 214, "09": 214, "break": 214, "chang": 214, "03": 214, "27": 214, "26": 214, "24": 214, "20": 214, "23": 214, "08": 214, "2024": 214, "29": 214, "31": 214, "concept": 215, "class": [215, 216], "quick": 215, "custom": 216, "implement": 216, "calibr": 216, "data": 216, "more": 216, "regist": 216, "content": 217, "indic": 217, "tabl": 217, "licens": 218, "time": 219, "fast": 219, "feedback": 219, "us": 221, "creat": 221, "compos": 221, "resolv": 221, "miscellan": 221, "common": 221, "pitfal": 221}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "builder": [[4, "module-iqm.pulse.builder"]], "CircuitOperation": [[5, "circuitoperation"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[17, "compositecache"]], "CompositeGate": [[18, "compositegate"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "GateImplementation": [[20, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[31, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[33, "module-iqm.pulse.gates"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "Barrier": [[35, "barrier"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[41, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[44, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[55, "delay"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[58, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[60, "xygate"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[67, "measure-constant"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "ProbePulse_CustomWaveforms_noIntegration": [[71, "probepulse-customwaveforms-nointegration"]], "Probe_Constant": [[72, "probe-constant"]], "Shelved_Measure_Constant": [[73, "shelved-measure-constant"]], "Shelved_Measure_CustomWaveforms": [[74, "shelved-measure-customwaveforms"]], "move": [[75, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[76, "move-crf-crf"]], "MOVE_CustomWaveforms": [[77, "move-customwaveforms"]], "MOVE_SLEPIAN_CRF": [[78, "move-slepian-crf"]], "MOVE_TGSS_CRF": [[79, "move-tgss-crf"]], "MoveMarker": [[80, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[81, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[82, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[83, "module-iqm.pulse.gates.prx"]], "ABC_Constant_smooth": [[84, "abc-constant-smooth"]], "Constant_PRX_with_smooth_rise_fall": [[85, "constant-prx-with-smooth-rise-fall"]], "PRX_CustomWaveforms": [[86, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[87, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[88, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[89, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[90, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[91, "prx-draggaussiansx"]], "PRX_FastDrag": [[92, "prx-fastdrag"]], "PRX_FastDragSX": [[93, "prx-fastdragsx"]], "PRX_HdDrag": [[94, "prx-hddrag"]], "PRX_HdDragSX": [[95, "prx-hddragsx"]], "PRX_ModulatedCustomWaveForms": [[96, "prx-modulatedcustomwaveforms"]], "PRX_ModulatedDRAGCosineRiseFall": [[97, "prx-modulateddragcosinerisefall"]], "PRX_SinglePulse_GateImplementation": [[98, "prx-singlepulse-gateimplementation"]], "PrxGateImplementation": [[99, "prxgateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[100, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[101, "iqm-pulse-gates-register-implementation"]], "reset": [[102, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[103, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[104, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[105, "reset-conditional"]], "Reset_Wait": [[106, "reset-wait"]], "rz": [[107, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[108, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[109, "rz-acstarkshift-cosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[110, "rz-acstarkshift-smoothconstant"]], "RZ_PRX_Composite": [[111, "rz-prx-composite"]], "RZ_Virtual": [[112, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[113, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[114, "module-iqm.pulse.gates.sx"]], "SXGate": [[115, "sxgate"]], "u": [[116, "module-iqm.pulse.gates.u"]], "UGate": [[117, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[118, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[119, "module-iqm.pulse.playlist"], [165, "module-iqm.pulse.playlist.playlist"]], "channel": [[120, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[121, "channelconfiguration"]], "ChannelDescription": [[122, "channeldescription"]], "ChannelProperties": [[123, "channelproperties"]], "IQChannelConfig": [[124, "iqchannelconfig"]], "ProbeChannelProperties": [[125, "probechannelproperties"]], "RealChannelConfig": [[126, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[127, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[128, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[129, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "fast_drag": [[130, "module-iqm.pulse.playlist.fast_drag"]], "FastDrag": [[131, "fastdrag"]], "FastDragI": [[132, "fastdragi"]], "FastDragQ": [[133, "fastdragq"]], "SuppressedPulse": [[134, "suppressedpulse"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[135, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[136, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[137, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[138, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[139, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "hd_drag": [[140, "module-iqm.pulse.playlist.hd_drag"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[141, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "HdDrag": [[142, "hddrag"]], "HdDragI": [[143, "hddragi"]], "HdDragQ": [[144, "hddragq"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[145, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[146, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[147, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[148, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[149, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "instructions": [[150, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[151, "acquisitionmethod"]], "Block": [[152, "block"]], "ComplexIntegration": [[153, "complexintegration"]], "ConditionalInstruction": [[154, "conditionalinstruction"]], "FluxPulse": [[155, "fluxpulse"]], "IQPulse": [[156, "iqpulse"]], "Instruction": [[157, "instruction"]], "MultiplexedIQPulse": [[158, "multiplexediqpulse"]], "ReadoutTrigger": [[159, "readouttrigger"]], "RealPulse": [[160, "realpulse"]], "ThresholdStateDiscrimination": [[161, "thresholdstatediscrimination"]], "TimeTrace": [[162, "timetrace"]], "VirtualRZ": [[163, "virtualrz"]], "Wait": [[164, "wait"]], "schedule": [[166, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[167, "nothing"]], "Schedule": [[168, "schedule"]], "Segment": [[169, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[170, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[171, "module-iqm.pulse.playlist.visualisation"]], "base": [[172, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[173, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[174, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[175, "chirp"]], "ChirpImag": [[176, "chirpimag"]], "Cosine": [[177, "cosine"]], "CosineFall": [[178, "cosinefall"]], "CosineRise": [[179, "cosinerise"]], "CosineRiseFallDerivative": [[180, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[181, "modulatedcosinerisefall"]], "Slepian": [[182, "slepian"]], "quantum_ops": [[183, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[184, "quantumop"], [216, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[185, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[186, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[187, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[188, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[189, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[190, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[191, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[192, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[193, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[194, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[195, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[196, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[197, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[198, "schedulingalgorithm"]], "SchedulingStrategy": [[199, "schedulingstrategy"]], "TimeBox": [[200, "timebox"]], "utils": [[201, "module-iqm.pulse.utils"]], "iqm.pulse.utils.map_waveform_param_types": [[202, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.normalize_angle": [[203, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[204, "iqm-pulse-utils-phase-transformation"]], "validation": [[205, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[206, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[207, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[208, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[209, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[210, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[211, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[212, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[213, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[214, "changelog"]], "Version 9.18.0 (2025-07-02)": [[214, "version-9-18-0-2025-07-02"]], "Features": [[214, "features"], [214, "id1"], [214, "id5"], [214, "id6"], [214, "id7"], [214, "id8"], [214, "id9"], [214, "id11"], [214, "id14"], [214, "id15"], [214, "id16"], [214, "id17"], [214, "id20"], [214, "id23"], [214, "id28"], [214, "id29"], [214, "id30"], [214, "id31"], [214, "id32"], [214, "id33"], [214, "id37"], [214, "id39"], [214, "id41"], [214, "id42"], [214, "id45"], [214, "id46"], [214, "id49"], [214, "id51"], [214, "id54"], [214, "id55"], [214, "id58"], [214, "id59"], [214, "id60"], [214, "id63"], [214, "id64"], [214, "id67"], [214, "id70"], [214, "id73"], [214, "id76"], [214, "id79"], [214, "id81"], [214, "id84"], [214, "id87"], [214, "id91"], [214, "id93"], [214, "id94"], [214, "id95"], [214, "id101"], [214, "id107"], [214, "id112"], [214, "id114"], [214, "id115"], [214, "id117"], [214, "id120"], [214, "id123"], [214, "id125"], [214, "id128"], [214, "id129"], [214, "id130"], [214, "id131"], [214, "id134"], [214, "id135"], [214, "id137"], [214, "id140"], [214, "id141"], [214, "id142"], [214, "id143"], [214, "id144"], [214, "id145"], [214, "id146"], [214, "id147"], [214, "id150"], [214, "id152"], [214, "id155"], [214, "id157"], [214, "id158"], [214, "id161"]], "Version 9.17.0 (2025-07-01)": [[214, "version-9-17-0-2025-07-01"]], "Version 9.16.0 (2025-07-01)": [[214, "version-9-16-0-2025-07-01"]], "Bug fixes": [[214, "bug-fixes"], [214, "id2"], [214, "id10"], [214, "id18"], [214, "id19"], [214, "id36"], [214, "id40"], [214, "id56"], [214, "id92"], [214, "id98"], [214, "id99"], [214, "id100"], [214, "id102"], [214, "id110"], [214, "id111"], [214, "id116"], [214, "id118"], [214, "id119"], [214, "id121"], [214, "id151"]], "Version 9.15.0 (2025-06-17)": [[214, "version-9-15-0-2025-06-17"]], "Version 9.14.0 (2025-06-13)": [[214, "version-9-14-0-2025-06-13"]], "Version 9.13.0 (2025-06-11)": [[214, "version-9-13-0-2025-06-11"]], "Version 9.12.0 (2025-05-30)": [[214, "version-9-12-0-2025-05-30"]], "Version 9.11.0 (2025-05-28)": [[214, "version-9-11-0-2025-05-28"]], "Version 9.10.0 (2025-05-21)": [[214, "version-9-10-0-2025-05-21"]], "Version 9.9.0 (2025-05-19)": [[214, "version-9-9-0-2025-05-19"]], "Version 9.8.0 (2025-05-12)": [[214, "version-9-8-0-2025-05-12"]], "Version 9.7.1 (2025-05-12)": [[214, "version-9-7-1-2025-05-12"]], "Version 9.7.0 (2025-04-30)": [[214, "version-9-7-0-2025-04-30"]], "Version 9.6.0 (2025-04-28)": [[214, "version-9-6-0-2025-04-28"]], "Version 9.5.0 (2025-04-25)": [[214, "version-9-5-0-2025-04-25"]], "Version 9.4.0 (2025-04-22)": [[214, "version-9-4-0-2025-04-22"]], "Version 9.3.0 (2025-04-17)": [[214, "version-9-3-0-2025-04-17"]], "Version 9.2.0 (2025-04-11)": [[214, "version-9-2-0-2025-04-11"]], "Version 9.1.0 (2025-04-10)": [[214, "version-9-1-0-2025-04-10"]], "Version 9.0.0 (2025-04-09)": [[214, "version-9-0-0-2025-04-09"]], "Breaking changes": [[214, "breaking-changes"], [214, "id90"], [214, "id113"], [214, "id122"], [214, "id124"], [214, "id136"], [214, "id156"]], "Version 8.13.0 (2025-04-07)": [[214, "version-8-13-0-2025-04-07"]], "Version 8.12.0 (2025-04-03)": [[214, "version-8-12-0-2025-04-03"]], "Version 8.11.0 (2025-04-02)": [[214, "version-8-11-0-2025-04-02"]], "Version 8.10.0 (2025-04-02)": [[214, "version-8-10-0-2025-04-02"]], "Version 8.9.0 (2025-03-28)": [[214, "version-8-9-0-2025-03-28"]], "Version 8.8.0 (2025-03-28)": [[214, "version-8-8-0-2025-03-28"]], "Version 8.7.0 (2025-03-27)": [[214, "version-8-7-0-2025-03-27"]], "Version 8.6.0 (2025-03-26)": [[214, "version-8-6-0-2025-03-26"]], "Version 8.5.0 (2025-03-26)": [[214, "version-8-5-0-2025-03-26"]], "Bug fix": [[214, "bug-fix"], [214, "id38"], [214, "id57"], [214, "id80"]], "Version 8.4.0 (2025-03-21)": [[214, "version-8-4-0-2025-03-21"]], "Version 8.3.0 (2025-03-19)": [[214, "version-8-3-0-2025-03-19"]], "Version 8.2.0 (2025-03-13)": [[214, "version-8-2-0-2025-03-13"]], "Version 8.1.0 (2025-02-28)": [[214, "version-8-1-0-2025-02-28"]], "Version 8.0.0 (2025-02-27)": [[214, "version-8-0-0-2025-02-27"]], "Version 7.24.0 (2025-02-20)": [[214, "version-7-24-0-2025-02-20"]], "Version 7.23.0 (2025-02-19)": [[214, "version-7-23-0-2025-02-19"]], "Version 7.22.0 (2025-02-10)": [[214, "version-7-22-0-2025-02-10"]], "Version 7.21.0 (2025-02-07)": [[214, "version-7-21-0-2025-02-07"]], "Version 7.20.0 (2025-02-04)": [[214, "version-7-20-0-2025-02-04"]], "Version 7.19.0 (2025-02-04)": [[214, "version-7-19-0-2025-02-04"]], "Bug Fixes": [[214, "id50"]], "Version 7.18.0 (2025-02-04)": [[214, "version-7-18-0-2025-02-04"]], "Version 7.17.0 (2025-02-03)": [[214, "version-7-17-0-2025-02-03"]], "Version 7.16.0 (2025-02-03)": [[214, "version-7-16-0-2025-02-03"]], "Version 7.15.0 (2025-01-28)": [[214, "version-7-15-0-2025-01-28"]], "Version 7.14.0 (2025-01-28)": [[214, "version-7-14-0-2025-01-28"]], "Version 7.13.0 (2025-01-28)": [[214, "version-7-13-0-2025-01-28"]], "Version 7.12.0 (2025-01-27)": [[214, "version-7-12-0-2025-01-27"]], "Version 7.11.0 (2025-01-24)": [[214, "version-7-11-0-2025-01-24"]], "Version 7.10.0 (2025-01-17)": [[214, "version-7-10-0-2025-01-17"]], "Version 7.9.0 (2025-01-08)": [[214, "version-7-9-0-2025-01-08"]], "Version 7.8.0 (2025-01-02)": [[214, "version-7-8-0-2025-01-02"]], "Version 7.7.0 (2024-12-30)": [[214, "version-7-7-0-2024-12-30"]], "Version 7.6.0 (2024-12-30)": [[214, "version-7-6-0-2024-12-30"]], "Version 7.5.0 (2024-12-12)": [[214, "version-7-5-0-2024-12-12"]], "Version 7.4.0 (2024-12-10)": [[214, "version-7-4-0-2024-12-10"]], "Version 7.3.0 (2024-12-09)": [[214, "version-7-3-0-2024-12-09"]], "Version 7.2.0 (2024-12-05)": [[214, "version-7-2-0-2024-12-05"]], "Version 7.1.0 (2024-12-04)": [[214, "version-7-1-0-2024-12-04"]], "Version 7.0.0 (2024-11-29)": [[214, "version-7-0-0-2024-11-29"]], "Version 6.14.0 (2024-11-27)": [[214, "version-6-14-0-2024-11-27"]], "Version 6.13.0 (2024-11-20)": [[214, "version-6-13-0-2024-11-20"]], "Version 6.12.0 (2024-11-19)": [[214, "version-6-12-0-2024-11-19"]], "Version 6.11.0 (2024-11-18)": [[214, "version-6-11-0-2024-11-18"]], "Version 6.10.0 (2024-11-15)": [[214, "version-6-10-0-2024-11-15"]], "Version 6.9.0 (2024-11-13)": [[214, "version-6-9-0-2024-11-13"]], "Version 6.8.0 (2024-11-12)": [[214, "version-6-8-0-2024-11-12"]], "Version 6.7.0 (2024-11-12)": [[214, "version-6-7-0-2024-11-12"]], "Version 6.6.0 (2024-11-08)": [[214, "version-6-6-0-2024-11-08"]], "Version 6.5 (2024-10-31)": [[214, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[214, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[214, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[214, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[214, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[214, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[214, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[214, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[214, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[214, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[214, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[214, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[214, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[214, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[214, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[214, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[214, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[214, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[214, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[214, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[214, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[214, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[214, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[214, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[214, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[214, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[214, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[214, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[214, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[214, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[214, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[214, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[214, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[214, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[214, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[214, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[214, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[214, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[214, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[214, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[214, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[214, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[214, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[214, "version-1-0-2024-07-01"]], "Concepts and Classes": [[215, "concepts-and-classes"]], "Quick reference": [[215, "quick-reference"]], "Instructions": [[215, "instructions"]], "Schedules": [[215, "schedules"]], "TimeBoxes": [[215, "timeboxes"]], "QuantumOps": [[215, "quantumops"]], "GateImplementations": [[215, "gateimplementations"]], "Playlists": [[215, "playlists"]], "Custom gate implementations": [[216, "custom-gate-implementations"], [216, "id1"]], "GateImplementation class": [[216, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[216, "instructions-waveforms-and-calibration-data"]], "More base classes": [[216, "more-base-classes"]], "Registering gates and implementations": [[216, "registering-gates-and-implementations"]], "IQM Pulse": [[217, "iqm-pulse"]], "Contents": [[217, "contents"]], "Indices and tables": [[217, "indices-and-tables"]], "License": [[218, "license"]], "Pulse timing": [[219, "pulse-timing"]], "Measure and ReadoutTrigger": [[219, "measure-and-readouttrigger"]], "Fast feedback timing": [[219, "fast-feedback-timing"]], "References": [[220, "references"]], "Using ScheduleBuilder": [[221, "using-schedulebuilder"]], "Creating TimeBoxes": [[221, "creating-timeboxes"]], "Composing TimeBoxes": [[221, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[221, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[221, "miscellaneous-features"]], "Common pitfalls": [[221, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [75, "module-iqm.pulse.gates.move"], [83, "module-iqm.pulse.gates.prx"], [102, "module-iqm.pulse.gates.reset"], [107, "module-iqm.pulse.gates.rz"], [114, "module-iqm.pulse.gates.sx"], [116, "module-iqm.pulse.gates.u"], [119, "module-iqm.pulse.playlist"], [120, "module-iqm.pulse.playlist.channel"], [130, "module-iqm.pulse.playlist.fast_drag"], [140, "module-iqm.pulse.playlist.hd_drag"], [150, "module-iqm.pulse.playlist.instructions"], [165, "module-iqm.pulse.playlist.playlist"], [166, "module-iqm.pulse.playlist.schedule"], [171, "module-iqm.pulse.playlist.visualisation"], [172, "module-iqm.pulse.playlist.visualisation.base"], [174, "module-iqm.pulse.playlist.waveforms"], [183, "module-iqm.pulse.quantum_ops"], [188, "module-iqm.pulse.scheduler"], [196, "module-iqm.pulse.timebox"], [201, "module-iqm.pulse.utils"], [205, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "probepulse_customwaveforms_nointegration (class in iqm.pulse.gates.measure)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._multiplexed_timeboxes"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration class method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.root_parameters"]], "probe_constant (class in iqm.pulse.gates.measure)": [[72, "iqm.pulse.gates.measure.Probe_Constant"]], "dependent_waves (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_q"]], "shelved_measure_constant (class in iqm.pulse.gates.measure)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.shelved_measure_constant attribute)": [[73, "iqm.pulse.gates.measure.Shelved_Measure_Constant.wave_q"]], "shelved_measure_customwaveforms (class in iqm.pulse.gates.measure)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms"]], "_call() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.shelved_measure_customwaveforms attribute)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.dependent_waves"]], "probe_timebox() (iqm.pulse.gates.measure.shelved_measure_customwaveforms method)": [[74, "iqm.pulse.gates.measure.Shelved_Measure_CustomWaveforms.probe_timebox"]], "iqm.pulse.gates.move": [[75, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[77, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_slepian_crf (class in iqm.pulse.gates.move)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_slepian_crf attribute)": [[78, "iqm.pulse.gates.move.MOVE_SLEPIAN_CRF.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[79, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[80, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[80, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[81, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[82, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[83, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[84, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[85, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[86, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[87, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[89, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[90, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[91, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[94, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[95, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[96, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[97, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[98, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[98, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[98, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "prxgateimplementation (class in iqm.pulse.gates.prx)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation"]], "_call() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prxgateimplementation class method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prxgateimplementation method)": [[99, "iqm.pulse.gates.prx.PrxGateImplementation.ry"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[100, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[101, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[102, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[103, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[104, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[105, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[105, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[105, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[105, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[106, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[106, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[106, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[106, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[106, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[106, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[107, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[108, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[108, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[108, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[108, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[109, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[110, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_prx_composite (class in iqm.pulse.gates.rz)": [[111, "iqm.pulse.gates.rz.RZ_PRX_Composite"]], "registered_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[111, "iqm.pulse.gates.rz.RZ_PRX_Composite.registered_gates"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[112, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[112, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[112, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[112, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[112, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[113, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[114, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[115, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[115, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[115, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[116, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[117, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[117, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[117, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[118, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[119, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[120, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[121, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[122, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[122, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[123, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[123, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[124, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[124, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[125, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[125, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[126, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[126, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[127, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[128, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[129, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[130, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[131, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[131, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[132, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[132, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[133, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[133, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[134, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[134, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[135, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[136, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[137, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[138, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[139, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[140, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[141, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[142, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[142, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[143, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[143, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[144, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[144, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[145, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[146, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[147, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[148, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[149, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[150, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[151, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[151, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[151, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[152, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[153, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[153, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[154, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[154, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[154, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[154, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[154, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[155, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[155, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[156, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[156, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[156, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[156, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[157, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[157, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[157, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[157, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[157, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[157, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[158, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[158, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[159, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[159, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[159, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[160, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[160, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[160, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[160, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[160, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[161, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[161, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[161, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[162, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[162, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[163, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[163, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[164, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[165, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[166, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[167, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[168, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[168, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[168, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[169, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[169, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[169, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[169, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[169, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[169, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[169, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[169, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[169, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[170, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[171, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[172, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[173, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[174, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[175, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[175, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[175, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[176, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[176, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[177, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[177, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[177, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[178, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[178, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[179, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[179, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[180, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[180, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[181, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[181, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[181, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[182, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[182, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[182, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[182, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[182, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[182, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[183, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[184, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[184, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[184, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[184, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[184, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[184, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[184, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[185, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[186, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[187, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[188, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[189, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[190, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[191, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[191, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[191, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[191, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[191, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[191, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[191, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[191, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[191, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[191, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[191, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[191, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[192, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[193, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[194, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[195, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[196, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[197, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[197, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[198, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[198, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[198, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[199, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[199, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[199, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[200, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[200, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[200, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[200, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[200, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[200, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[200, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[200, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[201, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[202, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[203, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[204, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[205, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[206, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[207, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[208, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[209, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[210, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[211, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[212, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[213, "iqm.pulse.validation.validate_playlist_compatibility"]]}})