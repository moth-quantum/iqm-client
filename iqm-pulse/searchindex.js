Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration", "api/iqm.pulse.gates.measure.Probe_Constant", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_FastDrag", "api/iqm.pulse.gates.prx.PRX_FastDragSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_HdDrag", "api/iqm.pulse.gates.prx.PRX_HdDragSX", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_PRX_Composite", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.fast_drag", "api/iqm.pulse.playlist.fast_drag.FastDrag", "api/iqm.pulse.playlist.fast_drag.FastDragI", "api/iqm.pulse.playlist.fast_drag.FastDragQ", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "api/iqm.pulse.playlist.hd_drag", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "api/iqm.pulse.playlist.hd_drag.HdDrag", "api/iqm.pulse.playlist.hd_drag.HdDragI", "api/iqm.pulse.playlist.hd_drag.HdDragQ", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.rst", "api/iqm.pulse.gates.measure.Probe_Constant.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_FastDrag.rst", "api/iqm.pulse.gates.prx.PRX_FastDragSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_HdDrag.rst", "api/iqm.pulse.gates.prx.PRX_HdDragSX.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.rst", "api/iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_PRX_Composite.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.fast_drag.rst", "api/iqm.pulse.playlist.fast_drag.FastDrag.rst", "api/iqm.pulse.playlist.fast_drag.FastDragI.rst", "api/iqm.pulse.playlist.fast_drag.FastDragQ.rst", "api/iqm.pulse.playlist.fast_drag.SuppressedPulse.rst", "api/iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope.rst", "api/iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope.rst", "api/iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor.rst", "api/iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges.rst", "api/iqm.pulse.playlist.hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT.rst", "api/iqm.pulse.playlist.hd_drag.HdDrag.rst", "api/iqm.pulse.playlist.hd_drag.HdDragI.rst", "api/iqm.pulse.playlist.hd_drag.HdDragQ.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope.rst", "api/iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope.rst", "api/iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag.rst", "api/iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "ProbePulse_CustomWaveforms_noIntegration", "Probe_Constant", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_FastDrag", "PRX_FastDragSX", "PRX_GateImplementation", "PRX_HdDrag", "PRX_HdDragSX", "PRX_ModulatedCustomWaveForms", "PRX_ModulatedDRAGCosineRiseFall", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_PRX_Composite", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "fast_drag", "FastDrag", "FastDragI", "FastDragQ", "SuppressedPulse", "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope", "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope", "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor", "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges", "hd_drag", "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT", "HdDrag", "HdDragI", "HdDragQ", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope", "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope", "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope", "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag", "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 52, 53, 55, 58, 69, 71, 116, 117, 119, 120, 125, 126, 131, 147, 149, 154, 163, 164, 165, 191, 192, 197, 203, 207, 210, 211, 212, 213, 215, 216, 217, 218], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 179, 181, 183, 201, 211, 212, 214, 216, 217, 218], "instruct": [1, 4, 6, 16, 20, 31, 32, 35, 49, 53, 55, 69, 70, 71, 73, 75, 77, 78, 79, 81, 82, 91, 96, 103, 107, 109, 116, 119, 120, 122, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 181, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 201, 202, 205, 207, 209, 210, 211, 214, 216, 218], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 71, 77, 78, 79, 81, 82, 84, 91, 96, 103, 105, 107, 109, 116, 120, 149, 161, 162, 164, 166, 181, 188, 193, 194, 195, 196, 197, 202, 204, 211, 213, 214, 216], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 71, 75, 79, 91, 98, 99, 102, 103, 105, 109, 116, 154, 180, 181, 182, 184, 201, 211, 212, 213, 214, 217, 218], "comput": [1, 5, 6, 16, 31, 69, 75, 102, 113, 116, 120, 131, 132, 135, 136, 138, 139, 140, 141, 152, 154, 165, 166, 181, 185, 189, 190, 197, 201, 211, 212, 213, 214, 215, 218], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 73, 80, 99, 104, 111, 113, 116, 117, 127, 131, 137, 147, 162, 163, 168, 169, 171, 178, 180, 185, 193, 198, 202, 211, 213], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 73, 74, 76, 80, 85, 86, 87, 88, 89, 90, 92, 93, 95, 99, 104, 106, 111, 113, 116, 117, 127, 137, 147, 162, 163, 165, 168, 169, 171, 180, 185, 193, 197, 198, 202, 211], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 137, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 193, 194, 195, 196, 197, 198, 202, 203, 211, 212, 213, 215, 216, 218], "subpackag": [1, 33, 116, 168], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 105, 106, 107, 108, 109, 112, 114, 116, 118, 119, 120, 121, 122, 123, 128, 129, 130, 131, 137, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 194, 195, 196, 197, 203, 211, 212, 213, 214], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 112, 114, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 136, 137, 139, 140, 141, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 181, 188, 194, 195, 196, 197, 203, 211, 215, 216], "util": [2, 6, 18, 20, 211, 213], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 73, 75, 80, 96, 102, 103, 104, 105, 113, 117, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 169, 179, 180, 181, 185, 197, 198, 202, 211, 213], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 105, 109, 139, 151, 211, 213], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 71, 75, 96, 102, 103, 108, 112, 114, 164, 174, 181, 189, 190, 195, 197, 207, 210, 211, 212, 213, 215, 216, 217, 218], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 137, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 193, 194, 195, 196, 197, 198, 202, 203, 211, 212, 213, 217, 218], "A": [3, 6, 11, 14, 37, 69, 71, 132, 149, 172, 181, 185, 191, 192, 194, 197, 199, 211, 212, 213, 214, 215, 216, 217, 218], "b": [3, 14, 55, 69, 71, 137, 185, 191, 192, 197, 215], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 106, 107, 120, 122, 131, 165, 181, 211, 218], "merg": [3, 6, 18, 189], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 75, 84, 132, 136, 181, 189, 197, 211, 212, 213, 216, 218], "dictionari": [3, 58, 138, 213], "recurs": [3, 6, 197, 212, 218], "leav": 3, "origin": [3, 11, 15, 20, 165, 166, 211, 215], "unchang": [3, 165], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 109, 110, 112, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 188, 189, 190, 191, 192, 194, 197, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 213, 218], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 71, 75, 83, 84, 94, 98, 103, 109, 124, 128, 139, 165, 172, 174, 178, 179, 181, 182, 189, 190, 191, 192, 194, 197, 210, 211, 213], "anoth": [3, 6, 35, 49, 75, 77, 115, 181, 191, 192, 211, 213], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 106, 107, 120, 122, 126, 128, 129, 130, 131, 139, 140, 141, 165, 181, 188, 189, 190, 211], "whether": [3, 6, 13, 20, 79, 98, 120, 126, 131, 189, 190, 213, 215, 218], "also": [3, 6, 11, 17, 18, 19, 20, 31, 35, 48, 49, 55, 75, 78, 85, 86, 95, 96, 102, 103, 105, 108, 112, 114, 119, 165, 181, 185, 189, 190, 192, 197, 201, 211, 213, 215, 216], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 103, 106, 107, 154, 165, 166, 181, 183, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 208, 210, 211, 213], "empti": [3, 6, 11, 18, 63, 69, 70, 71, 158, 165, 181, 211, 213], "size": [3, 13, 213], "valu": [3, 6, 11, 13, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 71, 74, 76, 85, 86, 87, 88, 89, 90, 92, 93, 95, 106, 131, 132, 139, 140, 141, 149, 153, 155, 157, 158, 161, 172, 177, 184, 195, 196, 211, 212, 213, 218], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 75, 78, 84, 85, 86, 95, 96, 102, 108, 112, 114, 120, 125, 128, 131, 132, 135, 136, 138, 139, 148, 152, 155, 158, 165, 166, 170, 171, 172, 174, 177, 178, 179, 188, 190, 194, 197, 207, 211, 212, 213, 215, 216, 218], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 71, 75, 78, 79, 81, 83, 84, 85, 86, 91, 94, 95, 96, 97, 98, 102, 103, 105, 109, 110, 112, 114, 115, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 154, 157, 165, 166, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 188, 189, 190, 191, 192, 194, 197, 199, 200, 201, 208, 210, 211, 213], "copi": [3, 6, 11, 78, 154, 165, 166, 181, 215], "content": [3, 6, 7, 11, 120, 154, 165, 166, 181, 188, 196, 197, 211, 212, 213, 215, 218], "take": [3, 7, 11, 20, 37, 49, 94, 165, 178, 179, 181, 211, 213, 216, 218], "preced": [3, 34, 35, 55, 109, 201], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 91, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 109, 110, 112, 114, 115, 119, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 157, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 203, 208, 210, 211, 213, 215], "tool": [4, 185, 188, 214], "build": [4, 6, 7, 18, 20, 69, 70, 71, 78, 83, 84, 85, 86, 194, 197, 213], "class": [4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 137, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 193, 194, 195, 196, 197, 202, 203, 211, 214, 215], "inherit": [4, 10, 16, 18, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 73, 75, 80, 83, 84, 85, 86, 91, 94, 95, 99, 102, 103, 104, 105, 109, 111, 113, 117, 127, 137, 147, 163, 171, 180, 185, 193, 202, 211, 213], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 79, 211], "schedulebuild": [4, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 109, 112, 114, 197, 211, 212, 213, 214], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 112, 114, 211, 212, 213, 216, 218], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 105, 106, 107, 108, 109, 112, 114, 119, 125, 152, 165, 181, 182, 183, 190, 194, 195, 196, 197, 211, 212, 213, 215, 218], "locu": [5, 6, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 112, 114, 181, 183, 194, 197, 211, 212, 213, 216, 218], "arg": [5, 6, 11, 20, 31, 35, 48, 49, 75, 102, 103, 105, 213], "factori": [5, 6, 120, 122, 152, 181, 194, 197], "implement": [5, 6, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 105, 106, 107, 108, 109, 112, 114, 128, 131, 165, 181, 183, 184, 201, 211, 212, 214, 216, 217, 218], "object": [5, 6, 11, 17, 32, 118, 119, 120, 136, 148, 154, 165, 166, 181, 188, 197, 203, 211, 213, 215], "specif": [5, 6, 18, 20, 31, 33, 34, 35, 48, 49, 53, 75, 96, 102, 103, 105, 109, 119, 131, 165, 179, 181, 203, 207, 211, 212, 213, 215, 218], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 73, 75, 91, 98, 99, 101, 102, 103, 105, 109, 180, 181, 182, 183, 184, 197, 203, 211, 212, 213, 214, 216, 218], "appli": [5, 6, 37, 49, 55, 73, 75, 77, 78, 96, 103, 154, 181, 213, 215, 216, 218], "part": [5, 6, 20, 81, 158, 173, 175, 176, 177, 178, 181, 188, 197, 211, 212, 213, 215, 216, 218], "qpu": [5, 6, 20, 21, 35, 63, 161, 181, 189, 193, 197, 211, 212, 213, 218], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 75, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 109, 111, 113, 128, 139, 146, 172, 174, 178, 179, 181, 185, 189, 190, 191, 192, 197, 211, 213, 217], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 105, 109, 128, 132, 139, 140, 141, 142, 143, 144, 145, 146, 172, 174, 178, 179, 189, 190, 197, 211, 213, 217], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 71, 79, 103, 109, 181, 211, 212, 213, 214, 216, 218], "attribut": [5, 6, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 105, 106, 107, 108, 109, 112, 114, 119, 120, 121, 122, 123, 128, 129, 130, 131, 137, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 194, 195, 196, 197, 203, 211, 213, 215, 216], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 112, 114, 118, 119, 120, 121, 122, 123, 128, 129, 130, 131, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 181, 188, 194, 195, 196, 197, 203, 211, 213, 218], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 105, 106, 107, 108, 109, 112, 114, 119, 120, 124, 128, 139, 148, 150, 151, 152, 158, 159, 165, 170, 172, 174, 178, 179, 181, 182, 183, 189, 190, 191, 192, 194, 197, 210, 213], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 63, 69, 70, 71, 103, 120, 122, 124, 136, 146, 151, 152, 153, 154, 155, 156, 157, 165, 181, 183, 194, 197, 199, 201, 203, 213], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 71, 75, 102, 103, 105, 131, 155, 164, 165, 179, 181, 189, 190, 194, 197, 211, 212, 213, 215, 218], "inform": [5, 6, 32, 79, 181, 211, 212, 213, 215, 216, 218], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 71, 74, 75, 76, 82, 102, 103, 106, 107, 120, 125, 128, 129, 130, 139, 140, 141, 155, 161, 179, 181, 189, 190, 194, 197, 211, 212, 213, 218], "qubit": [5, 6, 11, 12, 13, 14, 15, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 91, 96, 99, 103, 104, 105, 109, 111, 113, 179, 181, 189, 190, 211, 212, 213, 216, 217, 218], "reson": [5, 73, 74, 75, 76, 77, 78, 105, 114, 120, 189, 190, 201, 211, 212, 217, 218], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 75, 102, 103, 109, 181, 189, 190, 211, 212, 213, 215, 216, 218], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 71, 84, 103, 105, 109, 131, 181, 211, 213, 218], "valid": [5, 6, 9, 73, 79, 151, 153, 154, 157, 165, 183, 184, 197, 203, 211, 218], "op_tabl": [5, 6, 9, 11, 18, 38, 39, 102, 108, 112, 114, 213], "against": [5, 6, 158, 184, 215, 218], "tabl": [5, 7, 9, 11, 12, 13, 119, 182, 211], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 75, 115, 127, 137, 171, 181, 182, 211, 212, 213, 215], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 105, 106, 107, 109, 112, 114, 180, 182, 183, 211, 214, 218], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 71, 79, 103, 119, 132, 135, 136, 138, 144, 151, 153, 154, 157, 165, 181, 194, 197, 207, 211, 212, 213, 215, 218], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 98, 109, 120, 131, 136, 155, 165, 189, 211, 212, 213, 216, 218], "rais": [5, 6, 9, 61, 79, 98, 120, 151, 153, 154, 157, 172, 181, 183, 184, 199, 204, 205, 206, 211, 212], "valueerror": [5, 6, 9, 79, 98, 120, 151, 153, 154, 157, 181, 183, 184, 199], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 109, 111, 113, 120, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 155, 157, 158, 165, 166, 167, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 188, 189, 190, 191, 192, 197, 201, 207, 210, 211, 212, 213, 214, 215, 216, 218], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 102, 103, 106, 107, 108, 109, 112, 114, 128, 139, 172, 174, 178, 179, 181, 183, 184, 211, 212, 218], "chip_topologi": [6, 20, 63, 103, 124, 125, 213, 218], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 71, 72, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 102, 103, 105, 109, 118, 119, 120, 121, 122, 123, 149, 152, 153, 154, 160, 164, 165, 166, 185, 189, 190, 191, 192, 194, 195, 197, 207, 208, 210, 211, 212, 213, 216, 218], "component_channel": 6, "out": [6, 11, 83, 85, 211, 212, 213, 215, 216], "individu": [6, 54, 181, 212, 215], "encapsul": [6, 20, 33, 79, 218], "known": [6, 7, 61, 98, 165, 179, 181, 182, 184, 213], "op": [6, 7, 12, 13, 16, 18, 20, 98, 181, 182, 183, 184], "them": [6, 11, 12, 70, 94, 103, 109, 181, 197, 211, 213, 214, 218], "topologi": [6, 125, 218], "properti": [6, 11, 20, 73, 96, 117, 119, 120, 124, 125, 165, 166, 181, 188, 190, 191, 192, 211, 218], "quantumopt": [6, 11, 12, 13, 184, 211, 213], "opcalibrationdatatre": [6, 184], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 106, 107, 109, 119, 128, 139, 148, 172, 174, 178, 179, 181, 183, 184, 203, 207, 210, 211, 212], "tree": [6, 8, 20, 125, 183, 184], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 71, 91, 102, 103, 109, 124, 125, 213], "chip": [6, 11, 125, 211], "deriv": [6, 96, 128, 131, 137, 138, 139, 140, 141, 142, 143, 144, 146, 177, 179, 211, 213, 215], "chad": [6, 181], "channelproperti": [6, 20, 117, 122, 124, 126, 165, 190, 191, 192, 208, 210], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 69, 70, 71, 91, 98, 102, 109, 119, 125, 128, 136, 138, 139, 151, 165, 172, 174, 178, 179, 181, 182, 190, 197, 199, 211, 213], "configur": [6, 7, 118, 121, 123, 207, 210, 215], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 71, 77, 78, 81, 94, 96, 102, 105, 109, 114, 120, 146, 152, 160, 201, 211, 212, 213, 216], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 74, 75, 76, 152, 181, 211, 213], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 71, 72, 102, 148, 156, 165, 194, 211, 216], "respons": [6, 120, 123, 213, 215, 216], "_cach": 6, "gateimplement": [6, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 73, 75, 80, 91, 98, 99, 102, 103, 104, 105, 109, 111, 113, 181, 183, 197, 211, 214, 216, 218], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 71, 75, 102, 103, 105, 136, 165, 197, 211, 213], "The": [6, 11, 12, 17, 18, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 73, 75, 77, 80, 81, 84, 94, 96, 98, 99, 100, 102, 103, 104, 105, 108, 109, 111, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 153, 158, 160, 165, 170, 172, 174, 175, 176, 177, 178, 179, 181, 185, 189, 190, 191, 192, 197, 207, 209, 210, 211, 212, 213, 215, 216, 218], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 71, 73, 75, 103, 105, 109, 119, 128, 139, 154, 155, 158, 165, 172, 174, 177, 178, 179, 181, 189, 190, 191, 192, 197, 207, 210, 211, 212, 213, 215, 216, 218], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 71, 74, 75, 76, 77, 81, 82, 96, 106, 107, 126, 129, 130, 133, 134, 136, 140, 141, 142, 143, 144, 153, 158, 172, 174, 175, 176, 177, 178, 179, 190, 197, 207, 210, 211, 212, 213, 215, 216, 218], "structur": [6, 211], "composite_cach": 6, "compositeg": [6, 16, 17, 36, 37, 38, 39, 99, 102, 104, 108, 111, 112, 113, 114, 211, 213], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 71, 75, 81, 84, 91, 96, 102, 103, 105, 109, 112, 114, 189, 194, 195, 196, 211, 213, 214, 216], "flush": [6, 17, 211], "whenev": [6, 17, 69, 71, 211], "inject": [6, 211], "_channel_to_compon": 6, "self": [6, 11, 18, 19, 20, 38, 39, 48, 49, 69, 70, 71, 85, 86, 95, 96, 102, 103, 108, 112, 114, 165, 181, 188, 197, 212, 213], "invert": 6, "algorithm": [6, 185, 189, 191, 195, 197, 211, 213, 218], "perform": [6, 49, 150, 158, 165, 215], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 52, 55, 58, 60, 63, 69, 70, 71, 73, 75, 77, 81, 83, 84, 85, 86, 91, 94, 95, 96, 98, 100, 101, 102, 103, 105, 109, 119, 120, 128, 131, 136, 138, 139, 153, 155, 156, 158, 161, 165, 171, 172, 174, 175, 176, 177, 178, 179, 181, 185, 188, 189, 191, 192, 195, 197, 211, 212, 213, 215, 216, 218], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 83, 84, 96, 100, 101, 102, 103, 105, 108, 109, 112, 113, 114, 119, 120, 128, 131, 132, 136, 138, 139, 146, 149, 158, 160, 161, 164, 165, 170, 172, 174, 176, 178, 179, 181, 189, 190, 195, 197, 201, 207, 210, 211, 212, 213, 214, 215, 216, 217], "determin": [6, 32, 189, 197, 212, 215, 218], "block": [6, 35, 37, 49, 69, 70, 71, 96, 102, 103, 120, 147, 161, 164, 187, 189, 190, 194, 197, 211, 212, 216, 218], "associ": [6, 11, 69, 71, 103, 119, 120, 156, 158, 213, 215, 216], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 73, 74, 75, 76, 82, 96, 102, 106, 107, 120, 165, 175, 176, 179, 181, 188, 197, 211, 212, 215, 216, 217, 218], "ar": [6, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 71, 74, 75, 76, 80, 82, 84, 85, 86, 95, 106, 107, 109, 113, 119, 120, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 146, 153, 155, 158, 165, 166, 172, 174, 177, 178, 179, 181, 184, 188, 189, 190, 191, 192, 195, 196, 197, 207, 210, 211, 212, 213, 214, 215, 216, 218], "includ": [6, 9, 17, 19, 69, 70, 71, 75, 83, 84, 94, 119, 131, 181, 197, 211, 212, 213, 215], "non": [6, 11, 18, 20, 63, 68, 69, 71, 99, 103, 128, 131, 139, 172, 174, 178, 179, 199, 213, 215, 218], "certain": [6, 19, 48, 49, 85, 86, 95, 120, 131, 213, 218], "virtual": [6, 37, 49, 75, 77, 78, 103, 109, 114, 120, 211, 216, 218], "do": [6, 9, 11, 32, 63, 109, 111, 120, 165, 171, 174, 189, 201, 211, 212, 213, 215, 218], "just": [6, 11, 17, 18, 31, 69, 71, 84, 102, 181, 197, 211, 213], "themselv": [6, 70, 212, 213], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 71, 72, 103, 122, 148, 156, 190, 194, 211, 213], "_require_scheduling_in_second": 6, "requir": [6, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 74, 75, 76, 82, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 101, 103, 106, 107, 109, 120, 128, 139, 172, 174, 176, 178, 179, 181, 183, 184, 194, 201, 207, 210, 211, 212, 213, 215], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 73, 103, 105, 109, 120, 128, 132, 136, 139, 165, 172, 174, 178, 179, 188, 190, 191, 192, 211, 213, 216, 218], "instead": [6, 20, 77, 161, 189, 211, 212, 213, 216, 218], "sampl": [6, 20, 32, 77, 120, 122, 123, 126, 128, 129, 130, 131, 139, 140, 141, 148, 149, 153, 154, 155, 159, 161, 165, 166, 172, 174, 175, 176, 177, 178, 179, 189, 190, 194, 207, 210, 212, 213, 214], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 71, 75, 81, 84, 85, 86, 95, 96, 102, 103, 105, 108, 109, 112, 114, 119, 120, 128, 135, 139, 149, 151, 152, 154, 155, 158, 160, 164, 165, 170, 172, 174, 178, 179, 181, 185, 187, 191, 192, 197, 201, 211, 212, 213, 216, 218], "happen": [6, 73, 77, 109, 161, 176, 185, 197, 212, 213], "reason": [6, 17, 84, 179, 197, 205, 212, 213, 215], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 153, 166, 172, 173, 177, 179, 181, 189, 195, 196, 197, 213, 215, 216, 217, 218], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 73, 75, 78, 84, 91, 102, 109, 158, 165, 181, 190, 196, 197, 211, 213, 215, 216], "rate": [6, 32, 77, 120, 123, 126, 153, 154, 165, 189, 190, 207, 210, 213, 214], "uhfqa": [6, 120], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 73, 80, 84, 89, 90, 92, 93, 94, 104, 105, 111, 112, 113, 114, 115, 120, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 172, 173, 174, 177, 178, 179, 189, 197, 213, 215, 216, 217, 218], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 71, 75, 81, 96, 102, 103, 126, 132, 140, 141, 146, 155, 165, 171, 181, 184, 189, 190, 197, 201, 211, 212, 213, 215, 216, 218], "granular": [6, 55, 120, 126, 155, 165, 190, 203, 207, 210, 211, 212, 216], "some": [6, 17, 18, 53, 113, 128, 139, 171, 172, 174, 178, 179, 191, 192, 197, 211, 212, 213, 218], "mix": 6, "station": [6, 37, 79, 120, 125, 181, 211, 212], "ro": 6, "devic": [6, 216], "vendor": 6, "than": [6, 11, 103, 165, 181, 188, 191, 192, 207, 210, 211], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 75, 81, 96, 165, 204, 207, 210, 211, 216], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 97, 110, 115, 128, 132, 152, 165, 181, 182, 212, 213, 215, 216], "inject_calibr": [6, 211], "partial_calibr": 6, "new": [6, 11, 14, 17, 98, 165, 181, 189, 190, 191, 192, 194, 197, 211, 212, 213], "chang": [6, 17, 18, 20, 63, 109, 154, 160, 181, 188, 201, 213, 215, 216], "after": [6, 63, 84, 86, 88, 90, 93, 94, 109, 122, 153, 161, 187, 188, 189, 201, 211, 216, 218], "initialis": [6, 19, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103], "invalid": [6, 205], "gate_implement": [6, 17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 73, 80, 99, 104, 111, 113], "affect": [6, 11, 35, 69, 109, 165, 166, 181, 197, 211, 216], "loci": [6, 11, 24, 69, 103, 181, 213, 218], "factoriz": [6, 69, 102, 103, 181, 211], "its": [6, 7, 17, 18, 20, 33, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 74, 75, 76, 82, 106, 107, 125, 131, 154, 155, 165, 166, 175, 176, 181, 190, 191, 192, 195, 197, 211, 212, 213, 215, 218], "wa": [6, 37, 75, 78, 179, 211, 215, 216, 218], "must": [6, 9, 11, 12, 20, 37, 49, 63, 120, 126, 136, 146, 165, 166, 179, 181, 197, 211, 213, 215], "doe": [6, 11, 37, 49, 61, 69, 71, 79, 103, 153, 155, 161, 181, 211, 212, 213, 215, 216, 218], "all": [6, 11, 12, 15, 19, 20, 27, 28, 29, 30, 31, 32, 35, 49, 55, 60, 69, 70, 71, 73, 78, 83, 84, 94, 96, 103, 109, 120, 125, 126, 128, 139, 151, 153, 154, 157, 160, 165, 166, 172, 174, 178, 179, 185, 189, 195, 207, 210, 211, 212, 213, 214, 215, 216, 218], "found": [6, 11, 18, 38, 39, 61, 165, 181], "actual": [6, 37, 55, 69, 71, 129, 130, 140, 141, 172, 174, 175, 176, 177, 178, 179, 189, 207, 210, 211, 213, 216, 218], "previou": [6, 211, 216], "validate_calibr": 6, "check": [6, 13, 120, 207, 210, 211], "match": [6, 63, 146, 165, 166, 207, 209, 210, 211, 218], "someth": [6, 19, 69, 70, 120, 151, 153, 154, 157, 183, 184, 201], "wrong": [6, 183, 184, 211], "get_drive_channel": [6, 218], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 81, 82, 102, 105, 106, 107, 108, 112, 114, 120, 126, 128, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 154, 165, 166, 170, 181, 190, 197, 200, 207, 210, 212, 213, 218], "exist": [6, 18, 61, 98, 102, 108, 112, 114, 165, 211, 212, 213, 218], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 71, 85, 86, 87, 88, 89, 90, 92, 93, 115, 128, 135, 139, 171, 178, 197, 211, 212, 213, 215, 216], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 71, 122, 211, 213], "belong": [6, 69, 71, 211], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 71, 100, 101, 102, 158, 211, 214, 218], "signal": [6, 16, 37, 69, 71, 150, 158, 159, 175, 176, 178, 211, 214, 216, 217], "between": [6, 16, 53, 55, 69, 73, 75, 77, 79, 103, 151, 165, 177, 179, 185, 212, 213, 216], "sourc": [6, 75, 188, 211, 215, 216], "destin": [6, 216], "either": [6, 35, 109, 160, 197, 211, 212, 215], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 85, 86, 95, 102, 108, 112, 114, 165, 166, 188, 211, 212, 213, 215], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 211, 216], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 71, 91, 102, 109, 119, 124, 125, 181, 188, 211, 213, 216, 218], "node": [6, 20], "receiv": [6, 158, 215, 216], "bit": [6, 37, 211, 216], "which": [6, 11, 15, 20, 35, 48, 69, 75, 81, 105, 109, 131, 132, 133, 134, 135, 136, 142, 143, 144, 165, 166, 173, 174, 178, 179, 181, 189, 197, 201, 211, 212, 213, 214, 215, 216, 218], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 106, 107, 109, 113, 119, 120, 126, 128, 131, 132, 135, 136, 139, 146, 165, 172, 174, 178, 179, 194, 199, 211, 212, 213, 214, 215, 218], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 71, 72, 101, 102, 109, 120, 181, 190, 211, 212, 213, 214, 218], "result": [6, 11, 17, 37, 69, 70, 71, 78, 102, 109, 136, 150, 156, 158, 165, 211, 212, 215, 218], "support": [6, 33, 37, 63, 69, 71, 103, 177, 179, 199, 207, 210, 211, 212, 213, 215, 216], "fast": [6, 48, 69, 71, 89, 90, 100, 101, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 158, 211, 214, 217, 218], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 20], "impl_nam": [6, 11, 18, 20, 98, 183, 211, 213], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 74, 75, 76, 82, 106, 107, 120, 181], "request": [6, 11, 18, 20, 55, 91, 121, 123, 211, 212, 218], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 70, 131, 160, 211], "neighbor": [6, 189, 190, 197], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73, 74, 75, 76, 103, 179, 181, 189, 190, 197, 211, 212, 213, 217, 218], "ad": [6, 11, 17, 69, 71, 78, 119, 165, 185, 189, 190, 211, 213, 218], "separ": [6, 18, 20, 32, 102, 108, 112, 114, 211, 212, 215, 218], "resolut": [6, 197, 218], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 84, 91, 96, 97, 105, 106, 109, 111, 152, 153, 160, 172, 173, 174, 178, 181, 201, 211, 212, 213, 218], "Will": [6, 55, 195], "iter": [6, 9, 11, 12, 20, 63, 79, 103, 126, 165, 166, 181, 194, 197, 218], "wait": [6, 35, 37, 55, 73, 77, 102, 103, 120, 147, 149, 164, 165, 187, 189, 211, 212, 216, 218], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 105, 106, 107, 109, 120, 126, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 149, 151, 152, 153, 154, 155, 156, 157, 160, 161, 164, 165, 166, 172, 174, 175, 176, 177, 178, 179, 185, 188, 189, 190, 191, 192, 194, 197, 207, 210, 211, 212, 213, 216, 218], "round": [6, 55, 120, 126, 211, 216, 218], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 71, 74, 76, 85, 86, 87, 88, 89, 90, 92, 93, 95, 98, 106, 120, 122, 126, 131, 165, 181, 211, 213], "everi": [6, 20, 153, 207, 210, 211, 213, 218], "guarante": [6, 55, 212], "idl": [6, 103, 161, 165, 211], "cannot": [6, 17, 149, 165, 197, 211, 213, 215, 216], "replac": [6, 11, 20, 98, 149, 161, 211, 215], "dynam": [6, 161, 211], "decoupl": [6, 161, 211], "sequenc": [6, 9, 11, 12, 16, 21, 75, 108, 149, 161, 162, 166, 170, 181, 188, 197, 201, 211, 212, 214, 216, 218], "thei": [6, 11, 18, 19, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 109, 113, 119, 120, 165, 166, 181, 197, 207, 210, 211, 212, 213, 216, 218], "treat": [6, 189, 197, 218], "remain": [6, 185, 188, 201, 215], "align": [6, 212, 216, 218], "time": [6, 11, 20, 37, 53, 55, 69, 70, 73, 75, 77, 82, 96, 103, 107, 109, 120, 122, 126, 132, 133, 134, 136, 142, 143, 144, 149, 154, 158, 164, 165, 166, 175, 176, 179, 185, 188, 189, 191, 192, 197, 211, 212, 213, 214, 218], "dure": [6, 55, 75, 120, 131, 139, 149, 164, 175, 176, 179, 197, 212, 218], "particular": [6, 11, 20, 23, 24, 25, 183, 215, 216, 218], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 105, 106, 107, 109, 158, 161, 181, 197, 212, 213, 215, 216], "thu": [6, 32, 73, 81, 109, 131, 135, 212, 216], "less": [6, 11, 185, 211], "space": [6, 13, 14, 15, 179, 216], "side": [6, 34, 35, 120, 191, 192, 212], "todo": [6, 37, 63, 69, 71, 120, 167], "For": [6, 11, 14, 17, 23, 24, 69, 120, 135, 165, 172, 181, 211, 212, 213, 215, 216, 218], "now": [6, 63, 109, 211], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 71, 75, 78, 103, 119, 132, 136, 155, 165, 181, 189, 190, 194, 197, 210, 212, 213, 215, 216, 218], "benefit": 6, "exa": [6, 20, 176, 199, 211, 213, 214, 218], "sweep": 6, "over": [6, 7, 12, 69, 71, 132, 136, 165, 211], "In": [6, 7, 11, 18, 37, 53, 55, 69, 70, 71, 73, 77, 96, 103, 149, 154, 158, 165, 181, 189, 211, 212, 213, 215, 216, 218], "futur": 6, "gener": [6, 11, 20, 69, 70, 71, 96, 109, 136, 170, 197, 211, 213, 215], "should": [6, 18, 20, 37, 49, 69, 70, 71, 81, 100, 101, 102, 108, 112, 114, 119, 120, 131, 132, 136, 179, 181, 185, 189, 190, 211, 213, 215, 216], "experi": [6, 11, 60, 181, 211], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 105, 106, 107, 109, 110, 114, 115, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 152, 153, 157, 158, 160, 165, 167, 172, 173, 174, 175, 176, 177, 178, 179, 181, 188, 190, 191, 192, 200, 201, 203, 211, 213], "how": [6, 181, 197, 212, 213, 215, 216, 218], "long": [6, 73, 81, 120, 175, 176, 211, 212, 213], "start": [6, 58, 60, 132, 136, 142, 143, 165, 185, 188, 189, 190, 195, 196, 211, 212, 213, 216], "simultan": [6, 69, 71, 155, 185, 197, 212, 218], "box": [6, 37, 81, 91, 96, 189, 195, 196, 197, 211, 218], "get_implement": [6, 18, 20, 69, 211, 213, 218], "use_priority_ord": 6, "strict_locu": [6, 18, 20], "priority_calibr": [6, 218], "provid": [6, 11, 18, 19, 20, 31, 32, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 136, 181, 207, 210, 211, 212, 213, 214, 215, 218], "an": [6, 11, 13, 14, 16, 18, 19, 20, 29, 34, 38, 39, 48, 53, 61, 63, 69, 71, 73, 80, 81, 82, 83, 85, 96, 105, 106, 107, 109, 110, 113, 115, 119, 120, 121, 128, 151, 153, 155, 165, 166, 170, 179, 181, 189, 191, 194, 197, 201, 204, 205, 211, 212, 213, 214, 215, 216, 218], "mean": [6, 11, 69, 71, 73, 158, 181, 197, 211, 213, 215, 216, 218], "chosen": [6, 114, 131, 212], "automat": [6, 11, 19, 70, 211, 213], "logic": [6, 19, 20, 31, 35, 48, 49, 75, 102, 103, 105, 131, 165, 211, 213, 218], "describ": [6, 11, 12, 20, 131, 132, 136, 148, 181, 197, 212, 215, 218], "below": [6, 20, 140, 141, 211, 212, 215, 216, 218], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 74, 75, 76, 82, 106, 107, 132, 181, 211, 213], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 75, 140, 141, 144, 165, 179, 181, 197, 212, 213, 214, 216, 218], "avail": [6, 18, 20, 212, 213, 215, 216, 218], "effect": [6, 20, 37, 73, 96, 105, 181, 185, 197, 212, 213, 214, 216, 218], "get_default_implementation_for_locu": [6, 181, 211, 213], "otherwis": [6, 18, 20, 49, 69, 71, 77, 102, 120, 165, 166, 177, 211, 213, 215], "first": [6, 11, 13, 34, 35, 37, 49, 69, 71, 132, 135, 136, 165, 179, 181, 213, 216, 218], "prioriti": [6, 7, 181, 211], "follow": [6, 55, 69, 70, 73, 102, 109, 125, 135, 160, 179, 185, 189, 197, 207, 210, 211, 212, 215, 216, 218], "defin": [6, 7, 11, 18, 19, 22, 28, 29, 30, 32, 38, 39, 48, 49, 52, 69, 70, 73, 80, 85, 86, 95, 103, 104, 120, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 171, 172, 179, 181, 183, 184, 195, 197, 211, 212, 213, 214, 215, 218], "defaults_for_locu": [6, 181, 211], "global": [6, 63, 181, 211], "load": [6, 8, 211], "common": [6, 18, 19, 38, 39, 69, 70, 71, 83, 84, 94, 102, 108, 112, 113, 114, 126, 189, 211, 214, 215], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 109, 119, 120, 128, 131, 139, 161, 165, 166, 172, 174, 178, 179, 181, 191, 197, 211, 212, 213, 215, 218], "note": [6, 16, 49, 69, 132, 136, 146, 153, 165, 184, 188, 197, 213, 216], "prevent": [6, 212, 213], "save": 6, "via": [6, 18, 20, 63, 84, 102, 103, 108, 112, 114, 144, 177, 179, 211, 213], "could": [6, 17, 55, 181, 213, 216], "_find_implementation_and_locu": 6, "find": [6, 179, 218], "instanc": [6, 11, 13, 18, 20, 33, 69, 71, 77, 81, 82, 96, 105, 106, 107, 153, 156, 181, 201, 218], "compat": [6, 69, 71, 96, 207, 210, 211], "highest": [6, 181], "we": [6, 17, 55, 63, 75, 109, 120, 131, 132, 135, 136, 139, 179, 181, 201, 213, 215, 216, 218], "equival": [6, 109, 185, 197, 201, 212, 218], "one": [6, 9, 11, 18, 38, 39, 42, 45, 49, 56, 69, 70, 81, 165, 181, 189, 190, 194, 197, 211, 212, 213, 215, 216, 218], "had": [6, 211], "_get_implement": 6, "built": [6, 11, 113, 211], "when": [6, 11, 17, 35, 37, 55, 69, 71, 73, 103, 128, 139, 165, 167, 172, 174, 178, 179, 189, 190, 197, 204, 205, 206, 211, 212, 213, 216, 218], "later": [6, 11], "oilcalibrationdata": [6, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 109, 112, 114, 183, 213], "impli": [6, 215], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 52, 69, 70, 71, 75, 91, 98, 102, 103, 105, 109, 128, 139, 153, 158, 172, 173, 174, 178, 179, 181, 184, 211, 212, 213, 218], "validate_quantum_circuit": [6, 211], "require_measur": [6, 9], "constitut": [6, 9, 215], "least": [6, 9, 55, 120, 126, 132, 136, 189, 190, 207, 210, 212, 213, 215], "circuit_to_timebox": [6, 211], "scheduling_algorithm": [6, 194, 197], "schedulingalgorithm": [6, 193, 194, 197], "hard_boundari": [6, 194, 195, 197], "locus_map": [6, 211], "convert": [6, 11, 20, 84, 114, 120, 128, 139, 149, 164, 172, 174, 178, 179, 187, 197, 211, 212, 213, 214], "resolv": [6, 20, 176, 195, 197, 212, 214], "option": [6, 11, 12, 13, 32, 69, 165, 181, 211, 213, 216], "placehold": [6, 11, 211], "physic": [6, 11, 21, 120, 189, 211, 212, 213], "while": [6, 20, 84, 195, 212, 213, 215, 218], "unresolv": 6, "fail": [6, 204, 206], "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 195, 197, 211], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 106, 107, 113, 114, 120, 122, 128, 129, 130, 135, 138, 139, 140, 141, 142, 143, 146, 151, 153, 170, 172, 173, 174, 175, 177, 178, 179, 188, 194, 197, 201, 213, 214, 215, 218], "temporari": 6, "helper": [6, 20], "playlist": [6, 73, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 137, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 187, 202, 206, 207, 210, 211, 214, 216, 218], "front": [6, 165], "pad": [6, 35, 82, 107, 132, 135, 136, 165, 189, 195, 218], "equal": [6, 11, 37, 73, 109, 112, 175, 176, 188, 191, 192, 211, 212, 218], "sinc": [6, 32, 49, 75, 109, 179, 181, 211, 213], "delai": [6, 37, 67, 68, 69, 70, 102, 148, 155, 211, 212, 216], "befor": [6, 77, 84, 86, 88, 90, 93, 120, 122, 201, 211, 218], "final": [6, 94, 172, 212, 213, 218], "wish": 6, "lose": [6, 211], "coher": [6, 153], "done": [6, 84, 160, 167, 179, 185, 190, 211, 213], "onc": [6, 211, 212, 213], "handl": [6, 19, 32, 55, 70, 102, 119, 120, 126, 189, 192, 201, 211, 213], "better": [6, 120, 197, 211], "remov": [6, 20, 71, 109, 120, 165, 166, 167, 211, 218], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 77, 81, 83, 84, 89, 90, 94, 105, 119, 120, 122, 126, 128, 129, 130, 131, 132, 136, 139, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 188, 189, 194, 197, 203, 211], "far": 6, "By": [6, 20, 48, 49, 69, 70, 71, 75, 91, 102, 109, 128, 139, 172, 174, 178, 179, 201], "occupi": [6, 165, 189, 190, 197, 212], "unnecessari": [6, 37, 189, 211], "pack": [6, 195], "assum": [6, 35, 49, 78, 96, 102, 109, 114, 126, 142, 143, 146, 165, 175, 176, 179, 212, 213, 215, 218], "refer": [6, 84, 113, 119, 160, 211, 213, 214, 218], "ensur": [6, 140, 141, 212, 216, 218], "work": [6, 11, 75, 103, 165, 188, 211, 212, 213, 215, 218], "intend": [6, 75, 103, 181, 212, 213], "properli": 6, "higher": [6, 137, 139, 140, 141, 211, 212, 216], "help": [6, 11, 212, 213, 216], "defend": [6, 215], "crosstalk": [6, 62, 63, 152, 185, 211, 213], "expens": 6, "longer": [6, 103, 211], "more": [6, 19, 55, 128, 149, 181, 197, 211, 212, 215, 216], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 103, 211], "readi": [6, 214], "execut": [6, 34, 35, 119, 154, 162, 165, 181, 185, 211, 212, 213, 214, 215, 216, 218], "sample_r": [6, 120, 121, 122, 123], "_finish_schedul": 6, "filter": 6, "zero": [6, 11, 35, 49, 55, 63, 64, 75, 84, 96, 99, 131, 132, 135, 136, 149, 155, 161, 178, 179, 181, 188, 191, 192, 211, 212], "spacer": [6, 185], "consequ": 6, "step": [6, 161, 179, 211], "process": [6, 78, 149, 212, 217], "consist": [6, 17, 48, 49, 81, 84, 96, 105, 128, 139, 165, 172, 174, 178, 179, 181, 211, 213, 215], "extend": [6, 7, 13, 15, 55, 132, 164, 165, 166, 189, 190, 191, 192, 197], "gone": 6, "_fuse_long_distance_virtual_rz": 6, "fuse": [6, 84, 211], "distanc": [6, 211], "virtualrz": [6, 75, 77, 78, 109, 147, 211, 212], "correct": [6, 13, 62, 63, 75, 78, 111, 152, 211, 213, 218], "next": [6, 188, 212, 213, 216], "fluxpuls": [6, 147], "resolve_timebox": [6, 197, 211, 218], "compute_neighborhood_hard_boundari": 6, "children": [6, 194, 197, 212, 218], "concaten": [6, 197, 212, 218], "strategi": [6, 189, 190, 196, 197], "composit": [6, 17, 18, 38, 39, 195, 196, 197, 211, 212, 213, 218], "solid": 6, "rectangl": [6, 218], "longest": [6, 55, 189, 195], "within": [6, 13, 158, 165, 196, 212, 215], "tetri": [6, 149, 195], "tightli": [6, 195], "possibl": [6, 55, 109, 151, 165, 179, 189, 190, 195, 196, 197, 211, 212, 215, 216, 218], "still": [6, 11, 63, 166], "overlap": [6, 149, 155, 164, 189, 212, 218], "regardless": [6, 213, 216], "boundari": [6, 58, 60, 189, 195, 196], "modifi": [6, 7, 11, 165, 166, 188, 189, 190, 191, 192, 201, 211, 213, 215, 218], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 71, 72, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 109, 165, 166, 185, 197, 211, 212, 213, 214, 218], "becom": [6, 11, 37, 172, 218], "atom": [6, 20, 194, 195, 197, 212, 213, 218], "isn": 6, "t": [6, 63, 81, 94, 113, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 171, 172, 174, 177, 179, 211, 215], "alreadi": [6, 11, 61, 165, 197, 211, 213], "precomput": [6, 165, 197, 213], "typic": [6, 49, 69, 120, 132, 135, 181, 185, 212, 213, 216, 218], "want": [6, 11, 19, 48, 49, 69, 71, 85, 86, 95, 132, 136, 161, 213], "top": [6, 213], "layer": 6, "would": [6, 11, 17, 49, 77, 211, 213, 216, 218], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 106, 125, 136, 165, 173, 181, 189, 190, 194, 197, 211, 212, 213, 214, 216, 218], "lower": [6, 214, 216], "where": [6, 48, 49, 55, 63, 69, 70, 71, 73, 80, 94, 104, 105, 113, 120, 129, 130, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 155, 165, 172, 174, 177, 179, 181, 189, 192, 211, 212, 213, 215], "improv": [6, 37, 69, 71, 211, 215], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 71, 75, 98, 102, 103, 105, 128, 139, 165, 166, 172, 174, 178, 179, 181, 211, 212, 213, 214, 218], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 60, 158, 213], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 20, 61, 103, 119, 165, 191, 192, 211, 212, 213, 215, 218], "addit": [6, 11, 20, 31, 32, 35, 48, 49, 69, 73, 75, 102, 103, 105, 111, 153, 165, 178, 181, 197, 213, 215, 218], "ideal": [6, 16, 53, 181, 185], "model": [6, 127, 137, 171, 185, 212], "correctli": [6, 17, 211, 213], "interact": [6, 49], "frame": [6, 75, 152, 179, 201, 211, 213], "subspac": [6, 73, 181, 185, 212, 213], "connect": [6, 11, 103, 181, 197, 212, 213, 218], "those": [6, 32, 69, 71, 102, 135, 181, 197, 211, 213, 215, 218], "henc": [6, 201], "evolut": 6, "Of": 6, "cours": [6, 53, 213], "realiti": [6, 53], "possibli": [6, 49, 216], "applic": [6, 213, 215], "essenti": [6, 135, 136, 213], "precis": [6, 212], "interest": 6, "howev": [6, 18, 55, 102, 128, 139, 161, 172, 174, 178, 179, 212, 213, 215], "well": [6, 79, 103, 154, 165, 181, 207, 210, 211, 213, 214, 216, 218], "local": [6, 75, 109, 152, 160, 201], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 71, 103, 128, 139, 148, 172, 174, 178, 179, 211, 212, 213, 218], "end": [6, 11, 40, 75, 77, 78, 109, 113, 132, 136, 142, 143, 149, 164, 165, 166, 177, 211, 212, 213, 215, 216], "carri": [6, 212, 215], "meant": [6, 11], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 75, 120, 128, 129, 130, 132, 133, 134, 135, 136, 138, 140, 142, 143, 145, 146, 150, 155, 165, 179, 181, 194, 197, 207, 210, 211, 212, 213, 216, 218], "involv": [6, 20, 35, 212, 214, 218], "compress": [6, 212], "duplic": 6, "transfer": [6, 96, 215], "drop": 6, "point": [6, 109, 132, 133, 134, 136, 142, 143, 144, 188, 189, 190, 213], "finalis": 6, "unless": [6, 20, 128, 139, 172, 174, 178, 179, 197, 211, 213, 215, 218], "call": [6, 11, 13, 17, 18, 20, 75, 103, 112, 211, 213, 218], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 18, 20, 31, 37, 49, 81, 98, 170, 211, 212, 213, 214], "shortcut": [6, 11, 211, 218], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 213], "nativ": [7, 33, 181, 218], "ones": [7, 18, 34, 35, 102, 108, 112, 114, 195, 197, 213], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 71, 96, 103, 105, 109, 165, 174, 177, 181, 189, 192, 201, 211, 212, 213], "gate_definit": 7, "section": [7, 212, 213, 215, 216, 218], "file": [7, 8, 52, 215], "yaml": [7, 8, 211], "config": [8, 119, 211], "circuitoperationlist": [10, 211], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 40, 80, 96, 102, 103, 109, 111, 113, 155, 179, 197, 211, 213], "mostli": [11, 212], "conveni": [11, 20, 69, 71, 197, 211, 214], "enabl": [11, 55, 75, 81, 175, 176, 211], "easi": [11, 218], "creation": [11, 213], "calcul": [11, 12, 15, 75, 177, 179, 211], "onto": 11, "import": [11, 56, 213, 215, 218], "present": [11, 12, 73, 165, 189, 218], "think": 11, "about": [11, 79, 151, 153, 154, 157, 211, 212, 216, 218], "qiskit": [11, 211], "quantumregist": 11, "most": [11, 213, 214], "simpli": [11, 37, 109, 181, 212], "taken": [11, 211], "you": [11, 69, 70, 75, 161, 181, 211, 214, 215, 218], "good": 11, "practic": [11, 213, 216, 218], "mutabl": [11, 165], "regist": [11, 12, 13, 18, 98, 181, 211, 212, 214, 218], "usabl": [11, 20, 37, 211], "fundament": 11, "popul": [11, 73], "qb1": [11, 69, 181, 213, 218], "qbn": 11, "qb2": [11, 69, 181, 213, 216, 218], "altern": [11, 212, 216], "To": [11, 37, 55, 165, 213, 214, 215, 216, 218], "your": [11, 213, 215], "own": [11, 17, 20, 33, 181, 211, 212, 213, 215], "initi": [11, 32, 33, 131, 139, 172, 179, 211, 212, 213], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 181, 211, 212, 213], "__add__": [11, 69, 71, 211], "__mul__": [11, 211], "__getitem__": [11, 211], "redefin": [11, 128, 139, 172, 174, 178, 179], "3": [11, 37, 63, 67, 68, 69, 82, 107, 138, 189, 215, 217, 218], "circuit1": [11, 218], "circuit2": [11, 218], "4": [11, 57, 89, 90, 92, 93, 111, 113, 138, 215, 217], "produc": [11, 191, 211, 212, 216, 218], "prx": [11, 18, 19, 37, 38, 39, 67, 68, 69, 70, 71, 72, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 104, 108, 109, 112, 114, 181, 201, 211, 212, 213, 216, 217, 218], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 74, 75, 76, 80, 81, 84, 91, 96, 97, 102, 104, 109, 110, 112, 113, 115, 152, 181, 200, 201, 211, 213, 218], "drag_crf": [11, 38, 211], "abov": [11, 212, 213, 214, 215, 218], "shorten": 11, "exactli": [11, 20, 181, 194], "syntax": [11, 211, 212, 213, 215, 218], "usual": [11, 17, 55, 156, 179, 212, 213, 216, 218], "attach": [11, 215], "init": [11, 211, 213], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 74, 75, 76, 82, 106, 107, 181, 213], "unitari": [11, 12, 13, 15, 40, 58, 60, 73, 97, 99, 110, 115, 181, 211, 212, 213], "propag": [11, 15, 58, 60, 102, 211, 216], "entir": [11, 13, 120, 211], "u": [11, 57, 114, 211], "get_unitari": 11, "dimens": [11, 132, 135], "alwai": [11, 18, 34, 35, 37, 75, 102, 108, 112, 114, 140, 141, 181, 185, 189, 191, 213], "qb3": [11, 69, 181, 216, 218], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 113, 132, 181, 211, 213], "correspond": [11, 13, 18, 53, 57, 58, 59, 60, 63, 102, 108, 112, 114, 128, 131, 132, 135, 151, 181, 189, 197, 212, 216], "three": [11, 81], "big": [11, 12, 13, 181], "endian": [11, 12, 13, 181], "convent": [11, 12, 75, 125], "With": [11, 19, 69, 70, 71, 216], "action": [11, 12, 181, 212], "ident": [11, 15, 53, 59, 96, 211], "physical_circuit": 11, "map_loci": [11, 211], "physical_qubit": 11, "exampl": [11, 14, 17, 18, 75, 120, 131, 181, 211, 212, 213, 215, 218], "alic": 11, "zzz": 11, "qb5": [11, 181], "qb10": 11, "occurr": 11, "mani": [11, 211, 213, 218], "run": [11, 135, 211, 216], "parallel": [11, 181, 211], "larg": [11, 132, 136, 212], "left": [11, 20, 31, 35, 48, 49, 69, 70, 71, 103, 105, 109, 191, 192, 212, 213, 216], "ignor": [11, 37, 131], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 120, 129, 130, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 146, 172, 179], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 172, 174, 175, 176, 177, 178, 179, 211, 213], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 89, 90, 92, 93, 97, 110, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 174, 175, 176, 177, 178, 179, 181, 213], "locus_indic": 11, "append": [11, 35, 69, 165, 166, 211], "store": [11, 13, 17, 20, 48, 49, 69, 70, 71, 91, 102, 109, 135, 152, 181, 213], "select": [11, 15, 216, 218], "indic": [11, 15, 77, 131, 132, 135, 170, 212, 215], "qb4": [11, 216], "param": [11, 13, 20, 181, 211, 213], "barrier": [11, 12, 181, 213], "compos": [11, 185, 214], "safer": 11, "wai": [11, 18, 148, 197, 211, 212, 213, 218], "togeth": [11, 37, 48, 69, 71, 77, 189, 197, 211, 212, 213, 218], "probabl": 11, "wire": 11, "k": [11, 14, 132, 140, 141, 142, 143, 144, 145, 146, 179], "achiev": [11, 213], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 175, 176, 197], "make_circuit": [11, 211], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 145, 146, 159, 165, 179, 189, 195, 207, 209, 210, 211], "total": [11, 78, 166, 185, 218], "across": [11, 136, 140, 141], "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 71, 211, 213, 215], "skip": [12, 165], "product": [12, 135, 212, 215], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 71, 103, 105, 109, 212, 213, 218], "fetch": 13, "Then": [13, 197, 213], "hilbert": [13, 15], "whole": [13, 63, 212, 215], "perm": 14, "permut": [14, 211], "state": [14, 40, 53, 73, 75, 80, 84, 99, 102, 103, 109, 111, 113, 181, 201, 212, 213, 215, 216], "vector": [14, 132, 211], "index": [14, 63, 119, 166, 188, 212, 214], "th": [14, 132, 179], "old": 14, "kron": [14, 181], "c": [14, 177, 197, 215], "n_qubit": 15, "larger": [15, 165, 212], "system": [15, 52, 211, 215, 216, 218], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 74, 75, 76, 82, 85, 86, 87, 88, 89, 90, 92, 93, 95, 103, 106, 107, 109], "hash": 15, "purpos": [15, 20, 69, 71, 211, 213, 215], "rang": [15, 131, 132, 136, 142, 143, 172, 197, 211], "abstract": [16, 181, 212, 213, 214], "conceptu": [16, 212], "wherea": [16, 69, 149, 181, 212, 213], "concret": [16, 181, 213, 214, 218], "One": [16, 20, 91, 212, 218], "approxim": [16, 132, 136], "abc": [16, 18, 20, 34, 36, 40, 53, 62, 66, 73, 80, 81, 83, 84, 91, 94, 96, 99, 104, 111, 113], "customiqwaveform": [16, 66, 69, 70, 71, 80, 83, 84, 213], "singlepulseg": [16, 80, 96, 211], "compositecach": 16, "__call__": [17, 18, 20, 31, 35, 48, 49, 69, 71, 75, 102, 103, 105, 211, 213], "normal": [17, 37, 63, 140, 141, 144, 179, 181, 200, 211, 213, 215], "_timebox_cach": 17, "trust": 17, "itself": [17, 75, 103, 211, 213, 216], "member": [17, 18, 58, 60, 213], "deduc": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 213], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 71, 100, 101, 102, 108, 112, 114, 211, 212, 213], "identifi": [17, 37, 120, 148, 165, 213, 215], "cast": 17, "extra": [17, 37, 75, 84, 213], "string": [17, 63, 67, 68, 69, 158, 170], "id": 17, "further": [17, 178, 179, 197, 213], "did": [17, 211], "come": [17, 213, 218], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 112, 114, 211, 213], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 112, 114, 213], "term": [18, 128, 129, 130, 133, 134, 138, 139, 140, 142, 143, 144, 146, 172, 174, 178, 179, 181, 212, 213, 214, 215], "pre": [18, 131, 138, 139, 140, 141, 179], "abl": [18, 126, 211], "know": [18, 20, 213], "consid": [18, 19, 55, 64, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 135, 188, 191, 192, 211, 213, 218], "registered_g": [18, 102, 108, 112, 114, 211, 213], "cz": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 73, 75, 109, 181, 211, 212, 213, 217, 218], "insid": [18, 20, 31, 35, 37, 48, 49, 75, 84, 102, 103, 105, 172, 188, 197, 211, 212, 213], "besid": [18, 102, 103, 108, 112, 114], "here": [18, 63, 84, 102, 108, 112, 114, 146, 171, 179, 213, 216, 218], "construct": [18, 20, 33, 69, 81, 82, 96, 102, 105, 106, 107, 108, 112, 114, 128, 139, 172, 174, 178, 179, 211, 212, 214], "default_implement": [18, 38, 39, 181], "design": [18, 38, 39, 211, 215], "fill": [18, 38, 39, 212], "he": [18, 38, 39], "sought": 18, "custom": [19, 20, 69, 70, 71, 211, 212, 214], "waveform": [19, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 105, 119, 127, 128, 129, 130, 131, 137, 139, 140, 141, 152, 153, 154, 157, 172, 173, 174, 175, 176, 177, 178, 179, 207, 209, 210, 211, 212, 214], "iqpuls": [19, 48, 69, 70, 71, 81, 83, 84, 85, 86, 94, 95, 96, 105, 109, 147, 150, 155, 158, 160, 201, 209, 211, 212, 213], "info": [19, 20, 211, 213], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 71, 72, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 105, 128, 130, 134, 141, 143, 153, 211, 213, 217, 218], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 72, 85, 86, 87, 88, 89, 90, 92, 93, 95, 153, 213], "wave_q": [19, 67, 68, 72, 85, 86, 87, 88, 89, 90, 92, 93, 95, 153, 213], "dependent_wav": [19, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95], "share": [19, 32, 49, 67, 68, 69, 70, 71, 72, 77, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 215], "drag": [19, 67, 68, 69, 70, 71, 72, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 211, 213], "root_paramet": [19, 49, 69, 70, 71, 75, 83, 84, 94], "independ": [19, 69, 70, 71, 83, 84, 94, 165, 166, 181, 212, 216], "overrid": [19, 20, 31, 35, 48, 49, 69, 70, 71, 75, 83, 84, 85, 86, 91, 94, 95, 102, 103, 105, 109, 131, 211, 213, 218], "excluded_paramet": [19, 48, 49, 85, 86, 95], "exclud": [19, 48, 49, 85, 86, 95, 215], "There": [20, 84, 213, 216, 218], "subclass": [20, 31, 33, 35, 48, 49, 69, 70, 71, 103, 105, 109, 128, 139, 172, 174, 178, 179, 181, 211, 213], "__init__": [20, 211, 213], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 74, 75, 76, 80, 81, 84, 91, 96, 97, 104, 109, 110, 111, 113, 115, 201, 211, 213, 218], "input": [20, 37, 69, 71, 94, 212, 213], "raw": [20, 150, 158, 159, 170, 216], "meaning": [20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 74, 75, 76, 82, 106, 107, 181], "special_implement": [20, 211], "special": [20, 49, 77, 96, 171, 181, 211, 213, 215, 218], "never": [20, 211, 213], "explicitli": [20, 69, 71, 211, 213, 215, 218], "qualified_nam": 20, "qualifi": 20, "classmethod": [20, 48, 49, 63, 69, 70, 71, 81, 83, 84, 85, 86, 91, 94, 95, 102, 103, 105, 109, 211], "needs_calibr": 20, "appropri": [20, 212, 215], "_call": [20, 31, 35, 37, 48, 49, 55, 69, 70, 71, 75, 81, 84, 91, 96, 102, 103, 105, 109, 112, 114, 211, 213], "kwarg": [20, 31, 35, 48, 49, 75, 81, 85, 86, 95, 102, 103, 105], "signatur": [20, 31, 35, 48, 49, 75, 102, 103, 105, 181, 211, 213], "suffici": [20, 31, 35, 48, 49, 75, 102, 103, 105, 120, 179], "assign": [20, 49, 69, 70, 71, 119, 211], "specifi": [20, 31, 37, 128, 154, 195, 213, 216, 218], "to_timebox": 20, "wrap": [20, 218], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 71, 103, 105, 109, 165], "unimpl": [20, 31, 35, 48, 49, 69, 70, 71, 103, 105, 109], "reimplement": [20, 31, 35, 48, 49, 69, 70, 71, 103, 105, 109, 213], "make": [20, 31, 35, 48, 49, 69, 70, 71, 75, 103, 105, 109, 154, 161, 165, 166, 181, 185, 188, 211, 213, 215, 218], "sens": [20, 31, 35, 48, 49, 69, 70, 71, 103, 105, 109], "convert_calibration_data": 20, "channel_prop": 20, "item": [20, 165], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 71, 72, 74, 75, 76, 89, 90, 92, 93, 94, 95, 106, 120, 121, 123, 128, 131, 132, 135, 136, 139, 146, 172, 174, 178, 179, 213], "addition": [20, 189, 190, 216], "under": [20, 185, 197, 215], "n_sampl": [20, 32, 81, 83, 84, 94, 105, 128, 129, 130, 131, 139, 140, 141, 172, 173, 174, 175, 176, 177, 178, 179], "subset": [20, 58], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 74, 75, 76, 82, 85, 86, 87, 88, 89, 90, 92, 93, 95, 103, 106, 107], "cl": 20, "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 165, 215], "dot": 20, "root": [20, 58], "settingnod": [20, 124, 125], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 71, 91, 102, 109, 213], "operation_nam": [20, 48, 49, 69, 70, 71, 91, 102, 109], "implementation_nam": [20, 48, 49, 69, 70, 71, 91, 102, 109, 213], "behaviour": [20, 48, 49, 69, 70, 71, 91, 102, 109, 211, 213], "get_custom_locus_map": [20, 63, 103, 211, 213], "component_to_channel": [20, 63, 103, 125], "wrt": 20, "often": [20, 211, 213], "set_locus_map": 20, "frozenset": [20, 63, 103, 213], "matter": [21, 75, 213], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 74, 76, 82, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 106, 107, 182], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 71, 75, 81, 105, 153, 155, 156, 157, 194, 211, 212, 213, 218], "singl": [31, 33, 60, 67, 68, 69, 70, 72, 80, 83, 84, 86, 96, 104, 109, 111, 113, 165, 166, 181, 194, 197, 208, 211, 212, 213, 216, 217, 218], "_get_puls": [31, 83, 84, 85, 86, 94, 95, 211], "_get_pulse_channel": 31, "basic": [31, 166, 211, 213], "insert": [31, 77, 211], "overridden": [31, 181, 213], "wave": [32, 152, 157, 174], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 100, 101, 103, 106, 107, 148, 150, 158, 159, 194, 197, 211, 212, 213], "format": [32, 211, 215], "been": [33, 37, 103, 197, 211, 212, 215, 216], "sever": [33, 149, 181, 211, 213, 216, 218], "scheme": [33, 212], "likewis": 33, "sometim": [33, 212], "metaoper": [34, 35, 181, 213], "forc": [34, 53, 120, 126], "tempor": [34, 35], "qudit": [35, 181], "metainstruct": 35, "caus": [35, 37, 55, 63, 211, 215, 216], "turn": [35, 211], "impos": 35, "relat": [35, 78, 211, 216, 218], "classic": [36, 37, 211, 216], "ccprx_composit": [36, 38, 39, 211, 216], "ccprx_composite_dragcosinerisefal": [36, 211], "ccprx_composite_draggaussian": [36, 211], "condit": [37, 38, 39, 102, 151, 158, 207, 210, 211, 213, 215, 216], "discrimin": 37, "obtain": [37, 96, 128, 132, 212, 215, 217], "segment": [37, 81, 103, 158, 160, 163, 165, 170, 188, 189, 190, 211, 212, 216], "activ": [37, 156, 212], "underneath": 37, "control_delai": [37, 216], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107, 128, 133, 134, 139, 142, 143, 144, 146, 153, 165, 172, 174, 178, 179, 212, 213, 216], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107, 199, 211], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107, 199], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107], "instrument": [37, 109, 120, 123, 131, 147, 163, 216], "drive_control": [37, 124], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 71, 211], "conditionalinstruct": [37, 69, 71, 147, 158, 216], "until": [37, 109, 212], "enough": [37, 216], "arriv": [37, 216], "place": [37, 165, 176, 178, 189, 190, 215], "sequenti": 37, "without": [37, 71, 132, 135, 136, 159, 164, 197, 211, 212, 213, 215, 218], "care": [37, 218], "yourself": [37, 214], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 74, 75, 76, 84, 86, 88, 90, 93, 97, 106, 110, 153, 201], "multipl": [37, 69, 71, 103, 120, 126, 128, 139, 144, 151, 155, 158, 172, 174, 178, 179, 211, 212], "f": [37, 63, 69, 70, 71, 132, 172, 174, 177, 179, 181, 213], "__": [37, 63, 69, 70, 71, 211], "current": [37, 69, 71, 75, 188], "hw": [37, 69, 71, 211], "per": [37, 69, 71, 181, 211, 213], "listen": [37, 211], "user": [37, 63, 69, 71, 131, 179, 197, 211, 212, 213, 216, 218], "drag_gaussian": [39, 211, 218], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 74, 75, 76, 84, 104, 109, 111, 113, 115, 201, 211, 213], "flip": [40, 211], "rel": [40, 75, 128, 139, 146, 153, 172, 174, 178, 179, 211, 212, 213, 218], "11": [40, 217], "text": [40, 73, 84, 177, 179, 215], "begin": [40, 75, 77, 113, 148, 155, 166, 177, 188, 191, 192, 211, 216, 218], "pmatrix": [40, 113], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 73, 75, 213], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 211], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 211], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cosinerisefal": [41, 42, 46, 50, 51, 74, 76, 85, 86, 95, 178], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 74, 75, 76, 213], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 71, 72, 74, 76, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 105, 106, 128, 131, 139, 172, 174, 176, 178, 179, 211, 213], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 103, 106, 107], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 74, 76, 85, 86, 87, 88, 89, 90, 92, 93, 95, 106, 128, 129, 130, 139, 140, 141, 177, 178, 179, 213], "crf": [41, 42, 45, 46, 50, 51, 74, 76, 85, 86, 95], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 74, 76, 85, 86, 87, 88, 89, 90, 92, 93, 95, 106], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 74, 76, 85, 86, 87, 88, 89, 90, 92, 93, 95, 106, 128, 129, 130, 131, 139, 140, 141, 177, 178, 179], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 74, 76, 82, 85, 86, 95, 106, 107, 176, 177, 178], "rz": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 74, 75, 76, 84, 86, 88, 90, 93, 105, 106, 107, 108, 109, 114, 152, 201, 211], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 74, 75, 76, 213], "cosin": [42, 45, 82, 95, 106, 107, 128, 129, 130, 133, 134, 135, 136, 138, 142, 143, 144, 145, 171, 172, 175, 176, 178, 179, 211], "rise": [42, 45, 81, 82, 95, 106, 107, 175, 176, 177, 178, 211], "fall": [42, 45, 81, 82, 95, 106, 107, 175, 177, 178, 181, 211], "ac": [42, 45, 48, 81, 82, 105, 106, 107, 211], "stark": [42, 45, 48, 81, 82, 105, 106, 107, 211], "first_qubit": [42, 45], "mcrf": [42, 45, 106], "modulation_frequ": [42, 45, 106, 153, 178], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 106, 171], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 171, 211], "coupling_strength_norm": [44, 45, 46, 179], "frequency_initial_norm": [44, 45, 46, 179], "frequency_to_minimize_norm": [44, 45, 46, 179], "lambda_1": [44, 45, 46, 179], "lambda_2": [44, 45, 46, 179], "squid_asymmetri": [44, 45, 46, 179], "truncatedgaussiansmoothedsquar": [47, 51, 76, 178], "tgss": [47, 51, 76], "analog": 48, "tune": [48, 127, 128, 129, 130], "frequenc": [48, 67, 68, 69, 70, 71, 72, 75, 94, 95, 105, 121, 122, 128, 131, 132, 135, 136, 138, 139, 140, 142, 143, 145, 146, 153, 172, 174, 178, 179, 211, 213], "_ac_stark_puls": [48, 105], "phase_incr": [48, 105, 106, 109, 153, 160], "quadratur": [48, 105, 153], "pi": [48, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 102, 105, 111, 112, 113, 129, 130, 132, 133, 134, 135, 140, 141, 144, 145, 172, 173, 174, 177, 200, 211, 213, 216, 218], "discret": 49, "mediat": [49, 73], "coupl": [49, 179], "tunabl": [49, 217], "both": [49, 75, 81, 191, 211, 213, 216, 218], "arbitrari": [49, 94, 95, 109, 113, 155, 201, 211, 216, 218], "slot": 49, "move": [49, 74, 75, 76, 77, 188, 211, 218], "being": [49, 96, 132, 181, 213, 216], "flux_puls": 49, "radian": [49, 80, 81, 91, 96, 104, 109, 113, 153, 160, 174, 200], "maximum": [54, 64, 103, 140, 141, 165, 179, 189], "up": [55, 69, 71, 75, 78, 120, 126, 140, 141, 165, 179, 189, 211, 213], "hardwar": [55, 160, 181, 207, 210, 212, 213, 214, 216], "again": 55, "much": [55, 212], "why": [55, 213], "10": [55, 64, 73, 217], "except": [55, 69, 71, 84, 202, 204, 205, 206, 211, 212, 213, 215], "enumer": [56, 58, 60], "xygat": [56, 59, 91], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 217], "j": [57, 59, 63, 132, 217], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 213], "enum": [58, 60, 193, 195, 196], "qualnam": [58, 60, 195, 196], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 113, 114, 115], "clifford": [60, 91], "axi": [60, 80, 111, 113, 201, 211, 213], "xy": [60, 80, 91], "plane": [60, 80, 111], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 98], "error": [61, 132, 136, 179, 183, 197, 204, 205, 206, 211, 212, 218], "fluxmultiplexer_samplelinear": [62, 211], "flux_multiplex": 63, "linear": [63, 96, 172, 173], "multiplex": [63, 69, 71, 102, 194, 211], "cross": [63, 215, 218], "talk": [63, 218], "element": [63, 128, 132, 136, 197, 211, 212, 218], "c_ij": 63, "aris": [63, 215], "a_i": [63, 94], "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": [63, 132], "spars": 63, "form": [63, 179, 211, 212, 213, 215], "xarrai": 63, "yet": [63, 189, 190, 211], "matrix_index": 63, "relev": 63, "flat": [63, 125], "np": [63, 181, 213, 216, 218], "matrix_el": 63, "experiment": 63, "r": [63, 111, 177, 217], "d": [63, 132, 172, 197, 215, 217], "everyth": [63, 218], "subject": [63, 212, 215], "1e": [64, 167, 191, 192], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 72, 102, 109], "basi": [66, 67, 68, 72, 102, 109, 113, 128, 131, 132, 135, 136, 138, 140, 141, 142, 143, 144, 145, 181, 215], "measure_customwaveform": [66, 67, 68, 70, 213], "measure_const": [66, 211], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 71, 211], "probepulse_customwaveforms_nointegr": [66, 72, 211], "probe_const": 66, "dispers": [67, 68, 69, 72], "constant": [67, 68, 69, 72, 81, 82, 101, 107, 175, 176, 177, 211, 216], "acquisition_delai": [67, 68, 69, 70], "acquisit": [67, 68, 69, 70, 71, 148, 156, 211, 216], "acquisition_typ": [67, 68, 69], "threshold": [67, 68, 69, 71, 158], "amplitude_i": [67, 68, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 107, 213], "amplitude_q": [67, 68, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 107, 213], "integration_length": [67, 68, 69, 70, 211], "integr": [67, 68, 69, 70, 71, 122, 150, 158, 159, 179, 211, 216], "integration_threshold": [67, 68, 69], "integration_weights_i": [67, 68, 69], "weight": [67, 68, 69, 89, 90, 128, 129, 130, 132, 136, 150, 158, 211], "dtype": [67, 68, 69, 129, 130, 140, 141, 172, 174, 175, 176, 177, 178, 179, 213], "float64": [67, 68, 69], "integration_weights_q": [67, 68, 69], "demolit": 68, "dimension": [69, 135], "len": [69, 71, 132, 135, 146], "intermedi": [69, 213], "IF": 69, "center": [69, 122, 131, 132, 146, 177, 178, 179], "offset": [69, 155, 177, 179], "readouttrigg": [69, 70, 71, 147, 158, 194, 212, 214], "_multiplexed_timebox": [69, 71], "multiplexedprobetimebox": [69, 71, 193, 211], "probe_timebox": [69, 71], "_time_trac": 69, "time_trac": [69, 70, 148], "_build_instruct": [69, 70, 71], "waveform_param": [69, 70, 71], "root_param": [69, 70, 71], "if_freq": [69, 71], "acquisitionmethod": [69, 70, 147, 150, 156, 159], "do_acquisit": [69, 71], "nake": [69, 71], "trigger": [69, 70, 71, 156, 165, 194, 211, 216], "goe": [69, 71], "maintain": [69, 71], "backward": [69, 71, 96], "rout": [69, 71, 158], "probelin": [69, 71, 212, 216], "behav": [69, 71, 149, 161], "featur": [69, 71, 213, 214], "mode": [69, 71], "pick": [69, 71], "anywher": [69, 71, 158, 211], "pass": [69, 71, 77, 78, 79, 211, 216], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "contrari": 70, "probl": 70, "similar": [71, 119, 211, 213], "exchang": 73, "invari": 73, "span": 73, "00": [73, 138], "rangl": [73, 99], "01": [73, 138], "swap": 73, "anyth": [73, 213], "orthogon": [73, 213], "involut": 73, "_": [73, 136, 140, 145, 146], "i_": 73, "langl": 73, "undefin": [73, 212], "complex": [73, 89, 90, 92, 93, 150, 213, 216, 218], "degre": [73, 111], "freedom": [73, 216], "continuum": 73, "cancel": [73, 211], "due": [73, 75, 105, 152, 176, 212], "movemark": [73, 75, 211], "move_customwaveform": [73, 74, 76, 78, 211], "move_crf_crf": [73, 211], "move_tgss_crf": 73, "detun": [74, 75, 76, 77, 78, 211], "bookkeep": 75, "unknown": [75, 181, 205], "pair": [75, 155, 175, 176, 181, 213], "back": [75, 181, 188], "came": 75, "sandwich": [75, 78, 79, 211], "At": [75, 132, 136, 213], "annot": [75, 77, 215], "mark": [75, 215], "counteract": 75, "accumul": 75, "proport": 75, "sum": [75, 78, 128, 139, 155, 166, 172, 174, 178, 179, 197, 218], "complet": [75, 212], "apply_move_gate_phase_correct": [75, 211], "track": [75, 166, 189, 211, 215, 218], "right": [77, 211, 212, 215, 216, 218], "link": [77, 171, 211, 215], "noth": [77, 163, 165, 185, 187, 191, 192, 213, 215], "explicit": [77, 211, 212], "aforement": [77, 166, 189, 213], "marker": 77, "post": [77, 131, 139], "compil": [77, 79, 120, 149, 214, 215, 218], "apply_detuning_correct": 78, "level": [78, 79, 181, 212, 213, 214, 216, 218], "validate_prx": 79, "prepar": [79, 215], "conform": 79, "constraint": [79, 155, 212, 216], "unmodifi": 79, "x": [80, 81, 84, 86, 91, 96, 111, 113, 211, 213, 217], "r_": [80, 84, 109], "phi": [80, 84, 104, 109, 113, 114, 115, 174, 201, 211], "theta": [80, 84, 109, 113, 114, 115, 179, 201, 211], "co": [80, 94, 113, 129, 132, 133, 135, 140, 141, 144, 145, 172, 174], "y": [80, 91, 111, 113, 115, 211], "sin": [80, 94, 113, 130, 134, 177], "r_z": [80, 84, 104, 109, 113, 114], "r_x": 80, "dagger": 80, "around": [80, 111, 113, 132, 178, 201], "li": 80, "bloch": [80, 113, 213], "sphere": [80, 113, 213], "prx_gateimplement": [80, 81, 96, 104], "prx_singlepulse_gateimplement": [80, 83, 84], "prx_customwaveform": [80, 85, 87, 89, 92, 94, 211, 213], "prx_draggaussian": 80, "prx_dragcosinerisefal": 80, "prx_customwaveformssx": [80, 86, 88, 90, 93, 211], "prx_draggaussiansx": [80, 211], "prx_dragcosinerisefallsx": [80, 211], "prx_fastdragsx": [80, 211], "prx_fastdrag": [80, 211], "prx_hddragsx": [80, 211], "prx_hddrag": [80, 211], "abc_constant_smooth": [80, 82, 104], "constant_prx_with_smooth_rise_fal": [80, 104, 107, 211], "prx_modulatedcustomwaveform": [80, 95, 211], "prx_modulateddragcosinerisefal": [80, 211], "arbitrarili": [81, 175, 176, 211], "smooth": [81, 175, 176], "rise_waveform": [81, 82, 107], "main_waveform": [81, 82, 107], "fall_waveform": [81, 82, 107], "middl": [81, 178], "limit": [81, 112, 207, 210, 211, 215, 218], "memori": [81, 211, 212], "doesn": [81, 211], "_main_puls": 81, "main": [81, 212, 213], "_rise_puls": 81, "_fall_puls": 81, "cosinefal": [82, 107, 171], "cosineris": [82, 107, 171], "iq": [83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 120, 121, 128, 139, 150, 155, 158, 159, 201, 207, 210, 211], "hot": [83, 84, 94], "swappabl": [83, 84, 94], "rest_of_calibration_data": [83, 84, 94], "x_pi": [83, 85, 211], "sx": [84, 90, 93, 112, 211], "manipul": [84, 213], "formula": 84, "rz_after": [84, 86, 88, 90, 93], "rz_befor": [84, 86, 88, 90, 93, 211], "sqrt": [84, 86, 111, 211], "cosinerisefallderiv": [85, 86, 95, 171], "vz": [86, 88, 90, 93], "prx_customwaveformsvz": [86, 88], "truncatedgaussian": [87, 88, 213], "tg": [87, 88], "truncatedgaussianderiv": [87, 88, 213], "gaussian": [88, 213], "scale": [89, 92, 96, 131, 132, 152, 153, 157, 212, 213], "fdi": [89, 90], "coeffici": [89, 90, 92, 93, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 179], "compute_coefs_from_frequ": [89, 90, 92, 93, 128, 129, 130, 131, 139, 140, 141], "boolean": [89, 90, 92, 93, 131, 158], "number_of_cos_term": [89, 90, 128, 129, 130], "5": [89, 90, 132, 138, 172, 213, 215, 217, 218], "suppressed_frequ": [89, 90, 92, 93, 128, 129, 130, 131, 139, 140, 141], "suppressed_interval_width": [89, 90, 128, 129, 130], "fastdragi": [89, 90, 127, 211], "fastdragq": [89, 90, 127, 211], "rx": [91, 211, 216, 218], "ry": [91, 211, 218], "xy_gat": 91, "hd": [92, 93, 131, 137, 139, 140, 141, 142, 143, 144, 146, 211], "hdi": [92, 93], "hddragi": [92, 93, 137, 211], "hddragq": [92, 93, 137, 211], "baseband": 94, "shape": [94, 128, 129, 130, 135, 140, 141, 157, 172, 174, 175, 176, 177, 178, 179, 214], "delta": 94, "omega_i": 94, "omega_d": 94, "a_q": 94, "omega_q": 94, "omega": [94, 172], "band": [94, 95], "static": [96, 128, 131, 139, 172, 174, 178, 179, 194, 197, 211], "_single_iq_puls": [96, 211], "resonantli": 96, "x_": 96, "linearli": [96, 213], "adjust": [96, 201, 211, 212, 216], "iq_puls": [96, 211], "2x2": [97, 110, 115], "gate_nam": [98, 213], "impl_class": [98, 213], "set_as_default": 98, "quantum_op_spec": [98, 213], "spec": 98, "reset_condit": [99, 216], "reset_wait": [99, 211], "__default_feedback": 100, "doubl": [100, 101], "underscor": [100, 101], "emphas": [100, 101], "fact": [100, 101], "manual": [100, 101, 174, 213], "__reset": 101, "reset": [102, 103, 153, 181, 211, 212, 213, 216], "necessari": [102, 185, 212, 213, 218], "accommod": 102, "upon": 102, "relax": [103, 211], "compar": [103, 158, 165, 211], "shot": [103, 212], "destroi": 103, "wait_box": 103, "rz_virtual": 104, "rz_acstarkshift": [104, 106], "rz_acstarkshift_cosinerisefal": 104, "rz_acstarkshift_smoothconst": [104, 211], "rz_prx_composit": [104, 211], "strong": 105, "off": [105, 211], "lead": [105, 211], "shift": [105, 152], "ac_stark_puls": 105, "ac_stark_waveform": 106, "increment": [106, 109, 153, 160, 201, 211], "techniqu": [109, 114], "oscil": [109, 160, 201], "shortest": 109, "algebra": [109, 160], "commut": [109, 201], "toward": 109, "hit": 109, "elimin": 109, "multi": 109, "hold": [109, 215], "diagon": 109, "immedi": [109, 185, 211], "conjug": 109, "alpha": [109, 172, 173], "accomplish": 109, "assumpt": [109, 179], "negat": 109, "sigma": [111, 213, 217], "_x": 111, "xz": 111, "90": [111, 217], "sxgate": [111, 211], "parametr": [113, 179, 213, 217], "euler": [113, 114], "lambda": [113, 114, 211, 213], "subsequ": [113, 215], "r_y": [113, 114], "express": [113, 128, 179, 215], "h": [113, 132], "8": [113, 138, 215], "http": [113, 215], "openqasm": 113, "com": 113, "languag": [113, 212, 215], "html": [113, 170, 211], "ugat": [113, 211], "lam": [114, 115], "decomposit": 114, "cdot": 114, "probechannelproperti": 117, "channelconfigur": [117, 123], "realchannelconfig": [117, 119, 121], "iqchannelconfig": 117, "channeldescript": [117, 207, 208], "instruction_t": 119, "uniqu": [119, 181, 212, 213], "waveform_t": 119, "add_instruct": 119, "integ": [119, 120, 151, 197, 218], "manner": 119, "instruction_duration_granular": [120, 122], "instruction_duration_min": [120, 122, 126], "compatible_instruct": [120, 122, 203], "is_iq": [120, 122], "is_virtu": [120, 122], "blocks_compon": [120, 122], "zi": 120, "hdawg": 120, "shfsg": 120, "shfqa": 120, "32": [120, 212], "16": [120, 165, 212, 217], "hack": 120, "frontend": 120, "sent": [120, 211, 212, 215], "might": [120, 212, 213, 216, 218], "duration_to_sampl": 120, "duration_to_second": 120, "duration_to_int_sampl": 120, "messag": [120, 183, 197], "check_min_sampl": 120, "close": [120, 211, 218], "test": [120, 211], "output": [120, 149, 161, 170, 181, 211, 212, 216, 218], "unaccept": 120, "round_duration_to_granular": 120, "round_up": [120, 126], "force_min_dur": [120, 126], "closest": [120, 126], "upconvers": [121, 160], "center_frequ": 122, "integration_start_dead_tim": 122, "integration_stop_dead_tim": 122, "dead": 122, "real": [123, 153, 157, 158, 179, 212], "flux_control": 124, "readout_control": 124, "intern": [124, 211, 212, 218], "standard": [125, 218], "channel_properti": [125, 165, 190], "largest": 126, "fourier": [127, 128, 129, 130, 132, 135, 136, 179], "ansatz": [127, 128, 129, 130], "spectrum": [127, 128, 129, 130, 131, 136], "suppressedpuls": [127, 128, 137, 139], "fastdrag": [127, 129, 130], "fast_drag": [128, 129, 130, 131, 137], "envelop": [128, 129, 130, 131, 133, 134, 138, 140, 141, 142, 143, 144, 145, 153, 211, 217], "domain": [128, 136], "suppress": [128, 131, 132, 136, 138, 139, 140, 142, 143, 145, 146], "interv": [128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 145, 155, 212, 213], "accord": [128, 136, 140, 141, 197, 218], "furthermor": 128, "similarli": [128, 211, 213], "ordinari": 128, "detail": [128, 178, 179, 181, 212, 214, 216], "seri": [128, 129, 130, 131, 132, 133, 134, 144], "width": [128, 131, 165, 177, 178], "last": [128, 216, 218], "potenti": [128, 211], "cutoff": 128, "non_timelike_attribut": [128, 139, 172, 174, 178, 179, 213], "timelik": [128, 139, 172, 174, 178, 179], "dimensionless": [128, 139, 172, 174, 178, 179], "window": [128, 139, 148, 159, 172, 174, 177, 178, 179], "invers": [128, 132, 139, 172, 174, 178, 179], "sum_": [129, 130, 132, 133, 134, 140, 141, 142, 143, 144, 145], "c_n": [129, 130, 133, 134, 136], "t_p": [129, 130, 132, 133, 134, 135, 140, 141, 144, 145], "_sampl": [129, 130, 140, 141, 172, 174, 175, 176, 177, 178, 179, 213], "sample_coord": [129, 130, 140, 141, 172, 174, 175, 176, 177, 178, 179, 213], "coordin": [129, 130, 140, 141, 172, 174, 175, 176, 177, 178, 179], "expans": [131, 132], "choos": [131, 213, 215], "neglect": [131, 139], "_normal": 131, "avoid": [131, 132, 211], "clip": 131, "re": 131, "n_arr": [132, 135], "suppressed_freq_ranges_2darr": 132, "pulse_dur": [132, 133, 134, 135, 136, 142, 143, 144, 146], "time_scaling_factor": 132, "n_points_for_integr": [132, 136], "60": [132, 136], "evalu": [132, 133, 134, 135, 136, 142, 143, 144, 151], "eq": [132, 135, 136, 139, 140, 141, 146], "a_": 132, "nm": 132, "int_": 132, "f_": [132, 172], "l": [132, 217], "hat": 132, "_n": 132, "_m": 132, "mathrm": [132, 172], "m": [132, 217], "row": 132, "column": 132, "denot": [132, 140, 141, 213], "transform": [132, 135, 136, 211, 212, 214, 215], "g_n": [132, 135], "importantli": [132, 212], "fulli": 132, "1d": [132, 135, 136], "2d": [132, 136], "give": [132, 212, 213, 215, 218], "factor": [132, 153, 157, 179, 213], "excess": 132, "small": [132, 211, 212], "integrand": [132, 136], "50": [132, 136, 215], "recommend": [132, 136, 215], "numer": [132, 136, 179], "low": [132, 136, 213], "t_arr": [133, 134, 142, 143, 144], "nth": [135, 144], "analyt": [135, 179, 217], "a7": [135, 136], "frequency_arr": 135, "tensor": 135, "dim": 135, "cartesian": 135, "number_of_cosin": 136, "weights_tupl": 136, "suppressed_freq_ranges_2d_tupl": 136, "solv": [136, 145, 146], "optim": [136, 179, 191, 211], "a5": 136, "a12": 136, "a13": 136, "effici": [136, 216], "rb": 136, "outer": 136, "appendix": [137, 215], "hddrag": [137, 140, 141], "33333333": 138, "6": [138, 215, 217], "22857143": 138, "02857143": 138, "66666667": 138, "95238095": 138, "35714286": 138, "07936508": 138, "00793651": 138, "71428571": 138, "07142857": 138, "47619048": 138, "14285714": 138, "02597403": 138, "0021645": 138, "75000000e": 138, "16666667e": 138, "83333333e": 138, "12121212e": 138, "30303030e": 138, "02": 138, "15850816e": 138, "03": 138, "82750583e": 138, "04": 138, "7": [138, 215], "77777778e": 138, "24444444e": 138, "78787879e": 138, "82828283e": 138, "70240870e": 138, "86480186e": 138, "48640249e": 138, "55400155e": 138, "0th": 138, "solve_cosine_coefs_for_hd_drag": 138, "hd_drag": [139, 140, 141], "b1": [139, 140, 141], "b2": 139, "beta_": [140, 141, 142, 143, 146], "2n": [140, 141, 142, 143, 146], "d_k": [140, 141, 144, 145], "continu": [140, 141], "2k": [140, 141], "slightli": [140, 141], "derivative_coefs_arr": [142, 143], "cosine_coefs_arr": [142, 143, 144], "even": [142, 189, 190, 211, 213, 215], "number_of_suppressed_freq": 145, "suppressed_freq_arr": 146, "b5": 146, "beta_0": 146, "ghz": 146, "realpuls": [147, 152, 207, 209, 210, 213], "multiplexediqpuls": [147, 156], "timetrac": 147, "complexintegr": [147, 158], "thresholdstatediscrimin": 147, "delay_sampl": [148, 150, 158, 159], "acquir": [148, 156, 212], "qb1__readout": 148, "strictli": [149, 212, 213], "strict": [149, 211, 212], "version": [149, 214, 215], "dd": 149, "outcom": 151, "choic": 151, "ok": [151, 153, 154, 157], "get_child_instruct": [151, 154], "child": [151, 154, 189, 190, 207, 210], "collect": [152, 212, 213], "scale_i": [153, 213], "scale_q": [153, 213], "upconvert": 153, "success": 153, "carrier": 153, "get_waveform": [153, 154, 157], "command": [154, 212, 216], "entri": [155, 213], "outsid": [155, 212, 213], "truncat": [155, 188, 211], "neg": 155, "probe_puls": 156, "feedback_signal_label": [158, 211], "transmit": 158, "field": [158, 213, 215], "duration_sampl": 159, "captur": [159, 214], "updat": [160, 211, 216], "sure": 161, "synchron": 165, "program": 165, "critic": 165, "constructor": 165, "account": [165, 179, 211], "pprint": 165, "time_unit": 165, "fix": [165, 212], "graphic": 165, "represent": [165, 197, 212], "symbol": 165, "keysview": 165, "mutat": [165, 166], "vice": [165, 166], "versa": [165, 166], "immut": [165, 166], "add_channel": 165, "channel_nam": [165, 218], "front_pad": 165, "to_dur": 165, "variabl": [165, 189, 211], "front_pad_in_second": 165, "pad_to_hard_box": 165, "pad_to_hard_box_in_second": 165, "smallest": 165, "revers": 165, "preserv": [165, 185, 212, 218], "rear": 165, "reverse_hard_box": 165, "No": [165, 211], "synchronis": 165, "break": 165, "cleanup": [165, 211], "clean": [165, 211], "thing": [165, 175, 176], "has_content_in": 165, "keep": [166, 189], "_instruct": 166, "_durat": 166, "prepend": 166, "pop": 166, "idx": [166, 188], "12": [167, 191, 192, 214], "comp": [167, 211], "1281": 167, "visualis": [169, 211], "view": [170, 211], "browser": 170, "jupyt": 170, "notebook": 170, "ipython": 170, "core": [170, 211], "displai": [170, 211, 215], "inspect": 170, "don": [171, 215], "serial": 171, "reimport": 171, "document": [171, 211, 215], "appear": [171, 212, 215], "chirp": [171, 173, 211], "chirpimag": [171, 211], "freq_start": [172, 173], "freq_stop": [172, 173], "05": [172, 173, 214], "taper": 172, "rectangular": [172, 189], "hann": 172, "nyquist": 172, "zone": 172, "constrain": 172, "5707963267948966": 173, "imaginari": 173, "period": 174, "sinusoid": [174, 177, 178], "made": [175, 176, 197, 213, 214, 215, 218], "dummi": 176, "bug": 176, "fixm": 176, "p": [177, 217], "plateau": 177, "Its": [177, 212], "midpoint": [177, 179], "descript": [178, 197, 215], "minim": [179, 185, 211], "adiabat": [179, 217], "prior": 179, "lambda_n": 179, "tau_": 179, "acceler": 179, "reconstruct": 179, "tau": 179, "lab": 179, "interpol": 179, "v": [179, 207, 210, 211], "voltag": 179, "go": [179, 213], "advis": [179, 215], "look": [179, 213], "mathemat": [179, 214], "heavi": 179, "leakag": [179, 217], "strength": 179, "squid": [179, 211], "asymmetri": [179, 211], "_sample_normalized_slepian": 179, "coord": 179, "_t_tau": 179, "num_sampl": 179, "129": 179, "convers": [179, 213, 215], "solut": 179, "therefor": [179, 212], "scipi": [179, 211], "romb": 179, "_theta_tau": 179, "shown": [179, 211, 216], "tau_puls": 179, "quantum_op": 181, "short": [181, 191], "simpl": [181, 197, 212, 213, 217], "unambigu": [181, 212, 213], "subsystem": 181, "qumod": 181, "pictur": [181, 216], "famili": [181, 212], "plural": 181, "intent": 181, "target": [181, 211, 218], "callabl": [181, 213], "lowest": [181, 212], "docstr": [181, 211], "exact": [181, 213], "first_qubit_basis_ket": 181, "second_qubit_basis_ket": 181, "set_default_implement": [181, 213], "set_default_implementation_for_locu": [181, 213], "cal_data": 183, "impl": [183, 213], "noiseless": 185, "sync": 185, "try": [185, 211], "segmentpoint": 185, "nonsolid": 186, "nevertheless": 186, "tol": [188, 191, 192], "frac": 188, "serv": 188, "pointer": 188, "smaller": [188, 191, 192], "toler": 188, "remaind": 188, "cut_tail": 188, "cut": 188, "tail": 188, "onward": 188, "rewind": 188, "fastforward": 188, "forward": 188, "child_schedul": [189, 190], "child_compon": [189, 190], "neighborhood_compon": [189, 190, 194, 197], "component_dur": [189, 190], "is_alap": [189, 190], "respect": [189, 195, 207, 210, 212, 213], "hard": [189, 211], "rag": [189, 191, 192], "edg": [189, 211], "earliest": [189, 190], "max": 189, "combin": [189, 215], "extend_hard_boundary_in_second": 189, "computational_reson": [189, 190], "These": [189, 190, 197, 211, 212, 213, 218], "ever": [189, 190], "alap": [189, 190, 196, 197, 212, 218], "As": [189, 190, 197, 213, 216], "late": [189, 190, 196, 197], "extend_hard_boundari": 190, "incom": 190, "extens": [191, 192, 211], "reserv": 193, "resourc": 193, "schedulingstrategi": [193, 194, 195, 197, 218], "locus_compon": [194, 197, 213], "asap": [194, 196, 197, 212, 216, 218], "from_readout_trigg": 194, "readout_trigg": 194, "probe_channel": 194, "block_channel": 194, "block_dur": 194, "soon": [196, 197, 211, 216], "fragment": 197, "human": [197, 212, 213], "readabl": [197, 211, 212, 215], "union": [197, 215, 218], "rule": [197, 201, 211, 212, 213, 218], "operand": [197, 218], "pipe": [197, 218], "group": [197, 213, 218], "let": [197, 213], "a_then_b": 197, "c_then_d": 197, "set_alap": [197, 218], "abcd": 197, "abb": 197, "ccd": 197, "all_togeth": 197, "dictat": 197, "flatten": 197, "ancestor": 197, "set_asap": 197, "print": [197, 211, 215, 218], "_idx": 197, "type_hint": 199, "python": [199, 211, 213], "typehint": 199, "psi_1": 201, "psi_2": 201, "decrement": 201, "beforehand": 201, "opposit": 201, "direct": [201, 215], "playlistvalidationerror": 202, "awgschedulevalidationdata": [202, 207], "awgschedulevalidationerror": 202, "invalidinstructionerror": 202, "sampling_r": 203, "min_number_of_sampl": 203, "issue_str": 205, "encount": 205, "channel_descript": [207, 208], "device_constraint": [207, 208, 210], "minimum": [207, 210, 212], "bump": 211, "numpi": [211, 218], "coco": 211, "ruff": 211, "isort": 211, "patch": 211, "issu": [211, 215], "sw": 211, "1429": 211, "deprec": 211, "usag": [211, 213], "broken": 211, "inspect_playlist": [211, 212], "miss": 211, "ifram": 211, "tag": 211, "code": [211, 213, 215, 216], "licens": [211, 214], "vulner": 211, "safe_load": 211, "harm": 211, "remot": 211, "1378": 211, "prx_12": 211, "modulated_drag_crf": 211, "baseclass": 211, "packag": 211, "publish": 211, "doc": [211, 213], "footer": 211, "1392": 211, "pep": 211, "604": 211, "lint": 211, "1230": 211, "rework": 211, "delet": 211, "major": 211, "stai": 211, "register_implement": [211, 212, 213], "split": [211, 212], "seen": 211, "register_g": 211, "validate_oper": 211, "compare_oper": 211, "add_implement": 211, "validate_implement": 211, "set_default": 211, "build_quantum_op": [211, 212], "py": 211, "yield": 211, "didn": 211, "renam": 211, "crystal": 211, "star": 211, "architectur": 211, "crystal_5": 211, "star_6": 211, "mini": 211, "mini_crystal_20": 211, "crystal_20": 211, "1059": 211, "electron": [211, 213, 215], "refactor": 211, "register_gate_implement": 211, "imposs": 211, "retain": [211, 215], "rapidjson": 211, "685": 211, "previous": 211, "x90": 211, "were": 211, "though": [211, 212, 213], "codebas": 211, "467": 211, "speed": 211, "reshap": 211, "faster": 211, "neither": [211, 213], "assing": 211, "signific": 211, "speedup": 211, "anywai": 211, "diffrenet": 211, "broader": 211, "verifi": 211, "compatibili": 211, "migrat": 211, "guid": 211, "builtin": 211, "easili": [211, 214, 218], "quantumcircuit": 211, "extract": 211, "crf_acstarkcrf": 211, "slepian_acstarkcrf": 211, "repo": 211, "organ": [211, 218], "1042": 211, "disabl": 211, "horizont": 211, "scroll": 211, "toggl": 211, "cover": 211, "concept": [211, 213, 214], "531": 211, "gitlab": 211, "public": 211, "page": [211, 214, 215], "776": 211, "mr": 211, "514": 211, "client": [211, 212, 213, 214], "apach": [211, 215], "extlink": 211, "sphinx": 211, "916": 211, "intersphinx": 211, "665": 211, "becaus": [211, 213], "proper": 211, "realiz": [211, 217], "former": 211, "semant": [211, 212], "disturb": 211, "774": 211, "leak": 211, "web": 211, "artifact": 211, "resetwait": 211, "comfort": [211, 213], "timelin": [211, 212], "redisplai": 211, "upcom": 211, "releas": 211, "prefer": [211, 213, 215], "font": 211, "viewer": 211, "358": 211, "typo": 211, "api": [211, 213, 214, 218], "workflow": [211, 218], "meth": 211, "pulla": [211, 214, 218], "crash": 211, "discoveri": 211, "throw": 211, "sc": 211, "nonsens": 211, "mcm": 211, "cc_prx": [211, 216], "merge_dict": 211, "crf_crf": 211, "interfac": [211, 213, 215], "feedback_label": 211, "conditional_prx": 211, "hopefulli": 211, "yml": 211, "conditionalreset": 211, "mid": 211, "constant_qnd": 211, "qndness": 211, "phase_increment_befor": 211, "sign": 211, "phase_transform": 211, "fulfil": 211, "satisfi": [211, 216], "conditionalprx": 211, "accept": [211, 215], "signifi": 211, "weigth": 211, "canon": [211, 213], "whitelist": 211, "2112": 211, "write": [211, 213, 215], "1831": 211, "drag_crf_sx": 211, "drag_gaussian_sx": 211, "prx_u": 211, "prx_sx": 211, "_x_pi_puls": 211, "547": 211, "prioritis": 211, "1929": 211, "1468": 211, "programm": 211, "1925": 211, "crude": 211, "visual": [211, 212, 216], "measure_nop": 211, "validate_move_instruct": 211, "2056": 211, "pipelin": [211, 216], "overview": 212, "terminologi": 212, "deliv": 212, "send": [212, 216], "assembli": 212, "batch": 212, "summar": 212, "imag": [212, 216], "illustr": [212, 216], "visibl": 212, "microwav": [212, 214], "ambigu": 212, "machin": 212, "violat": 212, "concern": 212, "philosophi": 212, "inaccess": 212, "attempt": 212, "smart": 212, "magic": 212, "inconsist": 212, "transpar": 212, "technic": 212, "apart": 212, "few": 212, "instant": 212, "thought": [212, 216], "desir": [212, 218], "read": [212, 216, 218], "disjoint": [212, 218], "partli": 212, "figur": [212, 216], "demonstr": 212, "explain": 212, "necessarili": [212, 213, 215], "variou": [212, 213], "runtim": [212, 216, 218], "bridg": 212, "gap": 212, "repeat": [212, 218], "repetit": 212, "encod": 212, "aim": 212, "fit": [212, 215], "chunk": 212, "neat": 212, "metadata": 213, "question": [213, 218], "cnot": 213, "NOT": 213, "On": [213, 216], "hand": 213, "frozen": 213, "programmat": 213, "procedur": 213, "invok": 213, "random": 213, "benchmark": 213, "getter": 213, "qc": 213, "introduc": 213, "emphasi": 213, "def": 213, "_default": 213, "implementation_": 213, "default_prx_qb1": 213, "special_prx_qb1": 213, "my_special_prx": 213, "default_box": 213, "chain": [213, 216], "default_cz_box": 213, "pure": 213, "develop": 213, "thumb": 213, "rest": 213, "simplifi": [213, 216], "educ": 213, "__class__": 213, "__name__": 213, "subsect": 213, "relai": 213, "live": 213, "asymmetr": 213, "tri": 213, "replic": 213, "mandatori": 213, "alter": 213, "physcial": 213, "averag": 213, "mu": 213, "spread": 213, "recip": 213, "offset_coord": 213, "exp": 213, "resampl": 213, "understand": [213, 216, 217], "unitless": 213, "scalar_coeffieci": 213, "quick": [213, 214, 218], "simplest": 213, "composteg": 213, "compositehadamard": 213, "hadamard": 213, "_this_": 213, "member_prx": 213, "latter": 213, "onelin": 213, "prx_mycoolwaveform": 213, "coolwaveformi": 213, "coolwaveformq": 213, "my": 213, "cool": 213, "cz_mycoolwaveform": 213, "coolcouplerwaveform": 213, "coolqubitwaveform": 213, "measure_mycoolwaveform": 213, "preload": 213, "altogeth": 213, "snippet": 213, "cnot_matrix": 213, "cnot_op": 213, "my_build": 213, "my_cnot_impl": 213, "mycnotclass": 213, "implementation_class": 213, "access": [213, 218], "9": [214, 215, 216, 218], "date": [214, 215], "2025": 214, "06": 214, "high": [214, 217], "unifi": 214, "hide": 214, "But": 214, "framework": [214, 218], "machineri": 214, "standalon": 214, "librari": [214, 216], "encourag": [214, 218], "familiar": 214, "especi": [214, 218], "miscellan": 214, "pitfal": 214, "changelog": 214, "search": 214, "januari": 215, "2004": [215, 217], "www": 215, "org": 215, "AND": 215, "FOR": 215, "reproduct": 215, "distribut": 215, "shall": 215, "licensor": 215, "copyright": 215, "owner": 215, "entiti": 215, "author": 215, "grant": 215, "legal": 215, "power": 215, "indirect": 215, "manag": 215, "contract": 215, "ii": 215, "ownership": 215, "fifti": 215, "percent": 215, "outstand": 215, "iii": 215, "benefici": 215, "exercis": 215, "permiss": 215, "modif": 215, "softwar": [215, 217], "mechan": 215, "translat": 215, "media": 215, "authorship": 215, "notic": [215, 218], "editori": 215, "revis": 215, "elabor": 215, "mere": 215, "bind": 215, "thereof": 215, "contribut": 215, "intention": 215, "submit": 215, "inclus": 215, "behalf": 215, "verbal": 215, "written": 215, "commun": 215, "mail": 215, "discuss": 215, "conspicu": 215, "Not": [215, 218], "contributor": 215, "whom": 215, "incorpor": 215, "herebi": 215, "perpetu": 215, "worldwid": 215, "exclus": 215, "charg": 215, "royalti": 215, "free": [215, 217], "irrevoc": 215, "reproduc": 215, "publicli": 215, "sublicens": 215, "patent": 215, "offer": 215, "sell": 215, "claim": 215, "infring": 215, "alon": 215, "institut": 215, "litig": 215, "counterclaim": 215, "lawsuit": 215, "alleg": 215, "contributori": 215, "termin": 215, "redistribut": 215, "medium": 215, "meet": 215, "recipi": 215, "promin": 215, "trademark": 215, "pertain": 215, "along": 215, "wherev": 215, "third": 215, "parti": 215, "alongsid": 215, "addendum": 215, "constru": 215, "statement": [215, 216], "compli": 215, "submiss": 215, "notwithstand": 215, "herein": 215, "supersed": 215, "agreement": 215, "regard": 215, "trade": 215, "servic": 215, "customari": 215, "disclaim": 215, "warranti": 215, "law": 215, "agre": 215, "AS": 215, "OR": 215, "OF": 215, "kind": 215, "titl": 215, "merchant": 215, "sole": 215, "risk": 215, "liabil": 215, "event": 215, "theori": 215, "tort": 215, "neglig": 215, "deliber": 215, "grossli": 215, "liabl": 215, "damag": 215, "incident": 215, "consequenti": 215, "inabl": 215, "loss": 215, "goodwil": 215, "stoppag": 215, "failur": 215, "malfunct": 215, "commerci": 215, "fee": 215, "indemn": 215, "oblig": 215, "indemnifi": 215, "harmless": 215, "incur": 215, "assert": 215, "boilerpl": 215, "enclos": 215, "bracket": 215, "comment": 215, "easier": 215, "identif": 215, "archiv": 215, "2024": [215, 217], "complianc": 215, "govern": 215, "show": 216, "flexibl": 216, "goal": 216, "finit": 216, "condition": 216, "qccsw": 216, "excut": 216, "too": 216, "earli": 216, "facilit": 216, "travel": 216, "conditionalinstrucion": 216, "equaival": 216, "feedaback_kei": 216, "reset_qb2": 216, "set_qb3_to_1": 216, "cc_prx_qb4": 216, "2nd": [216, 217], "prx_qb3": 216, "prx_qb4": 216, "80e": [216, 218], "clariti": 216, "bottom": 216, "master": 216, "slave": 216, "compens": 216, "trigger_delai": 216, "explan": 216, "end_delai": 216, "spcecifi": 216, "trigger_mast": 216, "emit": 216, "daisi": 216, "central": 216, "cabl": 216, "eric": 217, "hyypp": 217, "\u00e4": 217, "antti": 217, "vep": 217, "inen": 217, "miha": 217, "papi": 217, "\u010d": 217, "chun": 217, "fai": 217, "chan": 217, "sinan": 217, "inel": 217, "alessandro": 217, "landra": 217, "wei": 217, "liu": 217, "\u00fc": 217, "rgen": 217, "luu": 217, "fabian": 217, "marxer": 217, "caspar": 217, "ockeloen": 217, "korppi": 217, "reduc": 217, "superconduct": 217, "processor": 217, "030353": 217, "doi": 217, "1103": 217, "prxquantum": 217, "john": 217, "martini": 217, "michael": 217, "geller": 217, "_z": 217, "phy": 217, "rev": 217, "022307": 217, "aug": 217, "2014": 217, "arxiv": 217, "1402": 217, "5467": 217, "physreva": 217, "lyon": 217, "digit": 217, "prentic": 217, "hall": 217, "edit": 217, "isbn": 217, "978": 217, "0131089891": 217, "cecilia": 217, "gisel": 217, "jarn": 217, "heurist": 217, "approach": 217, "anal": 217, "afa": 217, "29": 217, "51": 217, "57": 217, "2018": 217, "1703": 217, "06812": 217, "31527": 217, "analesafa": 217, "eyob": 217, "sete": 217, "nicola": 217, "didier": 217, "angela": 217, "chen": 217, "shobhan": 217, "kulshreshtha": 217, "riccardo": 217, "manenti": 217, "stefano": 217, "poletto": 217, "entangl": 217, "appl": 217, "024050": 217, "2021": 217, "2104": 217, "03511": 217, "physrevappli": 217, "youngkyu": 217, "sung": 217, "leon": 217, "ding": 217, "jochen": 217, "braum\u00fcller": 217, "veps\u00e4l\u00e4inen": 217, "bharath": 217, "kannan": 217, "morten": 217, "kjaergaard": 217, "ami": 217, "green": 217, "gabriel": 217, "o": 217, "samach": 217, "chri": 217, "mcnalli": 217, "david": 217, "kim": 217, "alexand": 217, "melvil": 217, "bethani": 217, "niedzielski": 217, "molli": 217, "schwartz": 217, "jonilyn": 217, "yoder": 217, "terri": 217, "orlando": 217, "simon": 217, "gustavsson": 217, "william": 217, "oliv": 217, "fidel": 217, "zz": 217, "021058": 217, "jun": 217, "2011": 217, "01261": 217, "physrevx": 217, "capabl": 218, "ask": 218, "recogn": 218, "cz_gate_impl": 218, "prx_gate_impl": 218, "measure_gate_impl": 218, "keyword": 218, "instanti": 218, "x180": 218, "y90": 218, "100e": 218, "decid": 218, "p1": 218, "p2": 218, "handi": 218, "circuit3": 218, "sub": 218, "word": 218, "slide": 218, "past": 218, "neighbour": 218, "neighbourhood": 218, "worri": 218, "advers": 218, "ruin": 218, "best": 218, "arrang": 218, "aid": 218, "discov": 218, "all_qubit": 218, "get_neighbor_locus_compon": 218, "160e": 218, "cz_schedul": 218, "forget": 218}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [116, 0, 0, "-", "playlist"], [180, 0, 0, "-", "quantum_ops"], [185, 0, 0, "-", "scheduler"], [193, 0, 0, "-", "timebox"], [198, 0, 0, "-", "utils"], [202, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "default_implementations"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 4, 1, "", "build"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 4, 1, "", "needs_calibration"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [73, 0, 0, "-", "move"], [80, 0, 0, "-", "prx"], [98, 1, 1, "", "register_implementation"], [99, 0, 0, "-", "reset"], [104, 0, 0, "-", "rz"], [111, 0, 0, "-", "sx"], [113, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"], [71, 2, 1, "", "ProbePulse_CustomWaveforms_noIntegration"], [72, 2, 1, "", "Probe_Constant"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration": [[71, 4, 1, "", "_build_instructions"], [71, 4, 1, "", "_call"], [71, 3, 1, "", "_multiplexed_timeboxes"], [71, 3, 1, "", "dependent_waves"], [71, 4, 1, "", "duration_in_seconds"], [71, 4, 1, "", "get_locus_mapping_name"], [71, 4, 1, "", "probe_timebox"], [71, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.measure.Probe_Constant": [[72, 3, 1, "", "dependent_waves"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "wave_i"], [72, 3, 1, "", "wave_q"]], "iqm.pulse.gates.move": [[74, 2, 1, "", "MOVE_CRF_CRF"], [75, 2, 1, "", "MOVE_CustomWaveforms"], [76, 2, 1, "", "MOVE_TGSS_CRF"], [77, 2, 1, "", "MoveMarker"], [78, 1, 1, "", "apply_move_gate_phase_corrections"], [79, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[74, 3, 1, "", "coupler_wave"], [74, 3, 1, "", "parameters"], [74, 3, 1, "", "qubit_wave"], [74, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[75, 4, 1, "", "_call"], [75, 3, 1, "", "coupler_wave"], [75, 3, 1, "", "parameters"], [75, 3, 1, "", "qubit_wave"], [75, 3, 1, "", "root_parameters"], [75, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[76, 3, 1, "", "coupler_wave"], [76, 3, 1, "", "parameters"], [76, 3, 1, "", "qubit_wave"], [76, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[77, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[81, 2, 1, "", "ABC_Constant_smooth"], [82, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [83, 2, 1, "", "PRX_CustomWaveforms"], [84, 2, 1, "", "PRX_CustomWaveformsSX"], [85, 2, 1, "", "PRX_DRAGCosineRiseFall"], [86, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [87, 2, 1, "", "PRX_DRAGGaussian"], [88, 2, 1, "", "PRX_DRAGGaussianSX"], [89, 2, 1, "", "PRX_FastDrag"], [90, 2, 1, "", "PRX_FastDragSX"], [91, 2, 1, "", "PRX_GateImplementation"], [92, 2, 1, "", "PRX_HdDrag"], [93, 2, 1, "", "PRX_HdDragSX"], [94, 2, 1, "", "PRX_ModulatedCustomWaveForms"], [95, 2, 1, "", "PRX_ModulatedDRAGCosineRiseFall"], [96, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [97, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[81, 4, 1, "", "_call"], [81, 4, 1, "", "_fall_pulse"], [81, 4, 1, "", "_main_pulse"], [81, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[82, 3, 1, "", "fall_waveform"], [82, 3, 1, "", "main_waveform"], [82, 3, 1, "", "parameters"], [82, 3, 1, "", "rise_waveform"], [82, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[83, 4, 1, "", "_get_pulse"], [83, 3, 1, "", "dependent_waves"], [83, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[84, 4, 1, "", "_call"], [84, 4, 1, "", "_get_pulse"], [84, 3, 1, "", "dependent_waves"], [84, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[85, 4, 1, "", "_get_pulse"], [85, 3, 1, "", "dependent_waves"], [85, 3, 1, "", "excluded_parameters"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "wave_i"], [85, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[86, 4, 1, "", "_get_pulse"], [86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "excluded_parameters"], [86, 3, 1, "", "parameters"], [86, 3, 1, "", "wave_i"], [86, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[87, 3, 1, "", "dependent_waves"], [87, 3, 1, "", "parameters"], [87, 3, 1, "", "wave_i"], [87, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[88, 3, 1, "", "dependent_waves"], [88, 3, 1, "", "parameters"], [88, 3, 1, "", "wave_i"], [88, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDrag": [[89, 3, 1, "", "dependent_waves"], [89, 3, 1, "", "parameters"], [89, 3, 1, "", "wave_i"], [89, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_FastDragSX": [[90, 3, 1, "", "dependent_waves"], [90, 3, 1, "", "parameters"], [90, 3, 1, "", "wave_i"], [90, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[91, 4, 1, "", "_call"], [91, 4, 1, "", "clifford"], [91, 4, 1, "", "get_locus_mapping_name"], [91, 4, 1, "", "rx"], [91, 4, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_HdDrag": [[92, 3, 1, "", "dependent_waves"], [92, 3, 1, "", "parameters"], [92, 3, 1, "", "wave_i"], [92, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_HdDragSX": [[93, 3, 1, "", "dependent_waves"], [93, 3, 1, "", "parameters"], [93, 3, 1, "", "wave_i"], [93, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms": [[94, 4, 1, "", "_get_pulse"], [94, 3, 1, "", "dependent_waves"], [94, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall": [[95, 4, 1, "", "_get_pulse"], [95, 3, 1, "", "dependent_waves"], [95, 3, 1, "", "excluded_parameters"], [95, 3, 1, "", "parameters"], [95, 3, 1, "", "wave_i"], [95, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[96, 4, 1, "", "_call"], [96, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[100, 6, 1, "", "RESET_FEEDBACK_KEY"], [101, 6, 1, "", "RESET_MEASUREMENT_KEY"], [102, 2, 1, "", "Reset_Conditional"], [103, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[102, 4, 1, "", "_call"], [102, 4, 1, "", "get_locus_mapping_name"], [102, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[103, 4, 1, "", "_call"], [103, 4, 1, "", "duration_in_seconds"], [103, 4, 1, "", "get_custom_locus_mapping"], [103, 3, 1, "", "parameters"], [103, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[105, 2, 1, "", "RZ_ACStarkShift"], [106, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [107, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [108, 2, 1, "", "RZ_PRX_Composite"], [109, 2, 1, "", "RZ_Virtual"], [110, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[105, 4, 1, "", "_ac_stark_pulse"], [105, 4, 1, "", "_call"], [105, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[106, 3, 1, "", "ac_stark_waveform"], [106, 3, 1, "", "parameters"], [106, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[107, 3, 1, "", "fall_waveform"], [107, 3, 1, "", "main_waveform"], [107, 3, 1, "", "parameters"], [107, 3, 1, "", "rise_waveform"], [107, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_PRX_Composite": [[108, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.rz.RZ_Virtual": [[109, 4, 1, "", "_call"], [109, 4, 1, "", "duration_in_seconds"], [109, 4, 1, "", "get_locus_mapping_name"], [109, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[112, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[112, 4, 1, "", "_call"], [112, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[114, 2, 1, "", "UGate"], [115, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[114, 4, 1, "", "_call"], [114, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[117, 0, 0, "-", "channel"], [127, 0, 0, "-", "fast_drag"], [137, 0, 0, "-", "hd_drag"], [147, 0, 0, "-", "instructions"], [162, 0, 0, "-", "playlist"], [163, 0, 0, "-", "schedule"], [168, 0, 0, "-", "visualisation"], [171, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[118, 2, 1, "", "ChannelConfiguration"], [119, 2, 1, "", "ChannelDescription"], [120, 2, 1, "", "ChannelProperties"], [121, 2, 1, "", "IQChannelConfig"], [122, 2, 1, "", "ProbeChannelProperties"], [123, 2, 1, "", "RealChannelConfig"], [124, 1, 1, "", "get_channel_properties"], [125, 1, 1, "", "get_channel_properties_from_station_settings"], [126, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[119, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[120, 3, 1, "", "blocks_component"], [120, 3, 1, "", "compatible_instructions"], [120, 4, 1, "", "duration_to_int_samples"], [120, 4, 1, "", "duration_to_samples"], [120, 4, 1, "", "duration_to_seconds"], [120, 3, 1, "", "instruction_duration_granularity"], [120, 3, 1, "", "instruction_duration_min"], [120, 3, 1, "", "is_iq"], [120, 3, 1, "", "is_virtual"], [120, 4, 1, "", "round_duration_to_granularity"], [120, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[121, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[122, 3, 1, "", "center_frequency"], [122, 3, 1, "", "integration_start_dead_time"], [122, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[123, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.fast_drag": [[128, 2, 1, "", "FastDrag"], [129, 2, 1, "", "FastDragI"], [130, 2, 1, "", "FastDragQ"], [131, 2, 1, "", "SuppressedPulse"], [132, 1, 1, "", "compute_matrix_of_summed_fourier_transform_inner_products"], [133, 1, 1, "", "evaluate_fast_drag_i_envelope"], [134, 1, 1, "", "evaluate_fast_drag_q_envelope"], [135, 1, 1, "", "fourier_transform_of_cos_basis_functions_as_tensor"], [136, 1, 1, "", "solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.fast_drag.FastDrag": [[128, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.fast_drag.FastDragI": [[129, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.FastDragQ": [[130, 4, 1, "", "_sample"]], "iqm.pulse.playlist.fast_drag.SuppressedPulse": [[131, 4, 1, "", "_normalize"]], "iqm.pulse.playlist.hd_drag": [[138, 6, 1, "", "COSINE_COEFFICIENTS_DICT"], [139, 2, 1, "", "HdDrag"], [140, 2, 1, "", "HdDragI"], [141, 2, 1, "", "HdDragQ"], [142, 1, 1, "", "evaluate_hd_drag_i_envelope"], [143, 1, 1, "", "evaluate_hd_drag_q_envelope"], [144, 1, 1, "", "evaluate_nth_derivative_of_basis_envelope"], [145, 1, 1, "", "solve_cosine_coefs_for_hd_drag"], [146, 1, 1, "", "solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.hd_drag.HdDrag": [[139, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.hd_drag.HdDragI": [[140, 4, 1, "", "_sample"]], "iqm.pulse.playlist.hd_drag.HdDragQ": [[141, 4, 1, "", "_sample"]], "iqm.pulse.playlist.instructions": [[148, 2, 1, "", "AcquisitionMethod"], [149, 2, 1, "", "Block"], [150, 2, 1, "", "ComplexIntegration"], [151, 2, 1, "", "ConditionalInstruction"], [152, 2, 1, "", "FluxPulse"], [153, 2, 1, "", "IQPulse"], [154, 2, 1, "", "Instruction"], [155, 2, 1, "", "MultiplexedIQPulse"], [156, 2, 1, "", "ReadoutTrigger"], [157, 2, 1, "", "RealPulse"], [158, 2, 1, "", "ThresholdStateDiscrimination"], [159, 2, 1, "", "TimeTrace"], [160, 2, 1, "", "VirtualRZ"], [161, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[148, 3, 1, "", "delay_samples"], [148, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[150, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[151, 3, 1, "", "condition"], [151, 4, 1, "", "get_child_instructions"], [151, 3, 1, "", "outcomes"], [151, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[152, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[153, 4, 1, "", "get_waveforms"], [153, 3, 1, "", "modulation_frequency"], [153, 3, 1, "", "phase"], [153, 3, 1, "", "phase_increment"], [153, 3, 1, "", "scale_i"], [153, 3, 1, "", "scale_q"], [153, 4, 1, "", "validate"], [153, 3, 1, "", "wave_i"], [153, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[154, 4, 1, "", "copy"], [154, 3, 1, "", "duration"], [154, 4, 1, "", "get_child_instructions"], [154, 4, 1, "", "get_waveforms"], [154, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[155, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[156, 3, 1, "", "acquisitions"], [156, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[157, 4, 1, "", "get_waveforms"], [157, 3, 1, "", "scale"], [157, 4, 1, "", "validate"], [157, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[158, 3, 1, "", "feedback_signal_label"], [158, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[159, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[160, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[164, 2, 1, "", "Nothing"], [165, 2, 1, "", "Schedule"], [166, 2, 1, "", "Segment"], [167, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[165, 4, 1, "", "add_channels"], [165, 4, 1, "", "append"], [165, 4, 1, "", "channels"], [165, 4, 1, "", "cleanup"], [165, 4, 1, "", "copy"], [165, 5, 1, "", "duration"], [165, 4, 1, "", "duration_in_seconds"], [165, 4, 1, "", "extend"], [165, 4, 1, "", "front_pad"], [165, 4, 1, "", "front_pad_in_seconds"], [165, 4, 1, "", "has_content_in"], [165, 4, 1, "", "items"], [165, 4, 1, "", "pad_to_hard_box"], [165, 4, 1, "", "pad_to_hard_box_in_seconds"], [165, 4, 1, "", "pprint"], [165, 4, 1, "", "reverse"], [165, 4, 1, "", "reverse_hard_box"], [165, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[166, 3, 1, "", "_duration"], [166, 3, 1, "", "_instructions"], [166, 4, 1, "", "append"], [166, 4, 1, "", "copy"], [166, 5, 1, "", "duration"], [166, 4, 1, "", "extend"], [166, 4, 1, "", "pop"], [166, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[169, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[170, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[172, 2, 1, "", "Chirp"], [173, 2, 1, "", "ChirpImag"], [174, 2, 1, "", "Cosine"], [175, 2, 1, "", "CosineFall"], [176, 2, 1, "", "CosineRise"], [177, 2, 1, "", "CosineRiseFallDerivative"], [178, 2, 1, "", "ModulatedCosineRiseFall"], [179, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[172, 4, 1, "", "_sample"], [172, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[173, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[174, 4, 1, "", "_sample"], [174, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[175, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[176, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[177, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[178, 4, 1, "", "_sample"], [178, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[179, 4, 1, "", "_sample"], [179, 4, 1, "", "_sample_normalized_slepian"], [179, 4, 1, "", "_t_tau"], [179, 4, 1, "", "_theta_tau"], [179, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[181, 2, 1, "", "QuantumOp"], [182, 6, 1, "", "QuantumOpTable"], [183, 1, 1, "", "validate_locus_calibration"], [184, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[181, 3, 1, "", "arity"], [181, 4, 1, "", "copy"], [181, 5, 1, "", "default_implementation"], [181, 3, 1, "", "defaults_for_locus"], [181, 3, 1, "", "factorizable"], [181, 4, 1, "", "get_default_implementation_for_locus"], [181, 3, 1, "", "implementations"], [181, 3, 1, "", "name"], [181, 3, 1, "", "params"], [181, 4, 1, "", "set_default_implementation"], [181, 4, 1, "", "set_default_implementation_for_locus"], [181, 3, 1, "", "symmetric"], [181, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[186, 6, 1, "", "BLOCKING"], [187, 6, 1, "", "NONSOLID"], [188, 2, 1, "", "SegmentPointer"], [189, 1, 1, "", "extend_hard_boundary"], [190, 1, 1, "", "extend_hard_boundary_in_seconds"], [191, 1, 1, "", "extend_schedule"], [192, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[188, 3, 1, "", "TOL"], [188, 4, 1, "", "cut_tail"], [188, 4, 1, "", "fastforward"], [188, 3, 1, "", "frac"], [188, 4, 1, "", "get"], [188, 3, 1, "", "idx"], [188, 4, 1, "", "next"], [188, 5, 1, "", "remainder"], [188, 4, 1, "", "rewind"], [188, 3, 1, "", "source"], [188, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[194, 2, 1, "", "MultiplexedProbeTimeBox"], [195, 2, 1, "", "SchedulingAlgorithm"], [196, 2, 1, "", "SchedulingStrategy"], [197, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[194, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[195, 3, 1, "", "HARD_BOUNDARY"], [195, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[196, 3, 1, "", "ALAP"], [196, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[197, 3, 1, "", "atom"], [197, 4, 1, "", "atomic"], [197, 3, 1, "", "children"], [197, 4, 1, "", "composite"], [197, 3, 1, "", "label"], [197, 3, 1, "", "locus_components"], [197, 3, 1, "", "neighborhood_components"], [197, 4, 1, "", "print"], [197, 3, 1, "", "scheduling"], [197, 3, 1, "", "scheduling_algorithm"], [197, 4, 1, "", "set_alap"], [197, 4, 1, "", "set_asap"], [197, 4, 1, "", "validate"]], "iqm.pulse.utils": [[199, 1, 1, "", "map_waveform_param_types"], [200, 1, 1, "", "normalize_angle"], [201, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[203, 2, 1, "", "AWGScheduleValidationData"], [204, 7, 1, "", "AWGScheduleValidationError"], [205, 7, 1, "", "InvalidInstructionError"], [206, 7, 1, "", "PlaylistValidationError"], [207, 1, 1, "", "validate_awg_and_schedule_compatibility"], [208, 1, 1, "", "validate_channel"], [209, 1, 1, "", "validate_instruction_and_wf_length"], [210, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 212, 217], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 78, 79, 97, 98, 100, 101, 110, 115, 124, 125, 126, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 167, 170, 182, 183, 184, 186, 187, 189, 190, 191, 192, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 214, 216], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 78, 79, 97, 98, 100, 101, 110, 115, 124, 125, 126, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 167, 170, 182, 183, 184, 186, 187, 189, 190, 191, 192, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 214], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 218], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 212, 213], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 78, 79, 97, 98, 100, 101, 110, 115, 213], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 167], "get_implementation_class": 65, "measur": [66, 216], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "probepulse_customwaveforms_nointegr": 71, "probe_const": 72, "move": [73, 78, 79], "move_crf_crf": 74, "move_customwaveform": 75, "move_tgss_crf": 76, "movemark": 77, "apply_move_gate_phase_correct": 78, "validate_move_instruct": 79, "prx": [80, 97], "abc_constant_smooth": 81, "constant_prx_with_smooth_rise_fal": 82, "prx_customwaveform": 83, "prx_customwaveformssx": 84, "prx_dragcosinerisefal": 85, "prx_dragcosinerisefallsx": 86, "prx_draggaussian": 87, "prx_draggaussiansx": 88, "prx_fastdrag": 89, "prx_fastdragsx": 90, "prx_gateimplement": 91, "prx_hddrag": 92, "prx_hddragsx": 93, "prx_modulatedcustomwaveform": 94, "prx_modulateddragcosinerisefal": 95, "prx_singlepulse_gateimplement": 96, "get_unitary_prx": 97, "register_implement": 98, "reset": [99, 100, 101], "reset_feedback_kei": 100, "reset_measurement_kei": 101, "reset_condit": 102, "reset_wait": 103, "rz": [104, 110], "rz_acstarkshift": 105, "rz_acstarkshift_cosinerisefal": 106, "rz_acstarkshift_smoothconst": 107, "rz_prx_composit": 108, "rz_virtual": 109, "get_unitary_rz": 110, "sx": 111, "sxgate": 112, "u": [113, 115], "ugat": 114, "get_unitary_u": 115, "playlist": [116, 124, 125, 126, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 162, 167, 170, 212], "channel": [117, 124, 125, 126], "channelconfigur": 118, "channeldescript": 119, "channelproperti": 120, "iqchannelconfig": 121, "probechannelproperti": 122, "realchannelconfig": 123, "get_channel_properti": 124, "get_channel_properties_from_station_set": 125, "round_duration_to_granularity_sampl": 126, "fast_drag": [127, 132, 133, 134, 135, 136], "fastdrag": 128, "fastdragi": 129, "fastdragq": 130, "suppressedpuls": 131, "compute_matrix_of_summed_fourier_transform_inner_product": 132, "evaluate_fast_drag_i_envelop": 133, "evaluate_fast_drag_q_envelop": 134, "fourier_transform_of_cos_basis_functions_as_tensor": 135, "solve_fast_coefficients_for_given_weights_and_rang": 136, "hd_drag": [137, 138, 142, 143, 144, 145, 146], "cosine_coefficients_dict": 138, "hddrag": 139, "hddragi": 140, "hddragq": 141, "evaluate_hd_drag_i_envelop": 142, "evaluate_hd_drag_q_envelop": 143, "evaluate_nth_derivative_of_basis_envelop": 144, "solve_cosine_coefs_for_hd_drag": 145, "solve_hd_drag_coefficients_from_suppressed_frequ": 146, "instruct": [147, 154, 212, 213], "acquisitionmethod": 148, "block": [149, 186], "complexintegr": 150, "conditionalinstruct": 151, "fluxpuls": 152, "iqpuls": 153, "multiplexediqpuls": 155, "readouttrigg": [156, 216], "realpuls": 157, "thresholdstatediscrimin": 158, "timetrac": 159, "virtualrz": 160, "wait": 161, "schedul": [163, 165, 167, 185, 186, 187, 189, 190, 191, 192, 212, 218], "noth": 164, "segment": 166, "visualis": [168, 170], "base": [169, 170, 213], "inspect_playlist": 170, "waveform": [171, 213], "chirp": 172, "chirpimag": 173, "cosin": 174, "cosinefal": 175, "cosineris": 176, "cosinerisefallderiv": 177, "modulatedcosinerisefal": 178, "slepian": 179, "quantum_op": [180, 182, 183, 184], "quantumop": [181, 212, 213], "quantumopt": 182, "validate_locus_calibr": 183, "validate_op_calibr": 184, "nonsolid": 187, "segmentpoint": 188, "extend_hard_boundari": 189, "extend_hard_boundary_in_second": 190, "extend_schedul": 191, "extend_schedule_new": 192, "timebox": [193, 197, 212, 218], "multiplexedprobetimebox": 194, "schedulingalgorithm": 195, "schedulingstrategi": 196, "util": [198, 199, 200, 201], "map_waveform_param_typ": 199, "normalize_angl": 200, "phase_transform": 201, "valid": [202, 204, 205, 206, 207, 208, 209, 210], "awgschedulevalidationdata": 203, "awgschedulevalidationerror": 204, "invalidinstructionerror": 205, "playlistvalidationerror": 206, "validate_awg_and_schedule_compat": 207, "validate_channel": 208, "validate_instruction_and_wf_length": 209, "validate_playlist_compat": 210, "changelog": 211, "version": 211, "9": 211, "12": 211, "0": 211, "2025": 211, "05": 211, "30": 211, "featur": [211, 218], "11": 211, "28": 211, "10": 211, "21": 211, "19": 211, "bug": 211, "fix": 211, "8": 211, "7": 211, "1": 211, "04": 211, "6": 211, "5": 211, "25": 211, "4": 211, "22": 211, "3": 211, "17": 211, "2": 211, "09": 211, "break": 211, "chang": 211, "13": 211, "07": 211, "03": 211, "02": 211, "27": 211, "26": 211, "24": 211, "20": 211, "23": 211, "18": 211, "16": 211, "15": 211, "01": 211, "14": 211, "08": 211, "2024": 211, "29": 211, "31": 211, "06": 211, "concept": 212, "class": [212, 213], "quick": 212, "custom": 213, "implement": 213, "calibr": 213, "data": 213, "more": 213, "regist": 213, "content": 214, "indic": 214, "tabl": 214, "licens": 215, "time": 216, "fast": 216, "feedback": 216, "us": 218, "creat": 218, "compos": 218, "resolv": 218, "miscellan": 218, "common": 218, "pitfal": 218}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "builder": [[4, "module-iqm.pulse.builder"]], "CircuitOperation": [[5, "circuitoperation"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[17, "compositecache"]], "CompositeGate": [[18, "compositegate"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "GateImplementation": [[20, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[31, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[33, "module-iqm.pulse.gates"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "Barrier": [[35, "barrier"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[41, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[44, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[55, "delay"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[58, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[60, "xygate"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[67, "measure-constant"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "ProbePulse_CustomWaveforms_noIntegration": [[71, "probepulse-customwaveforms-nointegration"]], "Probe_Constant": [[72, "probe-constant"]], "move": [[73, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[74, "move-crf-crf"]], "MOVE_CustomWaveforms": [[75, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[76, "move-tgss-crf"]], "MoveMarker": [[77, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[78, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[79, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[80, "module-iqm.pulse.gates.prx"]], "ABC_Constant_smooth": [[81, "abc-constant-smooth"]], "Constant_PRX_with_smooth_rise_fall": [[82, "constant-prx-with-smooth-rise-fall"]], "PRX_CustomWaveforms": [[83, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[84, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[85, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[86, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[87, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[88, "prx-draggaussiansx"]], "PRX_FastDrag": [[89, "prx-fastdrag"]], "PRX_FastDragSX": [[90, "prx-fastdragsx"]], "PRX_GateImplementation": [[91, "prx-gateimplementation"]], "PRX_HdDrag": [[92, "prx-hddrag"]], "PRX_HdDragSX": [[93, "prx-hddragsx"]], "PRX_ModulatedCustomWaveForms": [[94, "prx-modulatedcustomwaveforms"]], "PRX_ModulatedDRAGCosineRiseFall": [[95, "prx-modulateddragcosinerisefall"]], "PRX_SinglePulse_GateImplementation": [[96, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[97, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[98, "iqm-pulse-gates-register-implementation"]], "reset": [[99, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[100, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[101, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[102, "reset-conditional"]], "Reset_Wait": [[103, "reset-wait"]], "rz": [[104, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[105, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[106, "rz-acstarkshift-cosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[107, "rz-acstarkshift-smoothconstant"]], "RZ_PRX_Composite": [[108, "rz-prx-composite"]], "RZ_Virtual": [[109, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[110, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[111, "module-iqm.pulse.gates.sx"]], "SXGate": [[112, "sxgate"]], "u": [[113, "module-iqm.pulse.gates.u"]], "UGate": [[114, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[115, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[116, "module-iqm.pulse.playlist"], [162, "module-iqm.pulse.playlist.playlist"]], "channel": [[117, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[118, "channelconfiguration"]], "ChannelDescription": [[119, "channeldescription"]], "ChannelProperties": [[120, "channelproperties"]], "IQChannelConfig": [[121, "iqchannelconfig"]], "ProbeChannelProperties": [[122, "probechannelproperties"]], "RealChannelConfig": [[123, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[124, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[125, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[126, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "fast_drag": [[127, "module-iqm.pulse.playlist.fast_drag"]], "FastDrag": [[128, "fastdrag"]], "FastDragI": [[129, "fastdragi"]], "FastDragQ": [[130, "fastdragq"]], "SuppressedPulse": [[131, "suppressedpulse"]], "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products": [[132, "iqm-pulse-playlist-fast-drag-compute-matrix-of-summed-fourier-transform-inner-products"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope": [[133, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-i-envelope"]], "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope": [[134, "iqm-pulse-playlist-fast-drag-evaluate-fast-drag-q-envelope"]], "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor": [[135, "iqm-pulse-playlist-fast-drag-fourier-transform-of-cos-basis-functions-as-tensor"]], "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges": [[136, "iqm-pulse-playlist-fast-drag-solve-fast-coefficients-for-given-weights-and-ranges"]], "hd_drag": [[137, "module-iqm.pulse.playlist.hd_drag"]], "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT": [[138, "iqm-pulse-playlist-hd-drag-cosine-coefficients-dict"]], "HdDrag": [[139, "hddrag"]], "HdDragI": [[140, "hddragi"]], "HdDragQ": [[141, "hddragq"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope": [[142, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-i-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope": [[143, "iqm-pulse-playlist-hd-drag-evaluate-hd-drag-q-envelope"]], "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope": [[144, "iqm-pulse-playlist-hd-drag-evaluate-nth-derivative-of-basis-envelope"]], "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag": [[145, "iqm-pulse-playlist-hd-drag-solve-cosine-coefs-for-hd-drag"]], "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies": [[146, "iqm-pulse-playlist-hd-drag-solve-hd-drag-coefficients-from-suppressed-frequencies"]], "instructions": [[147, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[148, "acquisitionmethod"]], "Block": [[149, "block"]], "ComplexIntegration": [[150, "complexintegration"]], "ConditionalInstruction": [[151, "conditionalinstruction"]], "FluxPulse": [[152, "fluxpulse"]], "IQPulse": [[153, "iqpulse"]], "Instruction": [[154, "instruction"]], "MultiplexedIQPulse": [[155, "multiplexediqpulse"]], "ReadoutTrigger": [[156, "readouttrigger"]], "RealPulse": [[157, "realpulse"]], "ThresholdStateDiscrimination": [[158, "thresholdstatediscrimination"]], "TimeTrace": [[159, "timetrace"]], "VirtualRZ": [[160, "virtualrz"]], "Wait": [[161, "wait"]], "schedule": [[163, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[164, "nothing"]], "Schedule": [[165, "schedule"]], "Segment": [[166, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[167, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[168, "module-iqm.pulse.playlist.visualisation"]], "base": [[169, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[170, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[171, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[172, "chirp"]], "ChirpImag": [[173, "chirpimag"]], "Cosine": [[174, "cosine"]], "CosineFall": [[175, "cosinefall"]], "CosineRise": [[176, "cosinerise"]], "CosineRiseFallDerivative": [[177, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[178, "modulatedcosinerisefall"]], "Slepian": [[179, "slepian"]], "quantum_ops": [[180, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[181, "quantumop"], [213, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[182, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[183, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[184, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[185, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[186, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[187, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[188, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[189, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[190, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[191, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[192, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[193, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[194, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[195, "schedulingalgorithm"]], "SchedulingStrategy": [[196, "schedulingstrategy"]], "TimeBox": [[197, "timebox"]], "utils": [[198, "module-iqm.pulse.utils"]], "iqm.pulse.utils.map_waveform_param_types": [[199, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.normalize_angle": [[200, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[201, "iqm-pulse-utils-phase-transformation"]], "validation": [[202, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[203, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[204, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[205, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[206, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[207, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[208, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[209, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[210, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[211, "changelog"]], "Version 9.12.0 (2025-05-30)": [[211, "version-9-12-0-2025-05-30"]], "Features": [[211, "features"], [211, "id1"], [211, "id2"], [211, "id3"], [211, "id6"], [211, "id7"], [211, "id8"], [211, "id9"], [211, "id12"], [211, "id15"], [211, "id20"], [211, "id21"], [211, "id22"], [211, "id23"], [211, "id24"], [211, "id25"], [211, "id29"], [211, "id31"], [211, "id33"], [211, "id34"], [211, "id37"], [211, "id38"], [211, "id41"], [211, "id43"], [211, "id46"], [211, "id47"], [211, "id50"], [211, "id51"], [211, "id52"], [211, "id55"], [211, "id56"], [211, "id59"], [211, "id62"], [211, "id65"], [211, "id68"], [211, "id71"], [211, "id73"], [211, "id76"], [211, "id79"], [211, "id83"], [211, "id85"], [211, "id86"], [211, "id87"], [211, "id93"], [211, "id99"], [211, "id104"], [211, "id106"], [211, "id107"], [211, "id109"], [211, "id112"], [211, "id115"], [211, "id117"], [211, "id120"], [211, "id121"], [211, "id122"], [211, "id123"], [211, "id126"], [211, "id127"], [211, "id129"], [211, "id132"], [211, "id133"], [211, "id134"], [211, "id135"], [211, "id136"], [211, "id137"], [211, "id138"], [211, "id139"], [211, "id142"], [211, "id144"], [211, "id147"], [211, "id149"], [211, "id150"], [211, "id153"]], "Version 9.11.0 (2025-05-28)": [[211, "version-9-11-0-2025-05-28"]], "Version 9.10.0 (2025-05-21)": [[211, "version-9-10-0-2025-05-21"]], "Version 9.9.0 (2025-05-19)": [[211, "version-9-9-0-2025-05-19"]], "Bug fixes": [[211, "bug-fixes"], [211, "id10"], [211, "id11"], [211, "id28"], [211, "id32"], [211, "id48"], [211, "id84"], [211, "id90"], [211, "id91"], [211, "id92"], [211, "id94"], [211, "id102"], [211, "id103"], [211, "id108"], [211, "id110"], [211, "id111"], [211, "id113"], [211, "id143"]], "Version 9.8.0 (2025-05-12)": [[211, "version-9-8-0-2025-05-12"]], "Version 9.7.1 (2025-05-12)": [[211, "version-9-7-1-2025-05-12"]], "Version 9.7.0 (2025-04-30)": [[211, "version-9-7-0-2025-04-30"]], "Version 9.6.0 (2025-04-28)": [[211, "version-9-6-0-2025-04-28"]], "Version 9.5.0 (2025-04-25)": [[211, "version-9-5-0-2025-04-25"]], "Version 9.4.0 (2025-04-22)": [[211, "version-9-4-0-2025-04-22"]], "Version 9.3.0 (2025-04-17)": [[211, "version-9-3-0-2025-04-17"]], "Version 9.2.0 (2025-04-11)": [[211, "version-9-2-0-2025-04-11"]], "Version 9.1.0 (2025-04-10)": [[211, "version-9-1-0-2025-04-10"]], "Version 9.0.0 (2025-04-09)": [[211, "version-9-0-0-2025-04-09"]], "Breaking changes": [[211, "breaking-changes"], [211, "id82"], [211, "id105"], [211, "id114"], [211, "id116"], [211, "id128"], [211, "id148"]], "Version 8.13.0 (2025-04-07)": [[211, "version-8-13-0-2025-04-07"]], "Version 8.12.0 (2025-04-03)": [[211, "version-8-12-0-2025-04-03"]], "Version 8.11.0 (2025-04-02)": [[211, "version-8-11-0-2025-04-02"]], "Version 8.10.0 (2025-04-02)": [[211, "version-8-10-0-2025-04-02"]], "Version 8.9.0 (2025-03-28)": [[211, "version-8-9-0-2025-03-28"]], "Version 8.8.0 (2025-03-28)": [[211, "version-8-8-0-2025-03-28"]], "Version 8.7.0 (2025-03-27)": [[211, "version-8-7-0-2025-03-27"]], "Version 8.6.0 (2025-03-26)": [[211, "version-8-6-0-2025-03-26"]], "Version 8.5.0 (2025-03-26)": [[211, "version-8-5-0-2025-03-26"]], "Bug fix": [[211, "bug-fix"], [211, "id30"], [211, "id49"], [211, "id72"]], "Version 8.4.0 (2025-03-21)": [[211, "version-8-4-0-2025-03-21"]], "Version 8.3.0 (2025-03-19)": [[211, "version-8-3-0-2025-03-19"]], "Version 8.2.0 (2025-03-13)": [[211, "version-8-2-0-2025-03-13"]], "Version 8.1.0 (2025-02-28)": [[211, "version-8-1-0-2025-02-28"]], "Version 8.0.0 (2025-02-27)": [[211, "version-8-0-0-2025-02-27"]], "Version 7.24.0 (2025-02-20)": [[211, "version-7-24-0-2025-02-20"]], "Version 7.23.0 (2025-02-19)": [[211, "version-7-23-0-2025-02-19"]], "Version 7.22.0 (2025-02-10)": [[211, "version-7-22-0-2025-02-10"]], "Version 7.21.0 (2025-02-07)": [[211, "version-7-21-0-2025-02-07"]], "Version 7.20.0 (2025-02-04)": [[211, "version-7-20-0-2025-02-04"]], "Version 7.19.0 (2025-02-04)": [[211, "version-7-19-0-2025-02-04"]], "Bug Fixes": [[211, "id42"]], "Version 7.18.0 (2025-02-04)": [[211, "version-7-18-0-2025-02-04"]], "Version 7.17.0 (2025-02-03)": [[211, "version-7-17-0-2025-02-03"]], "Version 7.16.0 (2025-02-03)": [[211, "version-7-16-0-2025-02-03"]], "Version 7.15.0 (2025-01-28)": [[211, "version-7-15-0-2025-01-28"]], "Version 7.14.0 (2025-01-28)": [[211, "version-7-14-0-2025-01-28"]], "Version 7.13.0 (2025-01-28)": [[211, "version-7-13-0-2025-01-28"]], "Version 7.12.0 (2025-01-27)": [[211, "version-7-12-0-2025-01-27"]], "Version 7.11.0 (2025-01-24)": [[211, "version-7-11-0-2025-01-24"]], "Version 7.10.0 (2025-01-17)": [[211, "version-7-10-0-2025-01-17"]], "Version 7.9.0 (2025-01-08)": [[211, "version-7-9-0-2025-01-08"]], "Version 7.8.0 (2025-01-02)": [[211, "version-7-8-0-2025-01-02"]], "Version 7.7.0 (2024-12-30)": [[211, "version-7-7-0-2024-12-30"]], "Version 7.6.0 (2024-12-30)": [[211, "version-7-6-0-2024-12-30"]], "Version 7.5.0 (2024-12-12)": [[211, "version-7-5-0-2024-12-12"]], "Version 7.4.0 (2024-12-10)": [[211, "version-7-4-0-2024-12-10"]], "Version 7.3.0 (2024-12-09)": [[211, "version-7-3-0-2024-12-09"]], "Version 7.2.0 (2024-12-05)": [[211, "version-7-2-0-2024-12-05"]], "Version 7.1.0 (2024-12-04)": [[211, "version-7-1-0-2024-12-04"]], "Version 7.0.0 (2024-11-29)": [[211, "version-7-0-0-2024-11-29"]], "Version 6.14.0 (2024-11-27)": [[211, "version-6-14-0-2024-11-27"]], "Version 6.13.0 (2024-11-20)": [[211, "version-6-13-0-2024-11-20"]], "Version 6.12.0 (2024-11-19)": [[211, "version-6-12-0-2024-11-19"]], "Version 6.11.0 (2024-11-18)": [[211, "version-6-11-0-2024-11-18"]], "Version 6.10.0 (2024-11-15)": [[211, "version-6-10-0-2024-11-15"]], "Version 6.9.0 (2024-11-13)": [[211, "version-6-9-0-2024-11-13"]], "Version 6.8.0 (2024-11-12)": [[211, "version-6-8-0-2024-11-12"]], "Version 6.7.0 (2024-11-12)": [[211, "version-6-7-0-2024-11-12"]], "Version 6.6.0 (2024-11-08)": [[211, "version-6-6-0-2024-11-08"]], "Version 6.5 (2024-10-31)": [[211, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[211, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[211, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[211, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[211, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[211, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[211, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[211, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[211, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[211, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[211, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[211, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[211, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[211, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[211, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[211, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[211, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[211, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[211, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[211, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[211, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[211, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[211, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[211, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[211, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[211, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[211, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[211, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[211, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[211, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[211, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[211, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[211, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[211, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[211, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[211, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[211, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[211, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[211, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[211, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[211, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[211, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[211, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[211, "version-1-0-2024-07-01"]], "Concepts and Classes": [[212, "concepts-and-classes"]], "Quick reference": [[212, "quick-reference"]], "Instructions": [[212, "instructions"]], "Schedules": [[212, "schedules"]], "TimeBoxes": [[212, "timeboxes"]], "QuantumOps": [[212, "quantumops"]], "GateImplementations": [[212, "gateimplementations"]], "Playlists": [[212, "playlists"]], "Custom gate implementations": [[213, "custom-gate-implementations"], [213, "id1"]], "GateImplementation class": [[213, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[213, "instructions-waveforms-and-calibration-data"]], "More base classes": [[213, "more-base-classes"]], "Registering gates and implementations": [[213, "registering-gates-and-implementations"]], "IQM Pulse": [[214, "iqm-pulse"]], "Contents": [[214, "contents"]], "Indices and tables": [[214, "indices-and-tables"]], "License": [[215, "license"]], "Pulse timing": [[216, "pulse-timing"]], "Measure and ReadoutTrigger": [[216, "measure-and-readouttrigger"]], "Fast feedback timing": [[216, "fast-feedback-timing"]], "References": [[217, "references"]], "Using ScheduleBuilder": [[218, "using-schedulebuilder"]], "Creating TimeBoxes": [[218, "creating-timeboxes"]], "Composing TimeBoxes": [[218, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[218, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[218, "miscellaneous-features"]], "Common pitfalls": [[218, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [73, "module-iqm.pulse.gates.move"], [80, "module-iqm.pulse.gates.prx"], [99, "module-iqm.pulse.gates.reset"], [104, "module-iqm.pulse.gates.rz"], [111, "module-iqm.pulse.gates.sx"], [113, "module-iqm.pulse.gates.u"], [116, "module-iqm.pulse.playlist"], [117, "module-iqm.pulse.playlist.channel"], [127, "module-iqm.pulse.playlist.fast_drag"], [137, "module-iqm.pulse.playlist.hd_drag"], [147, "module-iqm.pulse.playlist.instructions"], [162, "module-iqm.pulse.playlist.playlist"], [163, "module-iqm.pulse.playlist.schedule"], [168, "module-iqm.pulse.playlist.visualisation"], [169, "module-iqm.pulse.playlist.visualisation.base"], [171, "module-iqm.pulse.playlist.waveforms"], [180, "module-iqm.pulse.quantum_ops"], [185, "module-iqm.pulse.scheduler"], [193, "module-iqm.pulse.timebox"], [198, "module-iqm.pulse.utils"], [202, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "probepulse_customwaveforms_nointegration (class in iqm.pulse.gates.measure)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration._multiplexed_timeboxes"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration class method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration method)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms_nointegration attribute)": [[71, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms_noIntegration.root_parameters"]], "probe_constant (class in iqm.pulse.gates.measure)": [[72, "iqm.pulse.gates.measure.Probe_Constant"]], "dependent_waves (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.probe_constant attribute)": [[72, "iqm.pulse.gates.measure.Probe_Constant.wave_q"]], "iqm.pulse.gates.move": [[73, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[74, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[75, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[76, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[77, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[78, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[79, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[80, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[81, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[81, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[81, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[81, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[81, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[82, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[82, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[82, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[82, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[82, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[82, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[83, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[83, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[83, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[83, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[84, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[84, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[84, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[84, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[87, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[87, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[87, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[87, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[88, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_fastdrag (class in iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.PRX_FastDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[89, "iqm.pulse.gates.prx.PRX_FastDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[89, "iqm.pulse.gates.prx.PRX_FastDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[89, "iqm.pulse.gates.prx.PRX_FastDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdrag attribute)": [[89, "iqm.pulse.gates.prx.PRX_FastDrag.wave_q"]], "prx_fastdragsx (class in iqm.pulse.gates.prx)": [[90, "iqm.pulse.gates.prx.PRX_FastDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_FastDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_FastDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_fastdragsx attribute)": [[90, "iqm.pulse.gates.prx.PRX_FastDragSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[91, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[91, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[91, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[91, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[91, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[91, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_hddrag (class in iqm.pulse.gates.prx)": [[92, "iqm.pulse.gates.prx.PRX_HdDrag"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_HdDrag.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_HdDrag.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_HdDrag.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddrag attribute)": [[92, "iqm.pulse.gates.prx.PRX_HdDrag.wave_q"]], "prx_hddragsx (class in iqm.pulse.gates.prx)": [[93, "iqm.pulse.gates.prx.PRX_HdDragSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_HdDragSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_HdDragSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_hddragsx attribute)": [[93, "iqm.pulse.gates.prx.PRX_HdDragSX.wave_q"]], "prx_modulatedcustomwaveforms (class in iqm.pulse.gates.prx)": [[94, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms class method)": [[94, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[94, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_modulatedcustomwaveforms attribute)": [[94, "iqm.pulse.gates.prx.PRX_ModulatedCustomWaveForms.root_parameters"]], "prx_modulateddragcosinerisefall (class in iqm.pulse.gates.prx)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall class method)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_modulateddragcosinerisefall attribute)": [[95, "iqm.pulse.gates.prx.PRX_ModulatedDRAGCosineRiseFall.wave_q"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[96, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[96, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[96, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[97, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[98, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[99, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[100, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[101, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[102, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[102, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[102, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[102, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[103, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[103, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[103, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[103, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[103, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[103, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[104, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[105, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[106, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[106, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[106, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[106, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[107, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[107, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[107, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[107, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[107, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[107, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_prx_composite (class in iqm.pulse.gates.rz)": [[108, "iqm.pulse.gates.rz.RZ_PRX_Composite"]], "registered_gates (iqm.pulse.gates.rz.rz_prx_composite attribute)": [[108, "iqm.pulse.gates.rz.RZ_PRX_Composite.registered_gates"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[109, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[109, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[109, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[109, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[109, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[110, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[111, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[112, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[112, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[112, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[113, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[114, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[114, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[114, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[115, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[116, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[117, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[118, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[119, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[119, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[120, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[120, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[121, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[121, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[122, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[122, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[122, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[122, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[123, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[123, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[124, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[125, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[126, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.fast_drag": [[127, "module-iqm.pulse.playlist.fast_drag"]], "fastdrag (class in iqm.pulse.playlist.fast_drag)": [[128, "iqm.pulse.playlist.fast_drag.FastDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.fast_drag.fastdrag static method)": [[128, "iqm.pulse.playlist.fast_drag.FastDrag.non_timelike_attributes"]], "fastdragi (class in iqm.pulse.playlist.fast_drag)": [[129, "iqm.pulse.playlist.fast_drag.FastDragI"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragi method)": [[129, "iqm.pulse.playlist.fast_drag.FastDragI._sample"]], "fastdragq (class in iqm.pulse.playlist.fast_drag)": [[130, "iqm.pulse.playlist.fast_drag.FastDragQ"]], "_sample() (iqm.pulse.playlist.fast_drag.fastdragq method)": [[130, "iqm.pulse.playlist.fast_drag.FastDragQ._sample"]], "suppressedpulse (class in iqm.pulse.playlist.fast_drag)": [[131, "iqm.pulse.playlist.fast_drag.SuppressedPulse"]], "_normalize() (iqm.pulse.playlist.fast_drag.suppressedpulse static method)": [[131, "iqm.pulse.playlist.fast_drag.SuppressedPulse._normalize"]], "compute_matrix_of_summed_fourier_transform_inner_products() (in module iqm.pulse.playlist.fast_drag)": [[132, "iqm.pulse.playlist.fast_drag.compute_matrix_of_summed_fourier_transform_inner_products"]], "evaluate_fast_drag_i_envelope() (in module iqm.pulse.playlist.fast_drag)": [[133, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_i_envelope"]], "evaluate_fast_drag_q_envelope() (in module iqm.pulse.playlist.fast_drag)": [[134, "iqm.pulse.playlist.fast_drag.evaluate_fast_drag_q_envelope"]], "fourier_transform_of_cos_basis_functions_as_tensor() (in module iqm.pulse.playlist.fast_drag)": [[135, "iqm.pulse.playlist.fast_drag.fourier_transform_of_cos_basis_functions_as_tensor"]], "solve_fast_coefficients_for_given_weights_and_ranges() (in module iqm.pulse.playlist.fast_drag)": [[136, "iqm.pulse.playlist.fast_drag.solve_fast_coefficients_for_given_weights_and_ranges"]], "iqm.pulse.playlist.hd_drag": [[137, "module-iqm.pulse.playlist.hd_drag"]], "cosine_coefficients_dict (in module iqm.pulse.playlist.hd_drag)": [[138, "iqm.pulse.playlist.hd_drag.COSINE_COEFFICIENTS_DICT"]], "hddrag (class in iqm.pulse.playlist.hd_drag)": [[139, "iqm.pulse.playlist.hd_drag.HdDrag"]], "non_timelike_attributes() (iqm.pulse.playlist.hd_drag.hddrag static method)": [[139, "iqm.pulse.playlist.hd_drag.HdDrag.non_timelike_attributes"]], "hddragi (class in iqm.pulse.playlist.hd_drag)": [[140, "iqm.pulse.playlist.hd_drag.HdDragI"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragi method)": [[140, "iqm.pulse.playlist.hd_drag.HdDragI._sample"]], "hddragq (class in iqm.pulse.playlist.hd_drag)": [[141, "iqm.pulse.playlist.hd_drag.HdDragQ"]], "_sample() (iqm.pulse.playlist.hd_drag.hddragq method)": [[141, "iqm.pulse.playlist.hd_drag.HdDragQ._sample"]], "evaluate_hd_drag_i_envelope() (in module iqm.pulse.playlist.hd_drag)": [[142, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_i_envelope"]], "evaluate_hd_drag_q_envelope() (in module iqm.pulse.playlist.hd_drag)": [[143, "iqm.pulse.playlist.hd_drag.evaluate_hd_drag_q_envelope"]], "evaluate_nth_derivative_of_basis_envelope() (in module iqm.pulse.playlist.hd_drag)": [[144, "iqm.pulse.playlist.hd_drag.evaluate_nth_derivative_of_basis_envelope"]], "solve_cosine_coefs_for_hd_drag() (in module iqm.pulse.playlist.hd_drag)": [[145, "iqm.pulse.playlist.hd_drag.solve_cosine_coefs_for_hd_drag"]], "solve_hd_drag_coefficients_from_suppressed_frequencies() (in module iqm.pulse.playlist.hd_drag)": [[146, "iqm.pulse.playlist.hd_drag.solve_hd_drag_coefficients_from_suppressed_frequencies"]], "iqm.pulse.playlist.instructions": [[147, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[148, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[148, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[148, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[149, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[150, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[150, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[151, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[151, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[151, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[151, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[151, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[152, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[152, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[153, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[153, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[153, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[153, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[154, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[154, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[154, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[154, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[154, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[154, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[155, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[155, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[156, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[156, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[156, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[157, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[157, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[157, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[157, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[157, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[158, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[158, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[158, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[159, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[159, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[160, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[160, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[161, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[162, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[163, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[164, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[165, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[165, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[165, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[166, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[166, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[166, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[166, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[166, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[166, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[166, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[166, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[166, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[167, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[168, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[169, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[170, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[171, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[172, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[172, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[172, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[173, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[173, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[174, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[174, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[174, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[175, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[175, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[176, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[176, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[177, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[177, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[178, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[178, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[178, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[179, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[179, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[179, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[179, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[179, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[179, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[180, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[181, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[181, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[181, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[181, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[181, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[181, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[181, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[182, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[183, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[184, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[185, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[186, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[187, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[188, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[188, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[188, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[188, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[188, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[188, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[188, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[188, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[188, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[188, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[188, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[188, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[189, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[190, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[191, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[192, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[193, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[194, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[194, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[195, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[195, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[195, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[196, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[196, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[196, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[197, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[197, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[197, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[197, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[197, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[197, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[197, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[197, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[198, "module-iqm.pulse.utils"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[199, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[200, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[201, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[202, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[203, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[204, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[205, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[206, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[207, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[208, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[209, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[210, "iqm.pulse.validation.validate_playlist_compatibility"]]}})