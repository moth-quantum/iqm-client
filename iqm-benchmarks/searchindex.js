Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.entanglement.graph_states", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.direct_rb", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits", "api/iqm.benchmarks.randomized_benchmarking.eplg", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.generate_state_tomography_circuits", "api/iqm.benchmarks.utils.get_Pauli_expectation", "api/iqm.benchmarks.utils.get_active_qubits", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.get_measurement_mapping", "api/iqm.benchmarks.utils.get_neighbors_of_edges", "api/iqm.benchmarks.utils.get_tomography_matrix", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.median_with_uncertainty", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.random_hamiltonian_path", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.split_into_disjoint_pairs", "api/iqm.benchmarks.utils.split_sequence_in_chunks", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "api/iqm.benchmarks.utils_plots", "api/iqm.benchmarks.utils_plots.GraphPositions", "api/iqm.benchmarks.utils_plots.draw_graph_edges", "api/iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph", "api/iqm.benchmarks.utils_shadows", "api/iqm.benchmarks.utils_shadows.CUE", "api/iqm.benchmarks.utils_shadows.get_local_shadow", "api/iqm.benchmarks.utils_shadows.get_negativity", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_eplg", "examples/example_experiment_all", "examples/example_ghz", "examples/example_graphstate", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.entanglement.graph_states.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.rst", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers.rst", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph.rst", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.generate_state_tomography_circuits.rst", "api/iqm.benchmarks.utils.get_Pauli_expectation.rst", "api/iqm.benchmarks.utils.get_active_qubits.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.get_measurement_mapping.rst", "api/iqm.benchmarks.utils.get_neighbors_of_edges.rst", "api/iqm.benchmarks.utils.get_tomography_matrix.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.median_with_uncertainty.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.random_hamiltonian_path.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.split_into_disjoint_pairs.rst", "api/iqm.benchmarks.utils.split_sequence_in_chunks.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "api/iqm.benchmarks.utils_plots.rst", "api/iqm.benchmarks.utils_plots.GraphPositions.rst", "api/iqm.benchmarks.utils_plots.draw_graph_edges.rst", "api/iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths.rst", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph.rst", "api/iqm.benchmarks.utils_shadows.rst", "api/iqm.benchmarks.utils_shadows.CUE.rst", "api/iqm.benchmarks.utils_shadows.get_local_shadow.rst", "api/iqm.benchmarks.utils_shadows.get_negativity.rst", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_eplg.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_graphstate.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.entanglement.graph_states", "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "iqm.benchmarks.entanglement.graph_states.generate_graph_state", "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "iqm.benchmarks.entanglement.graph_states.negativity_analysis", "iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.direct_rb", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits", "iqm.benchmarks.randomized_benchmarking.eplg", "iqm.benchmarks.randomized_benchmarking.eplg.eplg", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.generate_state_tomography_circuits", "iqm.benchmarks.utils.get_Pauli_expectation", "iqm.benchmarks.utils.get_active_qubits", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.get_measurement_mapping", "iqm.benchmarks.utils.get_neighbors_of_edges", "iqm.benchmarks.utils.get_tomography_matrix", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.median_with_uncertainty", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.random_hamiltonian_path", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.remove_directed_duplicates_to_list", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.split_into_disjoint_pairs", "iqm.benchmarks.utils.split_sequence_in_chunks", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "iqm.benchmarks.utils_plots", "iqm.benchmarks.utils_plots.GraphPositions", "iqm.benchmarks.utils_plots.draw_graph_edges", "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths", "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "iqm.benchmarks.utils_plots.rx_to_nx_graph", "iqm.benchmarks.utils_shadows", "iqm.benchmarks.utils_shadows.CUE", "iqm.benchmarks.utils_shadows.get_local_shadow", "iqm.benchmarks.utils_shadows.get_negativity", "iqm.benchmarks.utils_shadows.local_shadow_tomography", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (CRB)", "Circuit Layer Operations Per Second (CLOPS)", "Error Per Layered Gate (EPLG)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Graph State Bipartite Entanglement", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 63, 106, 109, 110, 121, 127, 135, 137, 142, 155, 184, 185, 187, 188, 191, 199, 200], "python": 1, "librari": [1, 88, 101, 106, 135, 181, 192], "suit": [1, 200], "qcvv": [1, 182, 198, 200], "subpackag": [1, 19, 48, 61, 80, 81, 86, 93, 99, 104], "modul": [1, 5, 15, 19, 47, 48, 61, 80, 81, 86, 93, 99, 104, 198], "gener": [2, 3, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 35, 36, 38, 50, 58, 63, 66, 69, 78, 84, 88, 91, 92, 95, 96, 101, 102, 106, 109, 110, 113, 114, 120, 124, 125, 126, 131, 134, 141, 142, 146, 156, 169, 171, 172, 175, 179, 184, 185, 186, 188, 189, 190, 191, 192, 193, 199], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 34, 35, 36, 49, 50, 51, 62, 63, 64, 68, 69, 70, 82, 83, 84, 87, 88, 89, 94, 95, 96, 100, 101, 102, 105, 106, 107, 124, 137, 138, 168, 169, 179, 181, 182, 199, 200], "inherit": [2, 3, 5, 15, 20, 34, 49, 62, 68, 82, 87, 94, 100, 105, 137, 168], "benchmarkbas": [2, 4, 200], "abc": [2, 3, 5, 6, 20, 34, 49, 62, 68, 82, 87, 94, 100, 105], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 34, 36, 49, 51, 62, 64, 68, 70, 82, 83, 87, 88, 94, 96, 100, 101, 105, 106, 200], "pydant": [2, 4, 20, 22, 34, 36, 49, 51, 62, 64, 68, 70, 82, 83, 87, 88, 94, 96, 100, 101, 105, 106], "main": [2, 7, 8, 20, 34, 49, 62, 68, 82, 87, 94, 100, 105, 184], "basemodel": [2, 4, 20, 34, 49, 62, 68, 82, 87, 94, 100, 105], "backend": [3, 6, 21, 22, 29, 35, 38, 41, 42, 43, 44, 45, 50, 58, 63, 64, 69, 70, 78, 84, 89, 91, 92, 95, 96, 98, 102, 107, 109, 110, 120, 124, 125, 132, 133, 135, 136, 138, 139, 140, 144, 145, 149, 155, 157, 161, 162, 165, 170, 171, 173, 179, 182, 190, 200], "iqmbackendbas": [3, 6, 21, 35, 38, 50, 63, 69, 84, 89, 91, 92, 95, 102, 107, 109, 110, 120, 124, 125, 126, 132, 133, 135, 136, 139, 144, 149, 155, 161, 165, 171], "configur": [3, 4, 6, 21, 22, 35, 36, 50, 51, 63, 64, 69, 70, 77, 83, 84, 88, 89, 95, 96, 101, 102, 106, 107, 179, 199, 200], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 31, 35, 36, 50, 51, 53, 63, 64, 69, 70, 83, 84, 88, 89, 95, 96, 101, 102, 106, 107, 118, 138, 169, 179, 180, 184, 185, 199], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 54, 60, 63, 64, 66, 69, 70, 72, 73, 75, 76, 83, 84, 88, 89, 90, 92, 95, 96, 97, 98, 101, 102, 106, 107, 108, 109, 119, 120, 130, 134, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 159, 160, 163, 164, 165, 166, 169, 170, 172, 173, 178, 184, 185, 186, 190, 191, 192, 196, 197, 199, 200], "implement": [3, 5, 6, 21, 22, 25, 190], "all": [3, 4, 6, 7, 16, 17, 18, 21, 22, 31, 33, 35, 50, 57, 63, 67, 69, 71, 72, 73, 76, 77, 83, 84, 88, 89, 95, 101, 102, 107, 124, 130, 132, 133, 138, 146, 151, 152, 159, 160, 179, 182, 184, 185, 186, 189, 190, 193, 195, 196, 197, 199, 200], "from": [3, 6, 7, 11, 21, 22, 29, 31, 32, 37, 46, 54, 60, 66, 67, 69, 71, 76, 78, 96, 106, 108, 116, 130, 131, 134, 138, 140, 142, 145, 147, 148, 149, 150, 152, 156, 158, 159, 160, 161, 167, 170, 171, 172, 175, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "which": [3, 6, 7, 8, 21, 22, 29, 32, 36, 39, 50, 51, 59, 61, 63, 64, 65, 69, 79, 83, 84, 85, 88, 91, 92, 101, 102, 103, 106, 107, 109, 110, 112, 120, 124, 130, 134, 138, 145, 178, 184, 185, 187, 190, 191, 192, 199, 200], "thei": [3, 17, 192], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 35, 36, 50, 51, 63, 64, 69, 70, 83, 84, 88, 89, 91, 92, 95, 96, 101, 102, 106, 107, 109, 110, 138, 155, 169, 179, 184, 185, 187, 189, 190, 192, 196], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 185, 187, 188, 189, 190, 192], "abstract": [3, 6, 192], "classmethod": [3, 6, 7], "name": [3, 6, 7, 8, 16, 17, 18, 33, 41, 42, 43, 44, 45, 58, 66, 78, 88, 98, 101, 106, 116, 123, 124, 140, 145, 146, 149, 169, 170, 172, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 199], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 89, 90, 91, 92, 95, 97, 98, 102, 103, 107, 108, 109, 110, 111, 112, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 182], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 31, 35, 36, 44, 45, 48, 50, 58, 61, 63, 64, 69, 70, 71, 78, 83, 84, 88, 89, 95, 101, 102, 106, 107, 108, 121, 127, 132, 133, 134, 155, 157, 165, 166, 167, 179, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 199, 200], "full": [3, 64, 70, 192, 200], "given": [3, 6, 7, 11, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 38, 43, 44, 45, 48, 50, 51, 56, 61, 63, 69, 76, 77, 98, 99, 108, 125, 126, 147, 151, 152, 156, 162, 164, 169, 170, 176, 177, 184, 185, 190, 192, 200], "static": [3, 6, 21, 35, 50, 63, 69, 84, 89, 95, 102, 107, 169], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 24, 25, 35, 36, 38, 41, 42, 43, 44, 45, 46, 51, 53, 54, 55, 58, 60, 63, 64, 66, 67, 69, 70, 71, 74, 75, 76, 78, 83, 84, 88, 89, 91, 92, 95, 96, 98, 101, 102, 106, 107, 108, 109, 110, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 149, 152, 153, 154, 155, 157, 159, 160, 165, 167, 169, 170, 171, 172, 176, 178, 181, 182, 184, 189, 190, 192, 194, 196], "check": [3, 57, 77, 181, 184, 185, 190], "whether": [3, 4, 22, 36, 51, 57, 58, 60, 63, 64, 69, 70, 77, 78, 83, 88, 92, 101, 125, 130, 131, 134, 142, 146, 155, 176, 178, 190, 193, 199], "requir": [3, 51, 146, 181, 190, 192, 199, 200], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 31, 32, 46, 69, 70, 95, 110, 130, 136, 146, 147, 150, 152, 153, 172, 178, 179, 181, 184, 185, 187, 190, 192, 197, 199, 200], "met": 3, "valid": [3, 95, 135, 136, 198, 200], "dictionari": [3, 4, 7, 11, 22, 35, 36, 39, 41, 42, 43, 44, 45, 46, 51, 54, 63, 64, 67, 69, 70, 71, 74, 75, 76, 83, 88, 89, 91, 92, 96, 98, 101, 106, 107, 109, 110, 119, 120, 124, 125, 126, 128, 132, 133, 139, 140, 142, 144, 146, 147, 150, 152, 153, 154, 162, 165, 167, 169, 170, 171, 176, 178, 186, 188, 189, 192, 193], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 192, 199], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 29, 32, 36, 41, 42, 43, 51, 58, 63, 64, 69, 70, 83, 88, 91, 92, 96, 98, 101, 106, 109, 110, 114, 119, 120, 123, 124, 125, 126, 128, 130, 132, 133, 135, 138, 142, 146, 155, 157, 159, 165, 169, 170, 172, 176, 178, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 200], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 35, 36, 50, 51, 63, 64, 69, 70, 83, 84, 88, 89, 95, 96, 101, 102, 106, 107, 166, 169, 188, 192, 196, 199], "shot": [4, 22, 36, 42, 43, 51, 64, 69, 70, 83, 88, 96, 101, 106, 132, 133, 138, 139, 165, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200], "int": [4, 9, 11, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 58, 60, 63, 64, 66, 69, 70, 71, 74, 77, 78, 83, 88, 89, 91, 92, 96, 98, 101, 106, 107, 108, 109, 110, 111, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 142, 143, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 175, 176, 177, 178, 188, 190, 192], "256": [4, 36, 51, 64, 70, 83, 88, 96, 101, 106, 186, 189, 194, 195], "max_gates_per_batch": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 132, 133, 165, 184, 185, 186, 187, 188, 189, 191, 194, 196, 200], "max_circuits_per_batch": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 132, 133, 165, 179, 187, 188, 191, 200], "calset_id": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 132, 133, 165, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 200], "routing_method": [4, 22, 36, 51, 64, 70, 83, 88, 91, 92, 96, 101, 106, 109, 110, 155, 184, 185, 186, 187, 188, 189, 191, 194, 196, 200], "liter": [4, 22, 36, 41, 42, 43, 51, 64, 70, 83, 88, 91, 92, 96, 101, 106, 109, 110, 147, 161, 169, 176, 178], "basic": [4, 22, 36, 51, 64, 70, 83, 88, 91, 92, 96, 101, 106, 109, 110], "lookahead": [4, 22, 36, 51, 64, 70, 83, 88, 91, 92, 96, 101, 106], "stochast": [4, 22, 36, 51, 64, 70, 83, 88, 91, 92, 96, 101, 106], "sabr": [4, 22, 36, 51, 64, 70, 83, 88, 91, 92, 96, 101, 106, 155, 184, 185, 186, 187, 189, 190, 192, 196, 200], "physical_layout": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 161, 184, 185, 186, 187, 188, 189, 191, 194, 196, 200], "fix": [4, 22, 36, 51, 64, 70, 83, 88, 89, 96, 101, 106, 107, 109, 125, 132, 134, 161, 179, 184, 185, 186, 187, 189, 192, 196, 200], "batch": [4, 17, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 132, 133, 161, 162, 165, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 200], "use_dd": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 187, 188, 191], "bool": [4, 22, 36, 51, 57, 58, 60, 63, 64, 69, 70, 77, 78, 83, 88, 92, 96, 101, 106, 130, 131, 134, 138, 142, 146, 155, 170], "fals": [4, 22, 36, 51, 64, 70, 78, 83, 88, 92, 96, 101, 106, 130, 131, 134, 138, 142, 155, 170, 184, 186, 188, 189, 196], "dd_strategi": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 187, 188, 191], "ddstrategi": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106], "number": [4, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 36, 41, 42, 43, 48, 50, 51, 53, 55, 56, 58, 60, 61, 64, 69, 70, 77, 78, 80, 83, 88, 89, 91, 92, 96, 101, 106, 107, 108, 109, 110, 111, 120, 121, 124, 125, 126, 127, 132, 133, 138, 139, 142, 143, 144, 154, 156, 157, 163, 165, 170, 171, 177, 178, 184, 185, 189, 190, 192], "us": [4, 6, 9, 16, 21, 22, 24, 25, 29, 31, 32, 33, 36, 38, 41, 42, 43, 44, 45, 47, 51, 58, 60, 63, 64, 70, 88, 92, 98, 106, 108, 123, 130, 138, 140, 146, 165, 172, 176, 178, 179, 181, 182, 184, 185, 190, 192, 193, 197, 199], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 50, 51, 54, 61, 63, 64, 69, 70, 71, 74, 77, 78, 83, 84, 88, 89, 91, 92, 95, 96, 101, 102, 106, 107, 108, 109, 110, 111, 119, 120, 121, 124, 125, 126, 127, 132, 133, 135, 138, 139, 143, 144, 146, 148, 150, 155, 157, 162, 165, 167, 178, 179, 181, 182, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "default": [4, 6, 12, 22, 36, 41, 42, 43, 51, 64, 69, 70, 78, 83, 88, 91, 92, 96, 101, 106, 109, 110, 120, 126, 130, 131, 134, 138, 142, 146, 161, 165, 170, 176, 178, 184, 186, 189, 192, 193, 195], "i": [4, 6, 7, 22, 26, 29, 31, 33, 36, 41, 42, 43, 46, 50, 51, 57, 59, 60, 63, 64, 65, 69, 70, 77, 78, 79, 83, 84, 85, 88, 91, 92, 96, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 115, 120, 128, 130, 131, 134, 135, 138, 142, 145, 146, 147, 155, 161, 165, 170, 172, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "2": [4, 32, 51, 57, 70, 77, 88, 92, 96, 106, 125, 131, 143, 163, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200], "8": [4, 131, 163, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200], "maximum": [4, 42, 43, 44, 45, 60, 96, 132, 133, 165, 171, 179, 184, 185, 192], "gate": [4, 21, 22, 26, 30, 31, 32, 39, 51, 61, 63, 64, 70, 80, 81, 84, 86, 88, 89, 91, 92, 93, 94, 95, 96, 99, 101, 102, 104, 106, 109, 110, 119, 120, 123, 124, 125, 126, 128, 130, 132, 133, 135, 143, 144, 146, 155, 165, 171, 172, 176, 178, 179, 184, 190, 194, 197, 198, 200], "per": [4, 41, 42, 43, 61, 64, 70, 83, 88, 92, 93, 94, 106, 108, 109, 110, 111, 132, 133, 138, 139, 165, 177, 179, 192, 197, 198, 200], "option": [4, 22, 32, 41, 42, 43, 51, 58, 69, 70, 88, 89, 91, 96, 98, 101, 106, 109, 110, 119, 120, 123, 125, 126, 128, 130, 132, 133, 135, 142, 146, 155, 157, 159, 165, 169, 170, 176, 178, 179, 182, 187, 188, 189, 191, 192, 198], "calibr": [4, 6, 22, 32, 69, 70, 96, 132, 133, 138, 139, 145, 165, 171, 172, 179, 188, 189, 190, 193, 195], "id": [4, 165, 187, 189, 193, 195], "last": 4, "avail": [4, 199, 200], "qiskit": [4, 6, 51, 64, 70, 88, 91, 92, 101, 106, 109, 110, 135, 155, 165, 179, 181, 182, 184, 192], "rout": [4, 64, 70, 88, 91, 92, 106, 109, 110, 155, 185, 187, 189, 190, 192, 196], "transpil": [4, 16, 21, 22, 24, 25, 51, 63, 64, 70, 88, 91, 92, 106, 109, 110, 124, 125, 135, 139, 144, 155, 162, 179, 182, 184, 185, 187, 189, 190, 192, 196], "physic": [4, 22, 36, 51, 63, 64, 69, 70, 74, 88, 92, 101, 106, 109, 161, 185, 187, 189, 192, 196, 198], "layout": [4, 8, 11, 16, 17, 22, 33, 36, 43, 51, 63, 64, 69, 70, 88, 89, 92, 98, 106, 107, 132, 133, 140, 145, 155, 161, 169, 172, 179, 184, 185, 187, 189, 190, 192, 194, 196], "constrain": [4, 161, 200], "dure": [4, 13, 35, 69, 84, 102, 191], "select": [4, 22, 51, 70, 76, 96, 172, 179, 190, 192], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 45, 48, 50, 51, 53, 54, 60, 61, 63, 64, 69, 70, 74, 78, 80, 83, 84, 88, 89, 91, 92, 95, 96, 98, 101, 106, 107, 108, 109, 110, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 138, 140, 143, 145, 146, 148, 150, 155, 157, 161, 162, 165, 170, 172, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 198], "initi": [4, 6, 22, 47, 140, 184, 192], "allow": [4, 179, 184, 185, 190, 200], "ani": [4, 8, 24, 25, 35, 44, 45, 67, 69, 89, 101, 107, 111, 130, 132, 133, 139, 160, 164, 181, 185, 199, 200], "other": [4, 22, 146, 165, 178, 179, 184, 185, 187, 199, 200], "accord": [4, 21, 27, 28, 50, 88, 120, 161, 162, 171, 181, 185, 187, 189, 192, 196], "final": [4, 6, 32, 64, 69, 70, 74, 88, 92, 106, 150, 155, 161, 162, 165, 184], "measur": [4, 21, 22, 24, 41, 42, 43, 50, 53, 63, 64, 69, 70, 74, 83, 88, 91, 92, 101, 106, 134, 139, 144, 146, 147, 150, 161, 162, 165, 178, 182, 184, 185, 187, 190, 192], "boolean": [4, 22, 190], "flag": [4, 22, 170], "determin": [4, 22, 199], "enabl": [4, 163, 165, 179], "dynam": [4, 165, 179], "decoupl": [4, 165, 179], "model_config": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106], "classvar": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106], "configdict": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106], "model": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 123, 129, 130, 184, 192], "should": [4, 6, 8, 10, 21, 22, 29, 36, 46, 47, 51, 64, 70, 83, 88, 96, 101, 106, 125, 165, 179, 187, 189, 190, 192, 199], "conform": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106], "config": [4, 22, 36, 51, 64, 70, 83, 88, 96, 101, 106], "thi": [5, 6, 15, 16, 21, 22, 29, 33, 57, 64, 77, 96, 131, 140, 169, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 197, 199, 200], "defin": [5, 6, 7, 29, 31, 64, 124, 170, 182, 184, 185, 190, 199, 200], "function": [5, 6, 20, 34, 35, 40, 46, 49, 50, 54, 59, 62, 63, 65, 68, 69, 79, 82, 84, 85, 87, 89, 90, 94, 95, 97, 100, 102, 103, 105, 107, 112, 113, 115, 116, 118, 119, 122, 123, 129, 131, 137, 141, 165, 166, 168, 174, 179, 192], "benchmarkobservationidentifi": [5, 8, 179, 186, 187, 189, 193, 195, 196], "benchmarkobserv": [5, 7, 33, 44, 45, 179, 186, 187, 189, 193, 195, 196], "benchmarkrunresult": [5, 6, 7, 12, 21, 23, 35, 40, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 95, 97, 102, 103, 107, 112, 179], "benchmarkanalysisresult": [5, 6, 12, 21, 23, 35, 40, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 95, 97, 102, 103, 107, 112, 179], "kwarg": 6, "A": [6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 50, 59, 63, 65, 67, 69, 75, 76, 79, 84, 85, 88, 89, 91, 92, 98, 106, 107, 109, 110, 112, 119, 120, 123, 125, 126, 132, 133, 142, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 161, 163, 164, 165, 167, 169, 170, 171, 177, 184, 190, 192, 199, 200], "run": [6, 7, 8, 10, 21, 22, 23, 35, 40, 50, 54, 59, 63, 64, 65, 69, 79, 84, 85, 89, 90, 95, 97, 102, 103, 107, 112, 179, 182, 184, 185, 189, 192, 197, 200], "cortex": [6, 11], "experi": [6, 33, 35, 40, 41, 42, 43, 44, 45, 50, 58, 59, 63, 65, 66, 69, 70, 72, 73, 79, 84, 85, 88, 92, 98, 102, 103, 107, 112, 122, 129, 130, 134, 136, 146, 170, 185, 189, 197], "In": [6, 88, 184, 185, 188, 192, 199, 200], "order": [6, 32, 33, 123, 131, 145, 146, 179, 188, 190, 200], "write": [6, 138, 181, 182, 199], "new": [6, 7, 11, 157, 179, 182, 184, 185, 192, 200], "recommend": [6, 192, 199, 200], "deriv": [6, 199], "baseclass": 6, "addition": [6, 190], "custom": [6, 51, 70, 95, 96, 184, 185, 189, 195, 196, 200], "analysi": [6, 7, 12, 35, 40, 44, 45, 50, 59, 63, 65, 66, 69, 79, 84, 85, 89, 90, 95, 97, 102, 103, 107, 112, 179, 184, 192], "can": [6, 10, 16, 22, 39, 48, 50, 61, 69, 88, 140, 145, 179, 184, 185, 187, 188, 190, 192, 196, 200], "give": [6, 54, 163, 179, 184, 190, 192, 199], "pointer": 6, "analysis_funct": [6, 21, 35, 50, 63, 69, 84, 89, 95, 102, 107, 182], "field": [6, 199], "accept": [6, 58, 179, 199], "analysisresult": [6, 7, 21, 23, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 95, 97, 102, 103, 107, 112, 179, 182], "its": [6, 98, 116, 157, 179, 184, 185, 199], "input": [6, 11, 37, 46, 64, 70, 89, 95, 111, 131, 135, 136, 140, 151, 154, 156, 161, 163, 164, 177, 187, 189, 192], "result": [6, 7, 8, 10, 11, 12, 33, 48, 50, 53, 59, 60, 61, 63, 65, 69, 70, 77, 78, 79, 84, 85, 89, 90, 95, 97, 102, 103, 107, 112, 121, 127, 129, 161, 165, 179, 182, 184, 185, 189, 196, 199, 200], "onli": [6, 12, 64, 70, 88, 157, 177, 184, 185, 187, 190, 192, 194, 199], "pass": [6, 12, 111, 133, 140, 155, 165, 182, 188, 189, 195], "through": [6, 12, 25, 199], "iqmbackend": [6, 69, 89, 107, 132, 133], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 23, 24, 25, 33, 35, 44, 45, 50, 63, 66, 69, 84, 89, 95, 102, 107, 113, 115, 130, 167, 179, 182, 184, 185, 186, 188, 189, 192, 193, 196], "overridden": 6, "an": [6, 16, 17, 21, 22, 23, 24, 50, 63, 92, 96, 102, 103, 131, 135, 139, 140, 147, 156, 170, 175, 179, 181, 182, 184, 185, 190, 192, 199, 200], "xarrai": [6, 7, 11, 13, 21, 24, 35, 50, 63, 69, 84, 89, 95, 102, 107, 167, 179, 182], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 23, 24, 25, 33, 35, 44, 45, 46, 89, 107, 120, 132, 133, 145, 157, 169, 172, 179, 184, 185, 192, 196, 197, 199, 200], "inform": [6, 10, 32, 35, 47, 172, 199], "necessari": [6, 177, 184, 190, 200], "analys": 6, "calibration_set_id": [6, 187, 188, 191], "uuid": 6, "calibrationsetid": 6, "latest": [6, 165, 190, 198], "set": [6, 16, 17, 21, 37, 51, 64, 69, 70, 109, 111, 117, 120, 130, 144, 147, 151, 161, 165, 181, 184, 185, 190, 191, 193, 197, 198, 200], "runresult": [6, 7, 10, 21, 23, 50, 59, 63, 65, 69, 79, 84, 85, 102, 103, 107, 112, 179, 182], "analyz": [6, 10, 21, 23, 143, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 200], "run_index": [6, 189, 196], "1": [6, 36, 51, 55, 76, 88, 91, 92, 106, 109, 110, 120, 122, 125, 131, 146, 155, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "intern": [6, 17], "perform": [6, 44, 45, 51, 64, 70, 123, 134, 146, 155, 178, 184, 192, 197, 199, 200], "make": [6, 69, 165, 179, 180, 184, 198, 199, 200], "shallow": 6, "copi": [6, 142, 181, 192, 199], "produc": [6, 32, 70, 192, 200], "therefor": [6, 57, 77], "chang": [6, 179, 198, 199], "data": [6, 7, 11, 21, 22, 24, 32, 41, 44, 45, 66, 78, 96, 114, 117, 123, 129, 138, 145, 171, 172, 182, 189, 190, 192, 196], "just": [6, 184], "structur": [6, 91, 184, 185], "arrai": [6, 63, 83, 88, 92, 95, 96, 101, 106, 130, 131, 136, 140, 176, 192], "index": [6, 21, 29, 31, 32, 63, 69, 88, 109, 196, 198], "construct": [6, 22, 26, 176], "updat": [6, 44, 45, 46, 63, 64, 179, 184, 185, 187, 189, 200], "core": 7, "circuit_contain": 7, "plot": [7, 21, 23, 33, 41, 42, 43, 44, 45, 78, 98, 130, 168, 172, 179, 182, 184, 185, 186, 189, 190, 193, 200], "dict": [7, 11, 24, 25, 35, 39, 41, 42, 43, 44, 45, 46, 53, 54, 60, 63, 66, 67, 69, 71, 74, 75, 76, 88, 89, 91, 92, 98, 106, 107, 108, 109, 110, 119, 120, 121, 124, 125, 126, 127, 128, 130, 132, 133, 134, 139, 140, 142, 144, 146, 147, 150, 152, 153, 154, 159, 160, 162, 165, 167, 169, 170, 171, 176, 178, 182], "matplotlib": [7, 172, 182, 184, 185, 191, 192], "figur": [7, 14, 33, 41, 42, 43, 58, 66, 78, 98, 130, 170, 172, 182, 188, 189, 191, 192], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 23, 33, 44, 45, 66, 130, 154, 179, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 24, 25, 29, 31, 32, 33, 37, 38, 39, 44, 45, 50, 52, 53, 54, 56, 58, 60, 63, 64, 69, 71, 72, 73, 74, 75, 77, 78, 88, 89, 91, 92, 106, 107, 108, 109, 110, 111, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 178, 179, 181, 185, 188, 190, 191, 192, 196, 199, 200], "object": [7, 8, 9, 10, 16, 17, 18, 21, 23, 33, 69, 89, 107, 114, 132, 133, 149, 159, 160, 165, 169, 170, 172, 192, 196, 199], "dataclass": [7, 8, 10], "store": [7, 8, 10, 33, 169, 179, 187, 200], "consist": [7, 179, 190, 199], "map": [7, 22, 29, 32, 39, 44, 45, 53, 54, 64, 70, 150, 155, 158, 161, 162, 169, 170, 173, 179, 190], "kei": [7, 41, 42, 43, 46, 53, 60, 63, 69, 74, 88, 91, 92, 98, 106, 109, 110, 120, 144, 146, 147, 150, 152, 153, 154, 162, 165, 171, 178, 181, 188, 191, 192, 196], "valu": [7, 8, 21, 22, 25, 29, 39, 41, 42, 43, 46, 53, 54, 60, 63, 64, 88, 91, 92, 98, 106, 109, 110, 120, 122, 131, 144, 146, 147, 150, 153, 154, 155, 162, 165, 171, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "pair": [7, 30, 32, 35, 39, 41, 42, 43, 44, 45, 63, 96, 98, 136, 145, 151, 158, 163, 184, 188], "plot_nam": 7, "plot_al": [7, 182, 184, 185, 187, 188, 189, 190, 192, 195, 196], "from_run_result": 7, "creat": [7, 21, 22, 29, 30, 50, 54, 59, 63, 65, 69, 79, 84, 85, 102, 103, 107, 112, 172, 180, 182, 200], "identifi": [8, 9, 11, 35, 69, 89, 107, 123, 130, 132, 133, 135, 159, 165, 167, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 199], "uncertainti": [8, 25, 41, 42, 43, 98, 154, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "singl": [8, 10, 13, 16, 18, 22, 33, 36, 51, 52, 63, 64, 69, 70, 92, 115, 120, 147, 165, 175, 179, 184, 185, 192, 200], "string": [8, 9, 11, 17, 18, 46, 134, 146, 147, 152, 159, 176, 188, 200], "qubit_indic": [9, 16, 186, 187, 188, 189, 191, 193, 195, 196], "eas": 9, "indic": [9, 42, 43, 44, 45, 69, 74, 98, 153, 162, 169, 170, 172, 176, 190, 199], "wa": [9, 42, 43, 57, 77, 134, 184, 185, 199], "properti": [9, 16, 17], "string_identifi": [9, 184, 189, 190, 192], "version": [9, 113, 181, 184, 185, 199, 200], "enough": [10, 190], "those": [10, 69, 74, 161, 184, 185, 192, 199], "count": [11, 21, 22, 23, 46, 53, 54, 60, 69, 71, 108, 121, 127, 134, 139, 140, 142, 144, 147, 153, 159, 160, 167, 176, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "add": [11, 17, 21, 31, 35, 50, 63, 69, 84, 89, 95, 102, 107, 120, 166, 179, 181, 199, 200], "job": [11, 63, 67, 69, 89, 107, 132, 133, 159, 182, 185, 186, 187, 188, 189, 193, 194, 196], "If": [11, 22, 51, 88, 92, 95, 96, 106, 128, 134, 147, 152, 172, 178, 184, 185, 188, 190, 192, 194, 199], "same": [11, 17, 32, 106, 145, 184, 185, 187, 189, 190, 192, 199], "alreadi": [11, 186, 187], "present": 11, "old": 11, "both": [11, 70, 128, 184, 187, 188, 193, 200], "ad": [11, 179, 185, 186, 187, 188, 189, 191, 193, 194, 196], "togeth": [11, 200], "bitstr": [11, 46, 53, 54, 55, 60, 76, 134, 147, 153], "current": [11, 22, 63, 138, 145, 190, 192, 200], "instanc": [11, 16, 17, 24, 25, 43, 58, 98, 179, 192], "xr": [11, 13, 21, 24, 25, 33, 35, 44, 45, 50, 63, 66, 69, 84, 89, 95, 102, 107, 130, 167, 182], "merg": [11, 13], "where": [11, 16, 17, 22, 110, 150, 172, 179, 184, 185, 190, 192, 199], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 29, 31, 38, 129, 163, 190], "size": [13, 22, 29, 48, 50, 58, 60, 128, 163, 164, 175, 182, 184, 189, 195, 200], "dateset": 13, "fig": [14, 33, 182, 190], "show": [14, 172, 182, 184, 185, 187, 189, 190], "close": [14, 182], "easili": [15, 179, 200], "interact": [15, 179], "quantum": [15, 21, 22, 24, 26, 27, 28, 29, 30, 50, 61, 63, 64, 68, 69, 70, 71, 74, 77, 79, 109, 120, 121, 125, 126, 127, 138, 139, 143, 144, 146, 148, 150, 155, 157, 165, 169, 172, 178, 179, 188, 190, 192, 197, 198, 200], "circuitgroup": [15, 16, 21, 179], "benchmarkcircuit": [15, 18, 179], "circuit_group": [16, 188, 191], "group": [16, 17, 44, 45, 84, 180, 184, 188, 191, 198], "purpos": [16, 17, 199], "typic": [16, 17, 184, 185], "repres": [16, 17, 38, 39, 66, 78, 151, 153, 156, 158, 172, 199], "exampl": [16, 113, 163, 179, 180, 182, 183, 190, 192, 198, 199, 200], "insid": [16, 179], "get_circuit_group_by_nam": 16, "get": [16, 116, 147, 149, 189, 192, 194], "desir": [16, 17, 156], "doe": [16, 22, 199], "exist": [16, 18, 179, 184, 185, 200], "group_nam": [16, 188], "integ": [16, 17, 22, 38, 39, 69, 74, 109, 151, 158, 163], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 25, 29, 37, 41, 42, 43, 44, 45, 53, 54, 58, 60, 63, 64, 66, 69, 74, 78, 88, 89, 96, 98, 107, 123, 124, 125, 126, 128, 130, 132, 139, 145, 155, 156, 162, 163, 165, 169, 170, 171, 178], "qubit_layout": [16, 17, 21, 24, 25, 29, 31, 32, 33, 172, 184, 189, 190, 192], "qiskit_iqm": [17, 22, 179, 182, 184, 185, 187, 188, 189, 191], "iqm_circuit": 17, "iqmcircuit": [17, 21, 26, 27, 28, 29, 30, 63, 69, 74, 107, 109, 110, 119, 120, 124, 125, 126, 128, 132, 133, 135, 139, 143, 144, 146, 148, 150, 155, 157, 162, 165, 179], "It": [17, 88, 96, 181, 184, 185, 200], "common": [17, 118, 199], "activ": [17, 148, 157, 178, 200], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 199, 200], "found": [17, 145, 184, 185, 190, 191, 200], "benchmark_circuit": [18, 188, 191], "get_benchmark_circuits_by_nam": [18, 188], "request": 18, "otherwis": [18, 199], "ghz": [19, 179, 197, 198, 200], "verifi": [19, 135, 181], "greenberg": [19, 21, 184, 185, 197, 198], "horn": [19, 21, 184, 185, 197, 198], "zeiling": [19, 21, 184, 185, 197, 198], "state": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 38, 40, 42, 43, 45, 121, 127, 146, 179, 182, 192, 197, 198, 199, 200], "graph": [19, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 50, 51, 52, 53, 54, 55, 57, 58, 60, 98, 151, 156, 169, 170, 171, 172, 173, 179, 184, 185, 190, 197, 198, 200], "estim": [19, 21, 22, 24, 25, 35, 36, 48, 50, 64, 69, 84, 86, 89, 93, 95, 98, 102, 104, 107, 108, 134, 147, 179, 184, 185, 187, 189, 190, 193], "amount": [19, 36, 166, 167, 179], "bipartit": [19, 35, 179, 197, 198, 200], "nativ": [19, 21, 32, 35, 38, 92, 95, 125, 126, 128, 135, 144, 146, 176, 178, 179, 184], "ghzbenchmark": [20, 22, 184, 185, 189, 190], "benchmark_definit": [20, 22, 34, 36, 49, 51, 62, 64, 68, 70, 82, 83, 87, 88, 94, 96, 100, 101, 105, 106, 182], "ghzconfigur": [20, 21, 184, 185, 189, 190], "qualiti": [21, 184, 185], "comput": [21, 23, 29, 53, 54, 69, 71, 72, 73, 75, 119, 121, 127, 153, 154, 172, 177, 181, 184, 185, 188, 190, 192, 198, 199, 200], "fidel": [21, 22, 23, 24, 25, 31, 32, 33, 64, 80, 81, 84, 86, 89, 93, 95, 96, 98, 99, 102, 104, 107, 108, 123, 130, 145, 171, 172, 179, 192, 197, 198, 200], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 51, 70, 123], "prepar": [21, 38, 91, 146, 175, 178, 182, 184, 190, 192, 199], "topologi": [21, 51, 145, 155, 157, 161, 169, 172, 179, 184], "subset": [21, 24, 25, 29, 31, 32, 39], "system": [21, 22, 24, 25, 29, 31, 32, 128, 138, 184, 185, 192, 199, 200], "protocol": [21, 24, 25, 29, 31, 32, 184, 185, 197], "0": [21, 29, 31, 32, 50, 57, 70, 88, 91, 106, 109, 110, 120, 131, 155, 161, 163, 177, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "smaller": [21, 22, 29, 184, 200], "equal": [21, 29, 69, 179, 184, 185], "quantumcircuit": [21, 26, 27, 28, 29, 30, 38, 50, 63, 69, 74, 89, 91, 92, 107, 110, 119, 120, 124, 125, 126, 132, 133, 139, 143, 146, 148, 150, 155, 157, 162, 165, 176, 178, 179, 181, 182, 192], "generate_coherence_meas_circuit": 21, "take": [21, 22, 155, 166, 179, 184, 185, 192, 200], "output": [21, 47, 71, 72, 73, 74, 75, 76, 77, 131, 138, 163, 179, 181, 184, 185, 188, 192, 196, 200], "need": [21, 63, 140, 184, 185, 188, 190, 192, 200], "via": [21, 22, 184, 185, 190, 192], "mult": 21, "q": [21, 48, 50, 51, 57, 88, 189, 192, 197, 198, 200], "coher": [21, 22, 24, 184, 185, 189, 190], "qc_list_transpil": 21, "append_rm": 21, "num_rm": [21, 22, 190], "append": [21, 63, 178, 181, 182, 192], "1q": [21, 88, 91, 92, 106, 109, 110, 120, 128, 176, 178, 179, 184], "clifford": [21, 81, 82, 83, 84, 85, 88, 91, 92, 100, 101, 102, 106, 109, 110, 119, 120, 124, 125, 126, 128, 135, 136, 176, 178, 179, 180, 188, 193, 197, 198, 200], "sampl": [21, 36, 41, 42, 43, 54, 60, 70, 76, 88, 91, 92, 95, 96, 101, 106, 108, 109, 110, 111, 120, 124, 125, 126, 142, 192], "uniformli": [21, 88, 91, 92, 106, 109, 110, 120, 184], "random": [21, 22, 36, 41, 42, 43, 51, 63, 80, 82, 87, 88, 89, 92, 96, 100, 101, 105, 106, 110, 118, 120, 125, 126, 142, 156, 175, 176, 178, 179, 181, 185, 187, 190, 192, 195, 197, 198, 200], "param": [21, 26, 27, 28, 30, 63, 72, 84, 102, 111, 115, 117, 119, 121, 132, 133, 136, 153, 159, 160, 177], "how": [21, 180, 183, 192, 197, 198, 199, 200], "mani": [21, 63, 179, 190], "origin": [21, 37, 69, 74, 142, 155, 157, 199], "generate_readout_circuit": 21, "wrapper": 21, "creation": [21, 190], "differ": [21, 66, 106, 169, 184, 185, 187, 190, 192, 196, 197, 199, 200], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "metadata": [21, 33, 35, 50, 63, 67, 69, 84, 89, 95, 102, 107, 160, 187], "further": [21, 179], "storag": [21, 179], "1024": 22, "iqm_client": [22, 36, 51, 64, 70, 83, 88, 96, 101, 106, 185], "state_generation_routin": [22, 184, 185, 189, 190], "tree": [22, 29, 31, 184, 189, 190], "custom_qubits_arrai": [22, 50, 51, 70, 96, 179, 184, 185, 188, 189, 190, 195, 196, 200], "sequenc": [22, 36, 37, 38, 41, 51, 64, 69, 70, 83, 88, 89, 91, 92, 96, 101, 106, 107, 108, 120, 121, 124, 125, 126, 127, 132, 146, 151, 154, 155, 161, 163, 164, 170, 176, 178, 184, 186, 189, 192, 193], "qiskit_optim_level": [22, 51, 64, 70, 88, 91, 92, 106, 109, 110, 155, 184, 185, 187, 188, 189, 194, 196, 200], "3": [22, 51, 64, 70, 77, 88, 131, 163, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "optimize_sqg": [22, 51, 63, 64, 70, 155, 184, 185, 187, 189, 196, 200], "true": [22, 24, 51, 64, 69, 70, 88, 92, 130, 134, 146, 155, 181, 184, 185, 188, 189, 190, 192, 193, 195, 196, 200], "fidelity_routin": [22, 184, 185, 189, 190], "100": [22, 36, 64, 70, 142, 184, 185, 187, 188, 189, 191, 192, 195, 200], "rem": [22, 24, 51, 70, 78, 139, 179, 184, 185, 189, 190, 195, 196, 200], "mit_shot": [22, 51, 69, 70, 139, 184, 185, 189, 190, 195, 196, 200], "1000": [22, 51, 70, 139, 182, 184, 185, 189, 190, 192, 195, 196], "cal_url": [22, 145, 172, 188, 190], "possibl": [22, 156, 190, 196, 199], "optim": [22, 63, 64, 70, 88, 91, 92, 106, 109, 110, 155, 179, 184, 185, 187, 189, 190, 192, 195, 196, 200], "log": [22, 27, 28, 29, 31, 190], "depth": [22, 26, 27, 28, 29, 38, 51, 69, 78, 88, 89, 91, 92, 96, 106, 107, 109, 110, 122, 125, 129, 132, 134, 184, 185, 186, 187, 188, 189, 190, 193, 194], "coupl": [22, 29, 32, 39, 64, 70, 145, 155, 158, 161, 170, 173, 184, 190], "cz": [22, 30, 31, 32, 92, 125, 144, 145, 155, 176, 178, 181, 184, 187, 190], "account": [22, 51, 155, 192, 200], "algorithm": [22, 31, 120, 172, 184, 185, 190], "span": [22, 29, 31], "choos": [22, 50, 185, 190, 199], "largest": [22, 184, 185, 190], "weight": [22, 31, 32, 76], "distanc": [22, 31, 192], "parallel": [22, 31, 39, 61, 83, 88, 92, 96, 101, 125, 132, 134, 143, 179, 184, 185, 189, 190, 193], "applic": [22, 31, 120, 181, 190, 199], "cx": [22, 26, 31, 63], "scale": [22, 184, 185], "logarithm": [22, 190], "connect": [22, 31, 136, 172, 179, 190], "naiv": [22, 51, 190], "appli": [22, 26, 31, 39, 63, 70, 179, 185, 189, 190, 194, 199], "textbook": [22, 190], "linearli": 22, "specifi": [22, 37, 64, 69, 70, 88, 89, 91, 92, 96, 101, 106, 107, 109, 110, 120, 128, 132, 133, 136, 144, 147, 151, 152, 153, 161, 163, 165, 176, 179, 184, 185, 188, 194, 200], "assum": [22, 33, 131, 147, 199], "e": [22, 88, 101, 106, 131, 134, 146, 147, 167, 179, 184, 185, 187, 189, 190, 192, 196], "g": [22, 88, 101, 106, 131, 134, 146, 156, 167, 179, 181, 184, 185, 189, 190, 192, 196], "label": [22, 41, 42, 43, 46, 64, 78, 98, 101, 109, 119, 126, 130, 146, 147, 155, 161, 176, 178, 179, 181, 182, 184, 187, 190], "meant": 22, "NOT": 22, "support": [22, 32, 199], "denot": 22, "provid": [22, 56, 169, 180, 182, 183, 184, 185, 188, 189, 190, 191, 199], "here": [22, 108, 182, 184, 185, 192], "ha": [22, 51, 131, 184, 185, 186, 192, 194, 199, 200], "than": [22, 184, 185, 190, 194, 200], "small": [22, 179], "level": [22, 51, 64, 70, 88, 91, 92, 106, 109, 110, 179, 184, 185, 187, 189, 190, 196], "architectur": 22, "consecut": 22, "reduc": [22, 157], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 24, 36, 92, 113, 179, 184, 185, 190], "moonei": [22, 24, 184, 185, 190], "2021": [22, 24, 184, 185, 190, 200], "randomized_measur": [22, 190], "outlin": 22, "http": [22, 25, 27, 28, 113, 154, 181, 182, 185, 188, 189, 190, 191, 192, 199, 200], "arxiv": [22, 25, 27, 28, 64, 92, 120, 181, 190, 200], "org": [22, 25, 27, 28, 181, 190, 192, 199], "ab": [22, 25, 27, 28, 181, 190, 191], "1812": [22, 25], "02624": [22, 25], "respect": [22, 41, 88, 91, 106, 108, 146, 171, 179, 184], "chosen": [22, 51, 184, 185, 190, 192], "readout": [22, 24, 51, 69, 70, 75, 137, 138, 140, 179, 185, 189, 190], "error": [22, 24, 51, 69, 70, 75, 93, 94, 96, 130, 140, 172, 179, 184, 185, 189, 190, 192, 197, 198, 200], "mitig": [22, 24, 51, 69, 70, 75, 137, 138, 139, 140, 179, 185, 189, 190], "total": [22, 36, 96, 117, 181, 184, 185, 187, 190], "url": [22, 96, 145, 171, 172, 184, 188, 200], "retriev": [22, 63, 67, 96, 159, 160, 167, 171, 172, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "priorit": 22, "high": [22, 184, 185, 190], "ideal_prob": 25, "num_qubit": [25, 26, 27, 28, 30, 50, 51, 69, 108, 121, 127, 185, 187, 188, 191], "cross": [25, 184, 185, 199], "correl": [25, 190], "rm": [25, 178], "eq": [25, 181], "34": [25, 182, 186, 187, 188, 189, 191, 195, 196, 198], "hadamard": [26, 181], "seri": 26, "linear": [26, 96, 170, 188], "fashion": 26, "symmetr": 26, "halv": 26, "1807": [27, 190], "05572": [27, 190], "2101": [28, 190], "08946": [28, 190], "n_state": [29, 184], "networkx": [29, 31, 32, 50, 52, 53, 54, 55, 156, 173, 184, 185], "n": [29, 51, 84, 107, 152, 156, 171, 175, 181, 184, 185, 188, 190, 191], "participating_qubit": 29, "qc": [29, 63, 146, 148, 178, 181, 182, 200], "maxim": [30, 184, 185], "between": [30, 31, 110, 131, 138, 172, 184, 185, 187, 190], "move": [30, 179], "calcul": [31, 52, 58, 74, 117, 143, 166, 179, 184, 185], "cx_map": 31, "particip": 31, "2qb": 31, "them": [31, 39, 182, 200], "subgraph": 31, "each": [31, 33, 39, 42, 43, 58, 72, 73, 74, 78, 88, 98, 101, 106, 108, 110, 114, 131, 134, 139, 144, 145, 172, 176, 178, 186, 188, 189, 190, 192, 193, 194, 199, 200], "edg": [31, 32, 37, 39, 53, 54, 55, 120, 151, 156, 158, 170, 171, 172, 179, 184, 185, 188, 190], "Then": [31, 200], "find": [31, 37, 96, 184, 185, 190], "most": [31, 192], "central": 31, "posit": [31, 169, 172], "next": 31, "start": [31, 50, 131, 184, 187, 189, 190, 192, 200], "smallest": 31, "layer": [31, 39, 52, 56, 60, 61, 63, 64, 69, 86, 88, 89, 91, 92, 93, 94, 95, 96, 98, 104, 106, 107, 109, 110, 120, 132, 143, 170, 179, 189, 197, 198, 200], "first": [31, 50, 63, 88, 106, 190, 192, 194, 196, 197], "coupling_map": [32, 155, 184, 185, 188, 191], "couplingmap": [32, 39, 43, 98, 158, 161, 170, 173], "edges_c": 32, "fidelities_c": 32, "float": [32, 41, 42, 43, 44, 45, 46, 50, 52, 53, 55, 56, 57, 58, 60, 63, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 88, 91, 92, 98, 101, 106, 108, 109, 110, 120, 121, 122, 123, 127, 130, 134, 135, 138, 140, 144, 145, 147, 152, 153, 154, 169, 177], "have": [32, 125, 147, 184, 185, 199, 200], "wai": [32, 145, 179, 184, 185], "v": [33, 58, 63, 65, 184, 185, 189, 193], "user": [33, 185, 187, 188, 191, 200], "identif": [33, 199], "graphstatebenchmark": [34, 36, 191], "graphstateconfigur": [34, 35, 191], "backend_arg": [35, 50, 63, 69, 84, 89, 91, 92, 95, 102, 107, 109, 110, 120, 124, 125, 126, 132, 133, 135, 136, 139, 144, 171], "entangel": 35, "neg": [35, 41, 42, 43, 44, 45, 177, 179], "add_all_meta_to_dataset": [35, 50, 63, 69, 89, 95, 102, 107], "variabl": [35, 50, 63, 69, 84, 89, 95, 102, 107, 123, 182, 190, 192, 200], "add_all_circuits_to_dataset": [35, 69, 84, 102], "generate_all_circuit_info_for_graph_state_benchmark": 35, "associ": [35, 76, 189, 199], "disjoint": [35, 96, 163, 170, 188], "neighbor": [35, 37, 41, 44, 45, 151, 191], "project": [35, 41, 46, 76, 200], "node": [35, 37, 39, 51, 53, 54, 58, 60, 151, 156, 169, 172, 184, 185, 190, 195], "cover": 35, "tomographi": [36, 41, 42, 43, 44, 45, 146, 174, 178, 197, 198, 200], "state_tomographi": [36, 41, 42, 43, 191], "shadow_tomographi": [36, 41, 42, 43], "num_bootstrap": [36, 42, 43, 191], "50": [36, 182, 184, 185, 188, 189, 191, 192, 193, 194, 195, 199], "n_random_unitari": [36, 191], "n_median_of_mean": [36, 191], "shadow": [36, 42, 43, 44, 174, 176, 178], "bootstrap": [36, 42, 43, 142, 179, 192], "haar": [36, 175, 176, 178], "unitari": [36, 175, 176, 178, 184, 185, 192], "local": [36, 176, 178, 190], "mean": [36, 41, 42, 43, 57, 134, 144, 172, 181, 184, 185, 187, 192, 199], "over": [36, 77, 138, 153, 184], "median": [36, 41, 42, 43, 154, 184, 185], "nb": [36, 147, 177, 184, 186, 187, 189], "call": [36, 138, 179], "factor": [36, 187], "x": [36, 55, 115, 117, 130, 146, 147, 169, 175, 179, 181, 182, 188, 191, 192, 194, 196], "non": [37, 122, 184, 185, 199], "overlap": [37, 39, 179], "target": [38, 155, 192], "cp_map": [39, 158], "sort": [39, 131, 162, 188, 194, 196], "arrang": 39, "being": [39, 41, 57, 63, 69, 74, 77, 78, 88, 91, 92, 106, 108, 109, 110, 120, 121, 127, 144, 146, 152, 153, 165, 171, 178, 184, 185], "item": [39, 184, 185, 191], "correspond": [39, 41, 42, 43, 46, 50, 59, 61, 63, 64, 65, 69, 74, 78, 79, 84, 85, 88, 89, 90, 91, 92, 95, 96, 97, 98, 102, 103, 106, 107, 108, 109, 110, 112, 120, 130, 134, 139, 146, 162, 165, 171, 173, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196], "2q": [39, 88, 91, 92, 93, 95, 96, 109, 110, 120, 128, 130, 171, 184, 189], "matrix": [41, 111, 152, 175, 177, 181, 184, 185], "ndarrai": [41, 63, 122, 123, 129, 152, 175, 176, 177, 178], "qubit_pair": 41, "backend_nam": [41, 42, 44, 45, 58, 78, 186, 187, 188, 191, 194, 196], "timestamp": [41, 42, 43, 44, 45, 58, 78, 98, 170, 186, 194], "num_rm_sampl": [41, 42, 43], "num_moms_sampl": [41, 42, 43], "densiti": [41, 88, 91, 92, 106, 109, 110, 120, 130, 152, 177, 184, 185, 191], "np": [41, 63, 122, 129, 152, 175, 176, 177, 178, 181, 184, 185, 188, 189, 190, 191, 192, 193], "gather": 41, "qubit_nam": [42, 43, 98, 170, 188, 191], "num_shot": [42, 43, 64, 184, 185, 187, 189], "max": [42, 43, 51, 163, 184, 185, 191, 200], "backend_coupling_map": [43, 98, 170, 173, 188], "station": [43, 96, 98, 170, 172, 182, 188, 200], "won": 43, "t": [43, 179, 191, 199], "displai": [43, 179, 181, 184, 185, 186, 188, 189, 192, 193, 199], "titl": [43, 130, 199], "all_qubit_pairs_per_group": [44, 45], "all_qubit_neighbors_per_group": [44, 45], "all_unprojected_qubit": [44, 45, 191], "execution_timestamp": [44, 45, 186, 187, 188, 191, 194, 196], "experiment": [44, 45], "unproject": [44, 45], "pauli_expect": [46, 152], "projected_count": 46, "nonid_pauli_label": 46, "helper": [46, 131], "pauli": [46, 106, 108, 109, 110, 111, 146, 147, 152, 181, 192], "expect": [46, 53, 54, 60, 88, 91, 92, 106, 109, 110, 120, 147, 152, 179, 184], "outermost": [46, 144], "innermost": 46, "ident": [46, 181], "infer": [46, 184], "z": [46, 147, 155], "instead": [46, 179, 200], "logger": [47, 166], "everi": 47, "warn": [47, 181, 184, 185, 187, 188, 191], "score": [48, 50, 51, 57, 189, 197, 198, 200], "combinatori": [48, 50, 184, 185], "problem": [48, 50, 52, 53, 54, 55, 57, 58, 184, 185, 200], "meaning": [48, 50, 61, 69, 70], "qscorebenchmark": [49, 51, 184, 185, 189, 195], "qscoreconfigur": [49, 50, 184, 185, 189, 195], "generate_maxcut_ansatz": 50, "theta": 50, "ansatz": [50, 52, 54, 56, 60], "qaoa": [50, 51, 52, 56, 60], "maxcut": [50, 52, 53, 54, 55, 56, 60, 184, 185, 189, 195], "end": [50, 63, 69, 181, 199], "variat": [50, 184, 185], "gamma": [50, 52], "beta": [50, 52, 57, 58, 184, 185, 189, 195], "choose_qubits_na": 50, "sequenti": [50, 88, 133, 186, 189], "choose_qubits_custom": 50, "element": 50, "match": [50, 190], "num_inst": [51, 58, 184, 185, 189, 195], "num_qaoa_lay": [51, 184, 185, 189, 195], "min_num_nod": [51, 184, 185, 189, 195], "max_num_nod": [51, 184, 185, 189, 195], "use_virtual_nod": [51, 58, 184, 185, 189, 195], "use_classically_optimized_angl": [51, 58, 184, 185, 189, 195], "choose_qubits_routin": [51, 70, 184, 185, 189, 195, 196, 200], "min_num_qubit": 51, "seed": [51, 184, 185, 189, 195], "qpu_topologi": [51, 184, 185, 195], "crystal": [51, 145, 169, 184, 195], "min": [51, 138, 184, 185, 187], "taken": [51, 184, 185], "increas": [51, 131, 146, 192], "potenti": 51, "pre": 51, "optimis": 51, "tune": 51, "minumum": 51, "virtual_nod": [51, 53, 54, 60], "upon": [51, 64, 70], "qpu": [51, 137, 179, 184, 185], "either": [51, 88, 123, 128, 140, 144, 145, 153, 169, 176, 178, 181, 190, 192, 199, 200], "star": [51, 145, 155, 161, 169, 179, 183, 184, 190, 198], "angl": [52, 56, 58, 60], "qubit_to_nod": [53, 54], "val": 53, "virtual": [53, 54, 58, 60, 155], "cut": [53, 54, 55, 60, 184, 185], "avg": [53, 189, 192, 195], "callabl": [54, 123, 129], "parametr": [54, 61, 63, 64, 184, 185, 187, 189, 192], "minu": [55, 96], "sign": 55, "solut": [55, 184, 185], "multipli": 55, "obj": 55, "num_lay": 56, "approximation_ratio": 57, "approxim": [57, 58, 184, 185, 189, 195], "ratio": [57, 58, 184, 185, 189, 195], "abov": [57, 77, 184, 185, 192, 199], "success": [57, 77, 184, 185], "condit": [57, 77, 177, 190, 199], "threshold": [57, 58, 70, 77, 78, 184, 185], "beta_ratio": 58, "beta_std": 58, "includ": [58, 66, 142, 170, 179, 184, 185, 187, 189, 190, 199], "standard": [58, 70, 73, 82, 130, 144, 179, 192, 200], "deviat": [58, 70, 73, 130, 144], "classic": [58, 60, 69, 146, 147, 150, 178], "graph_phys": 60, "qubit_nod": 60, "use_classical_angl": 60, "qaoa_lay": 60, "solv": [60, 184, 185], "averag": [60, 72, 77, 78, 84, 102, 104, 108, 123, 179, 184, 185, 192], "presenc": 60, "volum": [61, 68, 69, 70, 79, 179, 197, 198, 200], "reflect": [61, 63, 69, 80, 81, 99], "deepest": [61, 69], "oper": [61, 80, 135, 144, 179, 181, 190, 192, 197, 198], "second": [61, 63, 88, 197, 198], "clop": [61, 179, 197, 198, 200], "speed": [61, 63, 184, 185], "clops_v": [61, 184, 185, 187, 189], "qv": [61, 63, 64, 69, 70, 72, 73, 77, 78, 179, 184, 185, 187, 189, 197, 198], "clops_h": [61, 64, 187, 189], "squar": [61, 184, 185, 192], "clopsbenchmark": [62, 64, 184, 185, 187, 189], "clopsconfigur": [62, 63, 184, 185, 187, 189], "h": [63, 65], "append_parameterized_unitari": 63, "q0": 63, "q1": 63, "decompos": [63, 184], "su": 63, "4": [63, 131, 146, 152, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "involv": [63, 184, 185], "belong": [63, 92, 134], "generate_single_circuit": [63, 69], "generate_circuit_list": [63, 69], "generate_random_paramet": 63, "templat": [63, 184, 185, 187, 189], "float64": 63, "assign_random_parameters_to_al": 63, "dict_parametrized_circ": 63, "clops_cycl": 63, "sorted_transpiled_qc_list": [63, 69, 165], "cycl": 63, "assign": [63, 64, 88, 89, 96, 106, 142, 146, 178, 179, 184, 185, 187, 189], "elaps": [63, 66, 67, 166, 187, 189], "time": [63, 66, 67, 69, 89, 107, 132, 133, 166, 179, 184, 185, 187, 189, 190, 192], "submiss": [63, 69, 89, 107, 132, 133, 184, 185, 187, 199], "generate_transpiled_clops_templ": 63, "num_circuit": [64, 70, 184, 185, 187, 189, 192, 196, 200], "num_upd": [64, 184, 185, 187, 189], "10": [64, 96, 134, 171, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200], "clops_h_bool": [64, 187, 189], "one": [64, 96, 131, 134, 182, 184, 185, 190, 192, 194, 199, 200], "establish": [64, 187, 189], "By": [64, 187, 189], "definit": [64, 184, 185, 187, 189, 199], "2110": [64, 200], "14108": [64, 200], "quant": [64, 120, 200], "ph": [64, 120, 200], "rigor": [64, 192], "loos": 64, "www": [64, 181, 199], "ibm": [64, 138], "com": [64, 154, 185, 188, 190, 191], "blog": 64, "metric": [64, 184, 185, 192, 193], "restrict": [64, 70, 161, 185, 189, 196], "consid": [64, 70, 96, 161, 176, 185], "clops_data": 66, "job_meta": 67, "quantumvolumebenchmark": [68, 70, 184, 185, 189, 196], "quantumvolumeconfigur": [68, 69, 184, 185, 189, 196, 200], "classical_permut": 69, "permut": 69, "avoid": 69, "swap": [69, 181], "get_rem_quasidistro": 69, "sorted_qc_list_indic": [69, 74], "execution_result": [69, 71], "quasicollect": [69, 75, 139], "quasiprob": [69, 75, 139, 140], "qubii": 69, "untranspil": [69, 74, 91, 92, 124, 155, 179], "submit_single_qv_job": 69, "submit": [69, 89, 107, 132, 133, 165, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 199], "organ": [69, 165], "vanilla": [69, 78, 107, 132, 133], "dd": [69, 78, 107, 132, 133], "num_sigma": [70, 77, 78, 184, 185, 189, 196, 200], "least": [70, 184, 185, 192, 199], "criteria": [70, 95], "consensu": 70, "post": [70, 185, 186, 188, 189, 193, 194, 196], "process": [70, 184, 185, 186, 188, 189, 193, 194, 196], "when": [70, 179, 184, 187, 190, 200], "unmitig": 70, "1_000": [70, 184, 185, 189, 196, 200], "ideal_heavy_output": [71, 75], "hop": [71, 72, 73, 77, 78, 179], "ideal": [71, 108, 184, 185, 191], "heavi": [71, 72, 73, 74, 75, 76, 77, 184, 185], "cumul": [72, 73], "probabl": [72, 73, 75, 76, 88, 91, 92, 106, 109, 110, 120, 121, 127, 134, 153, 184, 185, 194, 200], "individu": [72, 73, 130, 176, 179, 184, 190, 192, 199, 200], "trial": [72, 73], "qc_list": [74, 155], "bitrstr": 74, "all_rem_quasidistro": 75, "distribut": [75, 76, 153, 181, 184, 185, 199], "noiseless": [75, 185, 189, 191, 196], "onto": 76, "heavy_output_prob": [77, 196], "within": [77, 170, 199, 200], "sigma": [77, 78], "qv_result": [78, 184, 185, 196], "qv_results_typ": [78, 196], "in_volumetr": 78, "plot_rem": 78, "come": [78, 108, 140, 147], "context": 78, "volumetr": 78, "correct": [78, 108, 138, 139, 179, 184, 185, 192], "rb": [81, 83, 84, 85, 86, 88, 89, 90, 91, 99, 101, 102, 103, 104, 106, 107, 121, 122, 123, 125, 127, 129, 130, 133, 134, 136, 179, 181, 184, 186, 188, 189, 193], "cliffordrandomizedbenchmark": [82, 83, 184, 186, 189], "cliffordrbconfigur": [82, 84, 184, 186, 189], "qubits_arrai": [83, 88, 92, 101, 106, 125, 130, 132, 134, 136, 184, 186, 188, 189, 193, 194, 200], "sequence_length": [83, 101, 124, 125, 184, 186, 189, 193, 200], "num_circuit_sampl": [83, 88, 92, 101, 106, 124, 184, 186, 188, 189, 193, 194, 200], "parallel_execut": [83, 88, 101, 184, 186, 188, 189, 193, 200], "length": [83, 96, 101, 108, 111, 124, 125, 126, 181, 184, 186, 189, 193], "add_all_metadata_to_dataset": 84, "direct": [86, 87, 88, 89, 90, 91, 188, 199], "canon": [86, 89, 91, 92, 107, 109, 110, 132], "directrandomizedbenchmark": [87, 88], "directrbconfigur": [87, 89], "is_eplg": [88, 92, 130, 170, 188], "two_qubit_gate_ensembl": [88, 91, 106, 109, 110, 120, 188, 189, 194, 200], "densities_2q_g": [88, 188], "clifford_sqg_prob": [88, 91, 106, 109, 110, 120, 188], "sqg_gate_ensembl": [88, 91, 106, 109, 110, 120, 188], "drb": [88, 89, 90, 91, 92, 95, 96, 97], "regist": [88, 131, 134, 146, 147, 178], "case": [88, 184, 185], "done": [88, 179, 181, 187], "eplg": [88, 92, 130, 170, 179, 197, 198], "subroutin": 88, "below": [88, 184, 185, 190, 192, 199, 200], "overrid": 88, "czgate": [88, 101, 106, 181, 184, 189, 192, 193, 194, 200], "5": [88, 131, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200], "igat": 88, "mrb": [88, 89, 106, 107, 109, 112, 123, 130, 132, 133, 179, 189, 197, 198], "ensembl": [88, 92, 104, 106, 107, 120, 130, 175], "two": [88, 92, 106, 120, 181, 182, 184, 190, 192], "cxgate": [88, 106], "len": [88, 106, 181, 184, 185, 192], "25": [88, 91, 106, 109, 110, 120, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 200], "leav": 88, "uniform": 88, "assign_inputs_to_qubit": 89, "submit_single_drb_job": 89, "sorted_transpiled_circuit_dict": [89, 107, 132], "circ_sampl": [91, 109, 188], "density_2q_g": [91, 106, 109, 110, 120, 189, 194, 200], "stabil": [91, 106, 109, 110, 119, 126, 179], "randomli": 91, "assigned_density_2q_g": 92, "assigned_two_qubit_gate_ensembl": 92, "assigned_clifford_sqg_prob": 92, "assigned_sqg_gate_ensembl": 92, "cliffords_1q": [92, 125, 176, 178], "cliffords_2q": [92, 125], "follow": [92, 184, 185, 188, 190, 192, 199, 200], "pattern": 92, "barrier": [92, 144, 181, 182, 187], "taylor": 92, "2311": [92, 200], "05933": [92, 200], "interleav": [92, 99, 100, 101, 102, 103, 106, 110, 122, 123, 124, 125, 126, 130, 179, 186, 197, 198, 200], "among": [92, 165, 184, 200], "invers": [92, 119, 184], "term": [92, 125, 147, 176, 178, 181, 192, 199], "r": [92, 125, 144, 155, 176, 178, 181, 187, 191, 192], "simultan": [92, 101, 123], "eplgbenchmark": [94, 96, 188], "eplgconfigur": [94, 95, 188], "validate_custom_qubits_arrai": 95, "validate_random_chain_input": 95, "chain": [95, 96, 170, 188], "rais": [95, 96, 111, 120, 128, 136, 138, 147, 152, 155, 161, 178], "valueerror": [95, 111, 120, 128, 136, 147, 152, 155, 161, 178], "beyond": 95, "drb_depth": [96, 188], "drb_circuit_sampl": [96, 188], "chain_length": [96, 188], "chain_path_sampl": [96, 188], "num_disjoint_lay": [96, 188], "max_hamiltonian_path_tri": [96, 188], "calibration_url": [96, 188], "proce": 96, "highest": [96, 191], "path": [96, 138, 156, 171], "20": [96, 181, 182, 185, 186, 187, 188, 189, 193], "arbitrari": 96, "tri": [96, 171], "hamiltonian": [96, 156, 171, 179, 192], "must": [96, 169, 184, 185, 199, 200], "eplg_estim": 98, "interleavedrandomizedbenchmark": [100, 101, 184, 189, 193], "interleavedrbconfigur": [100, 102, 184, 189, 193, 200], "interleaved_g": [101, 124, 125, 126, 130, 184, 189, 193, 200], "interleaved_gate_param": [101, 184, 189, 193, 200], "simultaneous_fit": [101, 184, 189, 193, 200], "amplitud": [101, 122, 184, 189, 193, 200], "offset": [101, 122, 184, 189, 193, 200], "irb": [101, 123, 179, 197, 198], "ygate": 101, "enter": [101, 123, 125], "fit": [101, 113, 114, 115, 117, 122, 123, 129, 130, 179, 192, 199], "specif": [102, 155, 181, 183, 184, 185, 189, 192, 196, 197, 199], "mirror": [104, 105, 106, 107, 110, 179, 197, 198, 200], "mirrorrandomizedbenchmark": [105, 106, 189, 194, 200], "mirrorrbconfigur": [105, 107, 189, 194, 200], "depths_arrai": [106, 189, 194, 200], "num_pauli_sampl": [106, 108, 111, 189, 194, 200], "simulation_method": [106, 109, 110], "automat": [106, 109, 110, 188, 190, 200], "statevector": [106, 109, 110], "extended_stabil": [106, 109, 110], "matrix_product_st": [106, 109, 110], "aer": [106, 109, 110], "simul": [106, 108, 109, 110, 138, 179, 185, 189, 194, 196], "submit_single_mrb_job": 107, "noisy_count": 108, "ideal_count": 108, "num_circ_sampl": [108, 111, 126], "polar": [108, 123], "noisi": 108, "rescal": 108, "few": [108, 184, 185, 190], "effect": [108, 131, 184, 185], "real": [108, 200], "pauli_samples_per_circ": [109, 110], "dress": [109, 110, 111], "input_list": 111, "convert": [111, 173, 181], "flat": 111, "shape": 111, "lmfit": [113, 114, 123], "extend": [113, 179], "shown": [113, 184, 185, 190, 191, 192], "document": [113, 165, 184, 185, 199, 200], "github": [113, 200], "io": 113, "py": [113, 185, 187, 188, 191, 200], "example_fit_multi_dataset": 113, "html": [113, 154, 200], "sphx": 113, "glr": 113, "multi": [113, 184, 185], "func": [114, 115, 116, 117, 123, 129], "initial_guess": 114, "constraint": [114, 200], "simultaneously_fit_var": 114, "line": 114, "evalu": [115, 171, 184, 185], "signatur": 116, "residu": 117, "sever": [117, 179, 184, 185, 187], "techniqu": 118, "qc_inv": 119, "clifford_dictionari": 119, "invert": 119, "de": [119, 126], "qubit_set": [120, 123], "n_layer": 120, "grab": [120, 138], "see": [120, 165, 179, 181, 184, 190, 192, 199], "2204": 120, "07568": 120, "form": [120, 188, 199], "subsequ": [120, 199], "do": [120, 138, 193, 199], "up": [120, 184, 200], "uniti": 120, "ground": [121, 127, 182], "depolarization_prob": 122, "depolar": 122, "p": [122, 184], "decai": [122, 130, 179, 184], "exponenti": [122, 184], "rb_identifi": 123, "simultaneous_fit_var": 123, "interleaved_gate_str": 123, "0th": 123, "ap": [123, 192], "m": [123, 184, 185, 186, 189, 191, 193, 194, 200], "b": [123, 177, 181, 184, 199], "stdrb": 123, "clifford_dict": [124, 126], "fir": 124, "num_sampl": [125, 126], "befor": [125, 184], "after": [125, 200], "seq_length": 126, "self": [126, 182], "system_s": 128, "import": [128, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "load": [128, 186, 187], "1q_dict": 128, "2q_dict": 128, "fit_paramet": 129, "fit_data": 129, "minimizerresult": 129, "violin": 130, "scatter": 130, "bar": [130, 182, 187, 192], "shade_stdev": 130, "shade_meanerror": 130, "logscal": 130, "mrb_2q_densiti": 130, "mrb_2q_ensembl": 130, "point": [130, 154, 190], "shade": 130, "axi": [130, 179], "arr": 131, "separate_regist": [131, 134], "reversed_arr": 131, "relabel": 131, "increasingli": 131, "zero": [131, 179, 184, 185], "7": [131, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 199, 200], "note": [131, 140, 177, 179, 190, 192, 200], "clbit": [131, 134], "were": [131, 134, 167, 179], "separ": [131, 134, 138, 179, 196, 199], "skip": 131, "sublist": 131, "6": [131, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 199, 200], "revers": [131, 188], "transpiled_circuit": [133, 139, 188], "circuit_compilation_opt": [133, 165], "circuitcompilationopt": [133, 165], "compil": [133, 165, 179, 184, 187, 192, 199], "submit_execut": 133, "margin": [134, 138, 153], "surviv": [134, 184], "bit": [134, 150, 153, 176], "space": 134, "00": [134, 184, 185, 187, 188, 189, 191, 192, 194, 196], "anoth": [134, 182], "gate_id": 135, "gate_param": 135, "basi": [135, 155, 181, 184, 185, 192, 199], "m3": [137, 138, 139], "modif": [137, 199], "m3iqm": [137, 140], "mthree": [137, 140], "m3mitig": [137, 138], "iter_threshold": 138, "4096": 138, "modifi": [138, 179, 184, 185, 199], "work": [138, 140, 184, 185, 199, 200], "devic": [138, 179, 184, 185, 198, 200], "cals_from_system": 138, "initial_reset": 138, "rep_delai": 138, "cals_fil": 138, "async_c": 138, "cal_id": 138, "array_lik": 138, "1e4": 138, "max_shot": 138, "balanc": 138, "hardwar": [138, 187, 198], "independ": [138, 184], "reset": [138, 187], "begin": [138, 181], "delai": [138, 187], "json": [138, 192], "async": 138, "thread": 138, "m3error": 138, "while": [138, 190, 192, 199], "progress": 138, "against": [139, 199], "outcom": [139, 184, 185, 192], "mit": [140, 199], "iter": [140, 153], "processor": [140, 184, 185], "argument": [140, 179, 190, 200], "util": [140, 168, 174, 179, 190, 191], "final_measurement_map": 140, "like": [140, 181, 184, 185, 187, 200], "qubit_name_to_index": 140, "quasiprobabilti": 140, "we": [140, 182, 184, 185, 188, 192, 199], "could": 140, "also": [140, 179, 188, 190, 192, 196, 199, 200], "would": [140, 191], "out": [140, 199], "box": 140, "u": 140, "sinc": [140, 184, 185, 187, 192], "annot": [140, 199], "union": [140, 192, 199], "original_count": 142, "num_bootstrap_sampl": 142, "rgen": 142, "include_original_count": 142, "resampl": 142, "numpi": [142, 176, 178, 181, 184, 185, 188, 189, 192, 193], "default_rng": 142, "circuit_list": 143, "transpiled_qc_list": 144, "under": [145, 179, 181, 184, 192, 199], "list_fid": 145, "list_coupl": 145, "chip": [145, 169, 172], "active_qubit": [146, 178], "measure_oth": [146, 178], "measure_other_nam": [146, 178], "tomograhi": 146, "xy": 146, "y": [146, 147, 169, 181], "pauli_label": 147, "charact": [147, 199], "extract": [148, 150, 167, 184, 200], "backend_label": 149, "reconstruct": [152, 191, 192], "tomograph": 152, "prob_dist_or_count": 153, "prob_dist": 153, "propag": 154, "refer": [154, 170, 184, 185, 187, 192, 198, 200], "mathworld": 154, "wolfram": 154, "statisticalmedian": 154, "basis_g": 155, "drop_final_rz": 155, "optimization_level": [155, 182, 184], "sqg": [155, 185, 187, 189, 190, 196], "drop": 155, "rz": 155, "emploi": 155, "vertic": [156, 158, 171], "empti": 156, "backend_topologi": 157, "backend_num_qubit": [157, 170, 188], "remov": [158, 179], "duplic": 158, "iqm_job": [159, 160], "iqmjob": [159, 160, 165], "relev": 160, "transpiled_circuit_list": 162, "sorted_indic": [162, 191], "sorted_circuit": 162, "split": [163, 164, 188, 200], "13": [163, 181, 185, 186, 188, 189, 190, 191, 193, 194, 200], "17": [163, 181, 186, 188, 189, 190, 191, 193, 194, 196, 200], "18": [163, 181, 186, 188, 189, 190, 191, 193, 194, 200], "todo": 163, "pylint": 163, "disabl": 163, "fixm": 163, "sequence_in": 164, "split_siz": 164, "chunk": 164, "normal": [165, 199], "sent": [165, 199], "manag": [165, 199, 200], "abil": 165, "f": [166, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192], "decor": 166, "statement": [166, 199], "counts_rang": 167, "rang": [167, 179, 181, 182, 184, 185, 186, 189, 191, 192, 193, 194, 200], "visual": [168, 172, 179, 184, 190], "graphposit": 168, "predefin": [169, 172, 190, 192], "variou": [169, 197], "garnet_posit": 169, "garnet": [169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200], "deneb_posit": 169, "deneb": [169, 179, 185, 186, 187, 189, 193, 194, 195, 196], "predefined_st": 169, "create_posit": 169, "pygraph": 169, "coordin": [169, 182], "edge_list": 170, "disjoint_lay": [170, 188], "draw": [170, 181, 184, 185, 188, 191], "respectv": 170, "path_sampl": 171, "max_tri": 171, "product": [171, 181, 199], "address": 171, "thick": [172, 179], "thinner": [172, 190], "better": [172, 190], "highlight": 172, "orang": [172, 190], "rustworkx": [173, 179], "random_gen": 175, "randomst": 175, "drawn": 175, "circuilar": 175, "unitary_arg": 176, "subsystem_bit_indic": 176, "clifford_or_haar": [176, 178], "initialis": [176, 178], "subsystem": [176, 177], "rho": [177, 192], "na": 177, "suffici": [177, 190], "entangl": [177, 179, 184, 185, 189, 190, 197, 198, 200], "For": [177, 185, 190, 192, 199, 200], "more": [177, 179, 184, 185, 199, 200], "mere": [177, 199], "nu": 178, "compos": [178, 181], "iqm": [179, 180, 181, 182, 183, 190, 191, 192, 193, 197, 199], "client": [179, 185], "depend": [179, 187, 190, 192, 198], "benchmark": [179, 180, 181, 183, 191, 192, 195, 196, 197], "incorrect": 179, "width": [179, 184, 185, 190], "bug": 179, "gst": [179, 197, 198], "jupyt": 179, "tutori": 179, "report": [179, 184, 187], "explicit": 179, "offlin": [179, 187], "spent": [179, 187], "header": 179, "example_graphst": [179, 191], "notebook": [179, 182, 184, 185, 192, 197, 198], "page": [179, 198, 199], "render": [179, 200], "guidelin": 179, "wrong": 179, "aid": 179, "don": [179, 199], "runtim": 179, "improv": [179, 199], "tensor": 179, "bottom": 179, "top": 179, "qscore": [179, 184, 185], "file": [179, 199, 200], "test": [179, 184, 185, 200], "fake": 179, "instal": [179, 184, 192, 198], "command": [179, 200], "develop": [179, 181, 198], "mode": [179, 181, 200], "41": [179, 185, 188, 189, 193, 194, 195], "folder": [179, 199, 200], "doc": [179, 200], "spark": [179, 183, 198], "compat": 179, "adapt": [179, 200], "behavior": 179, "publish": 179, "ci": 179, "secur": [179, 200], "scan": [179, 200], "lockfil": [179, 200], "relat": [179, 184, 187], "lead": [179, 190, 192], "modulenotfounderror": 179, "pyrit": [179, 195], "mgst": [179, 192, 199, 200], "about": [179, 190], "rank": [179, 192], "compress": [179, 197, 198, 200], "stage": 179, "revert": 179, "ones": [179, 184, 185, 200], "now": [179, 185, 186, 187, 189, 190, 191, 192, 193], "port": 179, "subclass": 179, "usag": 179, "place": [179, 199], "miscellan": 179, "relax": 179, "api": [179, 188, 190, 198, 200], "build": [179, 200], "overwrit": 179, "minor": 179, "longer": [179, 184], "renam": 179, "so": [179, 184, 185, 192], "rebas": 179, "randomizedbenchmark": 179, "quantumvolum": 179, "serial": 179, "some": [179, 184, 185, 190], "available_benchmark": 179, "__init__": 179, "public": 179, "hint": 179, "docstr": 179, "messag": 179, "prevent": 179, "exclus": [179, 199], "section": [180, 183, 197, 199], "guidanc": [180, 183], "packag": [180, 184, 185, 187, 188, 191, 197, 200], "your": [180, 184, 185, 187, 198, 199, 200], "own": [180, 198, 199, 200], "decomposit": [180, 198], "1402": 181, "4848": 181, "copyright": [181, 199], "2024": [181, 186, 199], "licens": [181, 198], "apach": [181, 199], "you": [181, 184, 185, 188, 193, 199, 200], "mai": [181, 184, 185, 187, 199], "except": [181, 182, 199], "complianc": [181, 199], "obtain": [181, 184, 185, 199, 200], "unless": [181, 199], "law": [181, 199], "agre": [181, 199], "softwar": [181, 199], "AS": [181, 199], "without": [181, 184, 185, 187, 190, 199], "warranti": [181, 199], "OR": [181, 199], "OF": [181, 199], "kind": [181, 199], "express": [181, 199], "impli": [181, 199], "languag": [181, 199], "govern": [181, 199], "permiss": [181, 199], "limit": [181, 199], "quantum_info": 181, "qi": 181, "c0": 181, "c": [181, 184, 185, 187, 188, 191, 199], "_": [181, 184, 190, 192], "24": [181, 185, 186, 188, 189, 192, 193, 195], "half": 181, "pi": [181, 189, 193], "x2": 181, "to_gat": 181, "y2": 181, "x2m": 181, "y2m": 181, "inplac": 181, "2pi": 181, "rotat": [181, 182], "9": [181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 199, 200], "11": [181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200], "12": [181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196], "14": [181, 185, 186, 188, 189, 191, 193, 194, 200], "15": [181, 184, 185, 186, 187, 188, 189, 191, 193, 194], "16": [181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198], "19": [181, 187, 188, 189, 190, 191, 192, 193, 194], "21": [181, 185, 187, 188, 189, 191, 193], "22": [181, 185, 187, 188, 189, 191, 192, 193, 194], "23": [181, 186, 188, 189, 190, 193, 194, 196], "clifford_sqg": 181, "s1": 181, "k": [181, 184, 185, 187, 194, 196], "s1x2": 181, "s1y2": 181, "displaystyl": 181, "sum_": [181, 192], "prime": 181, "left": 181, "mathrm": [181, 184, 185, 190], "tr": [181, 192], "u_": 181, "dagger": [181, 184, 192], "u_k": 181, "right": [181, 199], "s2": 181, "satisfi": [181, 185, 192], "c_kei": 181, "aux": 181, "total_triangl": 181, "c1": 181, "adjoint": 181, "j": [181, 184, 185, 190, 192], "c2": 181, "c3": 181, "to_matrix": 181, "trace": [181, 192], "print": [181, 184, 187, 188, 189, 190, 191, 192, 194, 196, 199], "0f": 181, "diagon": [181, 184, 185], "nsum": 181, "sum": 181, "clifford_2qg": 181, "c2q_0": 181, "c2q": 181, "counter": 181, "to_label": 181, "sqg_class_": 181, "cnot": [181, 190], "sy2": 181, "cnot_class_": 181, "iswap": 181, "sy1": 181, "sx2": 181, "i_swap_class_": 181, "swap_class_": 181, "clifford_1qg": 181, "open": 181, "clifford_1q": 181, "pkl": 181, "wb": 181, "clifford_2q": 181, "loaded_dict": 181, "def": [181, 182], "count_rcz": 181, "c_list": 181, "no_cz": 181, "no_r": 181, "count_op": 181, "els": [181, 188], "num_2qcz": 181, "num_2qr": 181, "num_1qcz": 181, "num_1qr": 181, "875": [181, 184, 193, 196], "200": [181, 187, 188, 191, 195], "randint": [181, 184, 185, 189, 195], "11520": 181, "mpl": [181, 188, 191], "style": [181, 191], "iqp": [181, 191], "fold": [181, 188, 191], "ninvers": 181, "qc_aux": 181, "qcinv": 181, "op_seq": 181, "ncomposit": 181, "modulo": 181, "phase": 181, "equiv": 181, "ii": [181, 182, 199], "latex": 181, "composit": 181, "bmatrix": 181, "520": [181, 189, 195], "132": [181, 189, 193], "710": [181, 189, 195], "400": [181, 186, 189, 191, 195], "suffic": 181, "triangular": 181, "part": [181, 199], "howev": [181, 199, 200], "still": [181, 192], "op": 181, "adj": 181, "prod": 181, "100000": 181, "ndone": 181, "defit": 182, "simpl": [182, 184, 200], "excit": 182, "add_counts_to_dataset": 182, "pyplot": [182, 184, 185, 192], "plt": [182, 184, 185, 188, 192], "generate_readout_test_circuit": 182, "n_qubit": [182, 188], "qb_to_measur": 182, "qc_transpil": 182, "plot_histogram": [182, 184], "try": 182, "state_": 182, "counts_": 182, "break": 182, "xtick": 182, "90": [182, 188, 191], "legend": 182, "readout_analysi": 182, "histogram": [182, 184], "readouttest": 182, "default_opt": 182, "n_shot": 182, "2048": 182, "staticmethod": 182, "readout_test": 182, "iqmprovid": [182, 184, 185, 188, 189, 191, 200], "iqm_server_url": 182, "fi": [182, 200], "coco": [182, 185, 188, 191, 200], "get_backend": [182, 184, 185, 188, 189, 191, 200], "480b": 182, "dimens": [182, 192], "state_0": 182, "state_1": 182, "u4": 182, "144b": 182, "0000": 182, "0001": 182, "0010": 182, "1010": 182, "1100": 182, "176b": 182, "0011": 182, "0101": 182, "0110": 182, "1101": 182, "1110": 182, "1111": 182, "counts_0": 182, "int64": 182, "72b": 182, "1924": 182, "26": [182, 188, 189, 191, 192, 193, 195], "39": [182, 188, 189, 191, 192, 193, 195], "counts_1": 182, "88b": 182, "72": [182, 191], "48": [182, 187, 188, 189, 192, 193, 195], "78": [182, 188, 191], "36": [182, 187, 188, 189, 191, 192, 195], "1801": 182, "sure": [184, 200], "pip": [184, 200], "ipykernel": 184, "o": [184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 200], "environ": [184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 200], "iqm_tokens_fil": 184, "token": [184, 185, 190, 191, 193, 200], "iqm_url": [184, 185, 188, 189, 191], "access": [184, 185, 200], "everyth": [184, 185], "properli": [184, 185], "nx": [184, 185], "add_edges_from": [184, 185], "po": [184, 185], "spring_layout": [184, 185], "42": [184, 185, 187, 188, 189, 190, 191, 192, 193, 195], "with_label": [184, 185], "node_color": [184, 185], "lightblu": [184, 185], "edge_color": [184, 185], "grai": [184, 185], "node_s": [184, 185], "font_siz": [184, 185], "linewidth": [184, 185], "cell": [184, 185], "ignor": [184, 185], "critic": [184, 185], "filterwarn": [184, 185], "action": [184, 185], "three": [184, 185], "superposit": [184, 185], "rangl": [184, 185], "frac": [184, 185, 192], "sqrt": [184, 185], "otim": [184, 185], "act": [184, 185, 199], "wit": [184, 185], "genuin": [184, 185, 190], "cannot": [184, 185, 199], "explain": [184, 185], "great": [184, 185], "rho_": [184, 185], "text": [184, 185, 192, 199], "langl": [184, 185], "pure": [184, 185], "actual": [184, 185], "entri": [184, 185, 192], "written": [184, 185, 199], "corner": [184, 185], "simplifi": [184, 185], "four": [184, 185], "compon": [184, 185, 187], "formula": [184, 185], "nullifi": [184, 185], "To": [184, 185, 186, 187, 188, 190, 192, 199, 200], "off": [184, 185], "want": [184, 185, 200], "pleas": [184, 185], "generate_ghz_spanning_tre": 184, "get_edg": 184, "ghz_circuit": 184, "qc_transp": 184, "re": [184, 193], "10000": [184, 185, 195], "get_count": 184, "benchmark_ghz": [184, 185, 189, 190], "run_ghz": [184, 185, 189, 190], "result_ghz": [184, 185], "introduc": [184, 185], "2019": [184, 185, 190, 200], "successfulli": [184, 185, 186, 188, 189, 193, 194, 196], "occcur": [184, 185], "greater": [184, 185], "ask": [184, 185], "confid": [184, 185], "higher": [184, 185], "97": [184, 185, 188], "around": [184, 185], "85": [184, 185, 191, 200], "asymptot": [184, 185], "log_2": [184, 185], "v_q": [184, 185], "underset": [184, 185], "argmax": [184, 185], "d": [184, 185, 190, 199], "leq": [184, 185], "achiev": [184, 185, 191], "quantum_volum": [184, 185, 187, 189, 196, 200], "combin": [184, 185, 199], "due": [184, 187], "topmost": 184, "500": [184, 185, 189, 194, 196, 200], "60_000": [184, 189, 196, 200], "code": [184, 185, 192, 198, 199, 200], "minut": [184, 185, 192], "benchmark_qv": [184, 185, 189, 196], "run_qv": [184, 185], "result_qv": [184, 185], "That": [184, 185], "wack": [184, 185], "repeat": [184, 185], "constitut": [184, 185, 199], "_time": [184, 185], "notic": [184, 185, 199], "plot_tim": [184, 185], "benchmark_clop": [184, 185, 187, 189], "run_clop": [184, 185, 187, 189], "result_clop": [184, 185, 187, 189], "fig_clop": [184, 185], "idea": 184, "behind": 184, "crb": [184, 197, 198], "certain": [184, 185], "nois": 184, "langle0": 184, "c_": 184, "inv": 184, "c_m": 184, "cdot": 184, "_2c_1": 184, "sim": 184, "c_1": 184, "c_2": 184, "ldot": 184, "c_1c_2": 184, "_m": 184, "leq1": 184, "constant": 184, "isol": 184, "spam": 184, "magesan": 184, "2012": [184, 200], "turn": 184, "assumpt": 184, "markovian": 184, "stationari": 184, "theori": [184, 199], "fact": 184, "design": [184, 199, 200], "fulli": [184, 192], "ensur": 184, "our": 184, "overlin": 184, "intend": 184, "becaus": 184, "eventu": 184, "mention": 184, "barend": 184, "2014": 184, "approx": 184, "alwai": [184, 190], "slightli": 184, "care": 184, "compar": 184, "spec": 184, "randomized_benchmark": [184, 186, 188, 189, 193, 194, 200], "clifford_rb": [184, 186, 189], "benchmark_clifford_rb": [184, 186, 189], "run_clifford_rb": [184, 186, 189], "result_clifford_rb": [184, 186, 189], "previou": 184, "aim": [184, 190], "interest": 184, "robust": 184, "sole": [184, 199], "made": [184, 199], "rate": 184, "wish": 184, "character": [184, 198], "interleaved_rb": [184, 189, 193, 200], "irb_cz": 184, "benchmark_irb_cz": 184, "run_irb_cz": 184, "result_irb_cz": 184, "martiel": [184, 185], "erd\u0151": [184, 185], "r\u00e9nyi": [184, 185], "cost": [184, 185], "geq": [184, 185, 192], "999999": [184, 185, 189, 195], "benchmark_qscor": [184, 185, 189, 195], "run_qscor": [184, 185, 189], "result_qscor": [184, 185, 189], "summar": 184, "tabl": [184, 192], "obs_ghz": [184, 185], "round": [184, 185], "obs_qv": [184, 185], "obs_clop": [184, 185], "obs_crb": 184, "f_crb": 184, "obs_irb": 184, "f_irb": 184, "avg_gate_fidelity_interleav": [184, 189, 193], "obs_q": [184, 185], "argmin": [184, 185], "mean_approximation_ratio": [184, 185, 189, 195], "3000": 184, "999": [184, 186, 189, 192], "98": [184, 188], "30": [184, 186, 188, 189, 191, 193, 195, 200], "format": [184, 199], "num": [184, 188], "iqm_token": [185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 200], "reson": [185, 190, 191, 193, 200], "meetiqm": [185, 188, 190, 191], "raphaelbrieg": 185, "miniconda3": 185, "env": [185, 187, 188, 191], "lib": [185, 187, 188, 191], "site": [185, 187, 188, 191], "140": [185, 189], "userwarn": [185, 187, 188, 191], "built": 185, "server": 185, "might": [185, 190], "encount": 185, "issu": [185, 199], "best": [185, 190], "version_incompatibility_msg": 185, "chosen_layout": 185, "2000": [185, 192], "2025": [185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198], "03": [185, 187, 188, 189, 190, 191, 193, 194], "866": [185, 189], "logging_config": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "info": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "868": 185, "665": [185, 189], "936": [185, 189, 195], "384": [185, 189], "429": [185, 189], "762": [185, 189, 195], "307": [185, 188, 194, 195], "310": [185, 189, 195], "413": [185, 189, 194], "066": [185, 188, 189, 195], "497": [185, 188, 189], "501": [185, 189, 191], "565": [185, 187, 189], "297": [185, 189], "758": [185, 189, 191, 192, 193, 194], "323": [185, 186, 189], "43": [185, 186, 187, 188, 189, 190, 192, 193, 195], "06": [185, 188, 189, 191, 192, 194], "137": [185, 189, 195], "07": [185, 187, 188, 189, 191, 192, 193, 194], "265": [185, 195], "988": [185, 189], "028": [185, 189, 195], "991": [185, 189, 193], "10_000": [185, 189], "45": [185, 186, 188, 189, 190, 191, 193, 194, 195], "314": [185, 186, 189], "655": [185, 189, 195], "657": 185, "Will": [185, 186, 187, 188, 189, 192, 193, 194, 196, 200], "658": [185, 188, 189], "46": [185, 186, 187, 188, 189, 191, 192, 195], "04": [185, 187, 188, 189, 191, 192, 193, 194, 198], "018": [185, 189, 195], "033": [185, 187, 188, 189, 193, 196], "subbatch": [185, 189, 196], "192": [185, 189], "05": [185, 188, 189, 192, 193, 194], "443": 185, "786": 185, "116": [185, 188, 189, 194], "863": [185, 188, 189], "47": [185, 188, 189, 192, 193, 195], "654": [185, 189, 195], "40": [185, 187, 188, 189, 191, 195], "986": [185, 186, 188, 189], "conclud": [185, 186, 188, 189, 191, 193, 194, 196], "326": [185, 189, 191, 195], "554": [185, 189], "load_ext": [186, 187, 188, 189, 191, 192, 193, 194, 195, 196], "autoreload": [186, 187, 188, 189, 191, 192, 193, 194, 195, 196], "extens": [186, 187], "reload": [186, 187], "reload_ext": [186, 187], "fakeadoni": [186, 187, 189, 191, 193, 194, 195, 196], "fakeapollo": [186, 187, 188, 189, 190, 191, 193, 194, 195, 196], "example_crb": [186, 189], "56": [186, 188, 189, 191, 192, 195], "750": [186, 188, 189, 191, 195], "31": [186, 187, 188, 189, 191, 193, 194, 195], "63": [186, 188, 189, 191, 193], "831": [186, 187, 189, 193, 195], "992": [186, 189, 195], "341": [186, 189, 195], "040": [186, 189, 193], "469": [186, 189], "291": [186, 189], "292": [186, 189, 193], "349": 186, "541": [186, 189, 194], "600": [186, 189, 190], "756": [186, 189, 191], "837": [186, 189, 193, 195, 196], "025": [186, 195], "171": [186, 189], "905": [186, 189, 195], "544": [186, 189, 195], "899": [186, 188, 189], "32": [186, 188, 189, 191, 194, 195], "624": [186, 189], "004": [186, 193, 195], "319": [186, 189], "569": [186, 188, 189, 194, 195], "777": [186, 189], "840": [186, 189], "44": [186, 187, 188, 189, 190, 192, 193, 195], "048": [186, 188, 189, 193], "098": [186, 189, 195], "qubits_": [186, 188, 189, 194], "_depth_1": [186, 188, 189, 193], "186": [186, 193], "_depth_3": [186, 188, 189, 193], "225": [186, 189], "_depth_7": [186, 189, 193], "267": [186, 188, 189, 195], "_depth_15": [186, 189, 193], "_depth_31": [186, 189, 193], "315": [186, 189, 195], "364": [186, 189, 194], "_depth_63": [186, 189, 193], "416": [186, 189, 195], "417": [186, 189, 195], "476": [186, 188], "542": [186, 188, 189, 194], "615": [186, 188, 189], "616": [186, 190, 195], "697": [186, 189, 195], "789": [186, 189, 193, 195], "890": [186, 189, 193], "931": [186, 189, 195], "938": [186, 189], "945": [186, 188, 189, 194], "952": [186, 189, 193], "959": [186, 189], "966": [186, 189, 195], "972": [186, 189, 190, 195], "979": [186, 188, 195], "993": [186, 194], "006": [186, 195], "013": [186, 189], "946844466999168": 186, "9429197366921651": 186, "attr": [186, 187, 188, 191, 192, 194, 196], "session_timestamp": [186, 187, 188, 191, 194, 196], "20241217": 186, "115553": 186, "backend_configuration_nam": [186, 187, 188, 191, 194, 196], "iqmfakeapollobackend": [186, 189, 190, 192, 196], "depth_1": 186, "time_circuit_gener": [186, 187, 191, 194, 196], "541001081466675": 186, "time_submit": [186, 194, 196], "0006990432739257812": 186, "time_retriev": [186, 194, 196], "22491073608398438": 186, "all_job_metadata": [186, 194, 196], "batch_job_1": [186, 194], "job_id": [186, 194], "8f305755": 186, "e038": 186, "4596": 186, "8617": 186, "d96ba3f42ca9": 186, "aer_simul": [186, 194], "statu": [186, 194], "circuits_in_batch": [186, 194], "depth_3": 186, "05647683143615723": 186, "0005230903625488281": 186, "2fe0b406": 186, "8977": 186, "4567": 186, "bba0": 186, "d4168f0883ed": 186, "depth_7": 186, "19257187843322754": 186, "0004839897155761719": 186, "8299918c": 186, "be26": 186, "40d5": 186, "8778": 186, "9ea4468a1df2": 186, "depth_15": 186, "05831408500671387": 186, "0004811286926269531": 186, "174640c4": 186, "9ff3": 186, "4ca3": 186, "9ffc": 186, "d6aa5be304f3": 186, "depth_31": 186, "1564040184020996": 186, "0006189346313476562": 186, "7bb739f2": 186, "31bc": 186, "40af": 186, "8dbf": 186, "1d60a9310391": 186, "depth_63": 186, "08135986328125": 186, "0004200935363769531": 186, "f414a2c1": 186, "75c8": 186, "4d5a": 186, "9e4b": 186, "ccce29903f5f": 186, "147684812545776": 186, "0005502700805664062": 186, "00039887428283691406": 186, "8832576a": 186, "6d6e": 186, "4abe": 186, "8cfa": 186, "5001e6bb98e": 186, "08015298843383789": 186, "00039315223693847656": 186, "ecc1bcea": 186, "ef4c": 186, "4f35": 186, "9284": 186, "ab49af0c5b9f": 186, "16936397552490234": 186, "0003960132598876953": 186, "5582c842": 186, "0f07": 186, "46b6": 186, "96be": 186, "2fb3925b19d9": 186, "20774221420288086": 186, "0004191398620605469": 186, "6423b02b": 186, "8417": 186, "4300": 186, "b7ac": 186, "84d59f87a51f": 186, "0635080337524414": 186, "0004169940948486328": 186, "0b324804": 186, "44fe": 186, "4c16": 186, "83eb": 186, "08e5cd67aa79": 186, "20784401893615723": 186, "0004961490631103516": 186, "6c633640": 186, "d4b4": 186, "47de": 186, "a46d": 186, "d3ae4c84d212": 186, "avg_gate_fidel": [186, 194], "0012220693932290373": 186, "001545469960991071": 186, "xxxxxxxxxxxxxxx": 187, "example_clop": [187, 189], "33": [187, 188, 189, 191, 194, 195], "57": [187, 188, 189, 191, 193, 195], "096": [187, 194], "097": [187, 188, 189, 194], "305": [187, 189], "306": [187, 189], "479": [187, 189, 195], "480": [187, 189, 195], "564": [187, 189, 190, 195], "pedrofigueroaromero": [187, 188, 191], "anaconda3": [187, 188, 191], "bench": [187, 188, 191], "iqm_provid": [187, 188, 189, 191], "177": [187, 188, 189, 191, 194, 195], "unknown": [187, 188, 191], "unknown_opt": [187, 188, 191], "09": [187, 188, 189, 191, 193, 196], "253": [187, 188, 189, 195], "254": 187, "941": [187, 189], "830": [187, 188, 189, 195], "27": [187, 188, 189, 190, 191, 192, 193, 195], "704": [187, 188, 189, 191, 193], "276": 187, "052": [187, 189, 195], "053": [187, 189, 195], "793": [187, 189, 195], "794": 187, "249": [187, 189], "35": [187, 188, 189, 191, 195], "170": [187, 189, 195], "01": [187, 188, 189, 191, 192, 193, 194, 195, 196], "790": [187, 189, 193, 194], "791": [187, 189, 194, 195], "669": [187, 189, 195], "287": [187, 189, 193], "288": [187, 189], "973": 187, "974": [187, 189, 195], "363": [187, 188, 189, 195], "37": [187, 188, 189, 191, 195], "232": [187, 195], "233": [187, 189], "38": [187, 188, 189, 191, 193, 195], "853": 187, "51": [187, 188, 189, 190, 191, 192, 193, 195], "54": [187, 188, 189, 191, 193, 195], "55": [187, 188, 189, 191, 192, 194, 195], "923": [187, 189], "924": [187, 189, 195], "08": [187, 188, 189, 191, 192, 193, 194, 195], "405": [187, 188, 189, 191], "032": [187, 189, 195, 196], "630": [187, 189], "631": [187, 188, 189, 193], "126": [187, 188, 189, 190], "926": [187, 189, 195], "927": [187, 189], "29": [187, 188, 189, 191, 193, 195, 196], "607": [187, 189, 193], "608": [187, 189], "708": [187, 188, 189, 191], "709": [187, 189, 195], "235": [187, 189, 195], "236": [187, 188, 195], "247": [187, 189], "248": 187, "job_tot": 187, "compile_tot": 187, "86": [187, 191], "sec": 187, "submit_tot": 187, "250": [187, 189, 192], "execution_tot": 187, "82": [187, 191, 192], "all_times_parameter_assign": 187, "all_times_retriev": 187, "all_times_submit": 187, "assign_parameters_tot": 187, "clops_tim": 187, "counts_per_upd": 187, "job_meta_per_upd": 187, "num_paramet": 187, "operation_count": [187, 196], "parallel_2q_lay": 187, "parameters_per_upd": 187, "time_count_lay": 187, "time_sort_batch": 187, "time_transpil": [187, 196], "u_per_lay": 187, "user_retrieve_tot": 187, "user_submit_tot": 187, "std": 187, "9504950495049505": 187, "4950495049504951": 187, "409": [187, 189], "56435643564356": 187, "9997381883899": 187, "53465346534654": 187, "7852354032651045": 187, "9900990099009901": 187, "09900990099009897": 187, "3410": 187, "breakdown": 187, "unit": 187, "remot": 187, "aspect": 187, "etc": 187, "wall": 187, "experienc": 187, "encompass": 187, "compris": 187, "latenc": 187, "vari": 187, "significantli": 187, "extern": 187, "circumst": 187, "aggreg": 187, "finish": 187, "receiv": [187, 199], "xxxxxxxxxxxxxxxxxxxxxx": 188, "abl": 188, "proxi": 188, "manual": 188, "necessarili": [188, 199], "simpli": 188, "resonance_st": 188, "v1": [188, 190], "example_eplg": 188, "geomspac": 188, "endpoint": 188, "dtype": 188, "tolist": 188, "benchmark_eplg": 188, "run_eplg": 188, "358": [188, 189], "28": [188, 189, 191, 193, 195, 196], "742": [188, 189, 195], "745": [188, 189, 193], "111": [188, 189, 195, 196], "61": [188, 191, 192], "748": [188, 191], "571": [188, 189, 195], "227": [188, 189], "523": [188, 189, 194], "539": [188, 189, 195], "580": [188, 189], "333": [188, 189, 193, 195], "52": [188, 189, 190, 191, 192, 193, 194, 195], "692": [188, 189, 193], "059": [188, 189], "816": [188, 189, 191], "812": [188, 189], "057": [188, 189, 195], "672": [188, 189], "826": [188, 189, 195], "112": 188, "454": [188, 189], "888": [188, 189], "556": [188, 195], "537": [188, 191], "547": [188, 189], "054": [188, 189], "805": [188, 189, 195], "921": [188, 189], "649": [188, 189, 195], "101": [188, 189], "712": [188, 189, 195], "280": [188, 189], "252": [188, 189, 196], "536": 188, "49": [188, 189, 191, 192, 193, 195], "689": [188, 189, 195], "204": [188, 189, 193, 196], "53": [188, 189, 190, 191, 193, 195], "802": [188, 189, 195], "303": [188, 189, 191], "205": [188, 189, 191, 193, 195], "813": [188, 189], "511": [188, 195], "224": [188, 189], "136": [188, 189], "164": [188, 189, 195], "920": [188, 189, 195], "59": [188, 189, 191, 193, 194, 195], "124": [188, 195], "02": [188, 189, 191, 192, 194, 195], "019": [188, 189], "833": [188, 189, 195], "724": [188, 189], "861": [188, 189, 193], "955": [188, 189], "819": [188, 189, 191, 193, 194], "161": [188, 189], "050": [188, 189, 194, 195, 196], "357": [188, 189, 194, 195], "785": [188, 189, 193], "147": [188, 189, 192, 194], "289": [188, 189, 193, 195], "567": [188, 189], "914": [188, 189, 195], "694": [188, 189], "282": [188, 189, 193], "408": [188, 192, 195], "721": [188, 189, 191, 195], "738": [188, 189], "298": [188, 189], "395": [188, 189, 191, 193, 195], "913": [188, 189, 195], "828": [188, 189, 193], "129": [188, 189, 195, 200], "852": [188, 189, 191], "_depth_200": 188, "_depth_111": 188, "58": [188, 189, 190, 191, 193, 195], "471": [188, 189, 195], "900": [188, 189], "_depth_61": 188, "525": [188, 189, 191], "067": [188, 189, 190, 193], "_depth_34": 188, "832": [188, 189], "255": [188, 189, 193], "_depth_18": 188, "851": [188, 195], "246": [188, 189], "_depth_10": 188, "460": [188, 189], "843": [188, 189], "_depth_5": 188, "279": [188, 189], "154": [188, 189], "641": [188, 189], "455": [188, 189], "950": [188, 193], "568": [188, 189, 195], "163": [188, 189, 193], "798": [188, 189, 191, 195], "382": [188, 189], "636": [188, 189, 193, 195], "322": [188, 189], "273": [188, 189, 195], "036": [188, 189, 195], "769": [188, 189, 190, 195], "681": [188, 189, 193], "751": [188, 189, 193, 195], "774": 188, "788": [188, 189, 193], "632": [188, 189, 195], "546": [188, 193, 194], "487": [188, 189, 191, 195], "094": [188, 189, 193, 195], "528": [188, 189, 195], "594": [188, 189, 195], "437": [188, 189], "817": [188, 189], "873": [188, 189], "598": [188, 189, 194, 195], "917": [188, 189, 195], "901": [188, 189], "895": [188, 189], "806": [188, 192, 196], "329": [188, 189], "585": [188, 189, 190, 191, 195], "412": [188, 189, 191], "593": [188, 189, 193, 195], "499": [188, 189, 191], "904": [188, 189, 195], "814": 188, "401": [188, 189, 195], "178": [188, 189], "516": [188, 189, 191, 195], "321": [188, 189], "656": [188, 189, 195], "576": [188, 189, 195], "rcparam": [188, 191], "dpi": [188, 191], "175": [188, 189], "result_eplg": 188, "030": [188, 195], "082": [188, 189, 196], "302": [188, 189, 195], "893": [188, 189], "014": [188, 189], "108": [188, 189, 195], "176": [188, 189, 190, 194, 195], "683": [188, 189, 191, 195], "935": 188, "173": [188, 189, 193], "290": [188, 189, 193, 196], "367": [188, 189, 195], "442": [188, 189, 193], "827": [188, 189, 195], "069": 188, "194": [188, 195], "308": [188, 189], "526": [188, 189], "575": [188, 189], "820": [188, 189, 193, 195], "857": [188, 189, 195], "946": [188, 189, 195], "031": [188, 189], "185": [188, 189], "241": [188, 189, 195], "334": [188, 189, 191], "375": [188, 189, 194, 195], "dict_kei": [188, 191, 192], "parallel_all_0": 188, "parallel_all_1": 188, "parallel_all_2": 188, "parallel_all_3": 188, "2f": [188, 191], "2e": [188, 191], "average_gate_fidel": 188, "77": [188, 191], "96": 188, "95": [188, 191], "71": [188, 191], "81": [188, 191], "87": [188, 191], "75": [188, 191, 196], "70": [188, 191], "62": 188, "68": [188, 191], "80": [188, 191], "layer_fidel": 188, "88": 188, "eplg_circ_nam": 188, "circ_group_idx": 188, "circuit_to_draw": 188, "idle_wir": 188, "877": [189, 193], "127": [189, 193], "091": 189, "517": [189, 195], "508": [189, 191], "507": [189, 191, 195], "168": [189, 193], "188": [189, 193, 195], "754": [189, 195], "807": [189, 195], "932": [189, 193], "447": 189, "448": [189, 194, 195], "707": 189, "967": 189, "284": [189, 195], "578": 189, "_depth_127": [189, 193], "324": [189, 191, 193, 195], "557": [189, 194], "590": [189, 191, 195], "602": [189, 195], "611": [189, 195], "626": [189, 191, 194], "example_irb_1q": [189, 193], "rgate": [189, 192, 193], "benchmark_irb_1q": [189, 193], "run_irb_1q": [189, 193], "021": [189, 196], "599": [189, 195], "wxecut": 189, "047": [189, 195], "588": 189, "423": [189, 195], "348": [189, 193], "427": 189, "491": [189, 193], "445": [189, 195], "219": 189, "482": [189, 191, 195], "550": [189, 195], "589": [189, 190, 194], "623": [189, 193, 195], "558": [189, 191], "218": 189, "328": 189, "810": [189, 195], "871": [189, 195], "340": [189, 195], "411": [189, 195], "453": [189, 195, 196], "876": [189, 193, 195], "909": 189, "430": [189, 192, 195], "519": 189, "530": [189, 193, 195], "187": 189, "635": [189, 193], "783": [189, 195, 196], "829": [189, 193, 195], "933": [189, 193], "049": [189, 193], "778": [189, 195], "008": [189, 193, 195], "095": [189, 193], "260": 189, "881": [189, 193, 195], "153": 189, "883": [189, 193, 194, 195], "330": [189, 191, 194], "579": 189, "620": [189, 195], "133": [189, 193, 194], "210": [189, 195, 196], "549": [189, 195], "529": [189, 190, 194, 195], "679": [189, 193, 194, 195], "515": 189, "169": [189, 195], "083": [189, 195], "779": [189, 193, 195], "009": 189, "732": 189, "560": [189, 195], "943": 189, "071": 189, "182": 189, "976": 189, "553": [189, 193], "781": [189, 193, 196], "703": [189, 193], "639": [189, 190], "823": [189, 191, 195], "179": [189, 195], "859": 189, "114": 189, "338": [189, 192, 193, 195], "425": 189, "821": [189, 191, 193, 195], "070": [189, 190, 195], "475": [189, 193], "000": [189, 193, 195], "120": [189, 193, 195], "775": 189, "259": [189, 192], "352": [189, 195], "648": [189, 195], "044": 189, "874": [189, 193, 195], "229": 189, "690": 189, "149": [189, 194], "011": [189, 191, 192], "770": 189, "782": [189, 190], "739": [189, 193, 195], "199": [189, 191], "346": [189, 193, 195], "024": 189, "850": [189, 195], "clifford_qubits_": [189, 193], "299": 189, "570": [189, 195], "088": [189, 196], "377": 189, "379": 189, "698": 189, "700": 189, "150": [189, 191, 194, 195], "_depth_255": [189, 193], "388": [189, 195], "389": 189, "659": [189, 191], "110": 189, "118": [189, 193, 195], "369": 189, "371": 189, "058": [189, 193, 195], "650": [189, 193], "490": [189, 193, 195], "834": 189, "682": [189, 193], "450": [189, 194, 195], "240": [189, 195], "189": [189, 195], "231": 189, "660": 189, "939": [189, 193, 195], "755": [189, 191], "759": [189, 195], "484": 189, "970": [189, 194], "760": [189, 195], "interleaved_qubits_": [189, 193], "109": [189, 200], "720": [189, 195], "726": 189, "498": 189, "504": [189, 190], "937": [189, 195], "320": 189, "270": 189, "702": [189, 194], "181": [189, 194], "687": [189, 195], "761": [189, 190, 191], "148": [189, 192, 193, 195], "010": [189, 195], "468": [189, 195], "919": 189, "562": [189, 191], "370": [189, 195], "884": [189, 194], "172": 189, "075": [189, 192, 195], "609": [189, 194, 195], "983": [189, 194], "076": [189, 195], "342": [189, 194], "849": [189, 194, 195], "result_irb_1q": [189, 193], "894": 189, "452": [189, 190, 195], "677": [189, 195], "772": [189, 195], "996": [189, 194], "203": [189, 195], "538": [189, 193, 195], "969": 189, "080": 189, "208": [189, 191, 193], "627": 189, "734": [189, 193, 195], "942": 189, "165": 189, "272": [189, 194], "675": [189, 193], "882": [189, 193], "977": 189, "106": [189, 195], "201": [189, 194, 195], "431": 189, "666": [189, 195], "776": 189, "887": [189, 194, 195], "985": 189, "206": [189, 193, 195], "318": [189, 195], "545": [189, 194], "653": [189, 194, 195], "766": [189, 194, 195], "989": [189, 192, 193, 195], "221": [189, 195], "335": [189, 195], "691": [189, 193], "809": [189, 195], "286": [189, 193], "398": [189, 191], "780": [189, 193, 194, 196], "892": [189, 194], "612": 189, "9979183032433894": 189, "144505494191281e": 189, "avg_gate_fidelity_clifford": [189, 193], "9958115103388792": 189, "17823609003449e": 189, "avg_gate_fidelity_n": 189, "9977661388474022": 189, "361722520237145e": 189, "997958281196824": 189, "00010535448906517988": 189, "996185705320257": 189, "354178172452585e": 189, "9979657095041371": 189, "9888883256457185e": 189, "9976806659229207": 189, "00010662386983132284": 189, "9958525686447902": 189, "031666798234228e": 189, "9977880366105548": 189, "816884091625878e": 189, "9977658880315101": 189, "00013395088590563366": 189, "996010014510697": 189, "00011462572813413851": 189, "9978720077390384": 189, "113374307582606e": 189, "9978184054322468": 189, "00011216064141600791": 189, "9957406711482065": 189, "837832701601442e": 189, "9977283579457101": 189, "246845828393341e": 189, "example_irb_2q": [189, 193], "benchmark_irb_2q": [189, 193], "run_irb_2q": [189, 193], "304": [189, 195], "543": 189, "034": [189, 192, 193], "729": 189, "930": [189, 191, 195], "243": [189, 195], "081": [189, 195], "139": [189, 195], "160": 189, "277": [189, 195], "514": [189, 191], "728": 189, "824": [189, 191, 195], "951": [189, 193, 195], "131": [189, 193, 195], "633": [189, 195], "392": [189, 195], "835": 189, "138": [189, 195], "572": [189, 191, 195], "897": [189, 195], "039": [189, 193, 195], "407": 189, "439": [189, 191], "555": [189, 195], "003": [189, 192, 193], "668": 189, "752": [189, 193, 195], "180": [189, 194], "743": [189, 195], "730": 189, "403": 189, "337": [189, 195], "134": [189, 194], "676": [189, 194], "093": 189, "800": [189, 192, 200], "394": [189, 193], "860": [189, 193], "269": 189, "368": 189, "846": 189, "995": [189, 192, 195], "477": [189, 191], "016": [189, 195], "078": 189, "158": [189, 193, 195], "614": 189, "035": 189, "213": [189, 195], "419": [189, 195], "815": [189, 195], "838": [189, 195], "478": [189, 195], "574": 189, "144": 189, "744": [189, 193, 195], "803": [189, 192], "261": 189, "796": 189, "713": 189, "844": [189, 195], "073": 189, "271": [189, 194, 195], "736": [189, 195], "196": [189, 193, 195, 196], "198": [189, 195], "652": [189, 193, 194], "912": 189, "896": 189, "007": [189, 193], "152": [189, 194, 195], "060": 189, "062": [189, 195], "610": 189, "084": 189, "456": [189, 194], "026": 189, "117": [189, 194], "141": [189, 195], "278": [189, 195], "714": [189, 191], "079": [189, 194, 195], "617": [189, 195], "190": 189, "678": [189, 194, 195], "432": [189, 193], "285": [189, 193], "228": [189, 195], "result_irb_2q": [189, 193], "481": 189, "971": 189, "130": 189, "209": [189, 195], "510": [189, 195], "629": 189, "685": [189, 193, 195], "764": [189, 193, 195], "907": [189, 195], "987": [189, 191, 195], "353": [189, 195], "512": [189, 191, 194], "591": [189, 195], "686": [189, 195], "797": 189, "162": [189, 195], "606": [189, 194], "928": [189, 195], "492": [189, 191, 193], "example_irb_iswap": [189, 193], "iswapg": [189, 193, 194, 200], "benchmark_irb_iswap": [189, 193], "run_irb_iswap": [189, 193], "166": [189, 193, 195], "156": [189, 195], "077": 189, "735": 189, "068": 189, "918": 189, "325": [189, 195], "234": [189, 195], "531": 189, "688": [189, 193, 196], "811": 189, "226": [189, 195], "074": [189, 190, 193, 195], "263": 189, "673": 189, "002": [189, 192, 193, 195], "327": [189, 195], "577": [189, 193], "015": 189, "099": 189, "965": 189, "029": 189, "045": 189, "296": [189, 194, 195], "911": 189, "313": 189, "664": [189, 193], "113": 189, "532": 189, "451": 189, "262": 189, "982": [189, 193, 194], "595": [189, 193, 195], "336": [189, 195], "result_irb_iswap": [189, 193], "953": [189, 195], "191": 189, "223": [189, 193, 195], "355": [189, 193, 195], "462": [189, 192, 195], "621": 189, "667": [189, 195], "701": 189, "747": [189, 191], "795": 189, "041": [189, 195], "mirror_rb": [189, 194, 200], "example_mrb": [189, 194, 200], "benchmark_mrb": [189, 194], "run_mrb": [189, 194], "10x5": [189, 194], "64": [189, 191, 192, 194], "128": [189, 194, 195], "622": [189, 195], "865": [189, 190, 195], "671": [189, 193], "055": 189, "485": [189, 193], "391": [189, 192, 195], "584": [189, 191], "230": 189, "449": [189, 194, 195], "242": 189, "472": [189, 195], "509": [189, 191, 193], "022": [189, 193], "436": [189, 193, 195], "628": 189, "980": [189, 195], "418": 189, "603": [189, 195], "808": [189, 195], "051": 189, "293": [189, 195], "157": [189, 193], "268": 189, "858": [189, 195], "527": [189, 191, 195], "486": 189, "898": [189, 195], "107": [189, 193], "540": [189, 195], "244": [189, 194], "661": 189, "885": [189, 193, 195], "765": [189, 193, 195], "193": [189, 195], "465": 189, "910": [189, 195], "643": [189, 195], "104": [189, 191, 195], "438": [189, 190, 195], "613": 189, "470": 189, "581": 189, "693": [189, 195], "266": 189, "488": 189, "662": 189, "870": 189, "506": [189, 195], "207": [189, 193], "638": [189, 195], "245": 189, "872": 189, "046": 189, "963": [189, 195], "426": [189, 195], "975": 189, "878": 189, "275": [189, 195], "251": [189, 195], "440": [189, 193], "964": [189, 191, 193], "922": [189, 195], "309": 189, "981": [189, 193], "583": [189, 193], "998": [189, 192], "906": [189, 193, 195], "444": 189, "891": 189, "217": [189, 196], "457": 189, "311": 189, "446": [189, 195], "695": 189, "625": [189, 191, 195, 196], "727": [189, 195], "184": [189, 194], "012": [189, 191], "090": [189, 193, 195], "372": 189, "642": [189, 190], "202": [189, 191], "489": 189, "696": [189, 195], "949": [189, 195], "238": 189, "839": 189, "596": [189, 193, 194, 195], "684": [189, 195], "753": [189, 191], "535": [189, 195], "415": 189, "354": 189, "345": 189, "604": 189, "968": [189, 190, 193], "502": [189, 195], "768": [189, 195], "380": [189, 193], "220": 189, "283": [189, 196], "773": [189, 193], "142": [189, 195], "867": [189, 194, 195], "123": 189, "381": [189, 193], "767": [189, 194], "072": [189, 190, 195], "551": [189, 195], "741": 189, "958": 189, "845": [189, 191, 193], "222": 189, "239": 189, "065": [189, 193], "903": [189, 195], "869": [189, 195], "552": 189, "757": [189, 196], "915": [189, 193], "043": 189, "125": [189, 191, 194, 195], "984": [189, 195], "618": 189, "344": 189, "663": 189, "216": [189, 193], "717": [189, 193, 195], "258": [189, 195], "421": [189, 195], "647": 189, "420": [189, 195], "410": [189, 195], "390": 189, "566": [189, 191, 193], "718": 189, "645": [189, 195], "587": [189, 191], "281": [189, 195], "397": [189, 190, 195], "017": [189, 191, 195], "592": [189, 191, 195], "122": 189, "362": 189, "862": [189, 195], "784": [189, 193, 195], "483": 189, "350": [189, 191, 195], "339": [189, 193], "257": [189, 191], "383": [189, 193], "619": 189, "822": 189, "886": 189, "063": [189, 195], "404": [189, 195], "836": [189, 193, 195], "573": [189, 195], "424": [189, 191, 195], "855": 189, "085": 189, "644": [189, 192], "902": [189, 195], "461": [189, 191], "563": [189, 195], "522": [189, 193, 194], "723": [189, 195], "957": [189, 195], "908": 189, "195": [189, 191], "505": [189, 191, 195], "294": [189, 193], "458": 189, "317": [189, 195], "089": 189, "360": [189, 195], "559": [189, 190, 191, 195], "399": [189, 195], "159": [189, 191, 195], "103": [189, 193, 195], "119": [189, 194], "994": [189, 192, 195], "496": [189, 191, 193], "001": [189, 192, 195], "848": 189, "435": 189, "725": [189, 195], "197": [189, 191, 193], "023": 189, "818": [189, 193], "151": [189, 191, 195], "473": [189, 191, 195], "854": 189, "680": [189, 195], "841": 189, "374": [189, 195], "533": 189, "605": [189, 194], "086": [189, 195], "211": 189, "792": [189, 195], "719": [189, 191], "548": 189, "997": 189, "534": [189, 195], "916": [189, 190, 193], "_depth_2": [189, 194], "_depth_4": [189, 194], "763": 189, "_depth_8": [189, 194], "_depth_16": [189, 194], "_depth_32": [189, 194], "_depth_64": [189, 194], "_depth_128": [189, 194], "_depth_256": [189, 194], "_depth_512": [189, 194], "295": [189, 195], "674": [189, 195], "result_mrb": [189, 194], "061": [189, 195], "597": [189, 194, 195], "145": 189, "1600x1200": 189, "ax": 189, "all_qubit_layout": [189, 194], "key_mrb_plot": [189, 194], "example_qv": [189, 196, 200], "run0_qv": [189, 196], "637": 189, "264": [189, 194, 195], "387": [189, 193, 194], "result0_qv": [189, 196], "722": 189, "run1_qv": [189, 196], "result1_qv": [189, 196], "466": 189, "422": [189, 194, 195], "948": [189, 194], "733": [189, 195], "493": [189, 195], "There": 189, "6353": 189, "19060": 189, "minimal_ghz": [189, 190], "237": 189, "183": [189, 190, 195], "example_qscor": [189, 195], "880": [189, 195], "4721": 189, "1866": 189, "301": [189, 194, 195], "5760": 189, "3202": 189, "5666": 189, "6277": 189, "5362": 189, "1528": 189, "4720649335834727": 189, "264883828589849": 189, "is_succes": [189, 195, 196], "qscore_result": [189, 195], "5759620786516855": 189, "13942395641806907": 189, "5666397249858852": 189, "09938021346738757": 189, "536231071484655": 189, "13823427614487907": 189, "multipartit": 190, "One": [190, 196], "larger": [190, 192], "leibfri": 190, "et": 190, "al": 190, "six": 190, "atom": 190, "schr\u00f6dinger": 190, "cat": 190, "natur": 190, "2005": 190, "offer": [190, 199], "verif": [190, 198, 200], "superconduct": 190, "phy": [190, 200], "commun": [190, 199], "095004": 190, "elben": 190, "statist": 190, "toolbox": 190, "probe": 190, "bodi": 190, "rev": [190, 200], "99": 190, "052323": 190, "ciruit": 190, "hadamrd": 190, "addit": [190, 192, 199, 200], "log_depth": 190, "cruz": 190, "yield": 190, "lower": [190, 192], "hous": 190, "reli": 190, "dai": 190, "thu": 190, "comparison": 190, "gme": 190, "prefer": [190, 199], "control": [190, 199], "whenev": 190, "mitgat": 190, "arang": 190, "think": 190, "help": 190, "your_token": [190, 200], "mark": [190, 199], "w_": 190, "ij": [190, 192], "mathcal": 190, "grid": 190, "rerun": 190, "until": 190, "nice": 190, "utils_plot": 190, "plot_layout_fidelity_graph": 190, "464": [190, 195], "646": [190, 194], "962": 190, "212": 190, "fidelitii": 190, "filter": 190, "descript": [190, 199], "l0": 190, "l1": 190, "enumer": [190, 191, 192], "xxxxxxxxxxxxxxxx": 191, "get_iqm_backend": 191, "300": [191, 192, 195], "graph_stat": 191, "40_000": 191, "benchmark_graphst": 191, "run_graphst": 191, "749": 191, "396": [191, 193, 195], "402": [191, 195], "332": [191, 195], "020": 191, "155": [191, 195], "705": 191, "711": [191, 195], "result_graphst": 191, "042": 191, "fetch": 191, "ok": 191, "font_manag": 191, "findfont": 191, "font": 191, "famili": 191, "stixgener": 191, "fall": 191, "back": 191, "dejavu": 191, "san": 191, "stixnonunicod": 191, "494": [191, 195], "stixsizeonesym": 191, "stixsizetwosym": 191, "stixsizethreesym": 191, "stixsizefoursym": 191, "stixsizefivesym": 191, "cmsy10": 191, "cmr10": 191, "cmtt10": 191, "518": 191, "cmmi10": 191, "521": 191, "cmb10": 191, "524": 191, "cmss10": 191, "cmex10": 191, "mono": 191, "351": 191, "percentag": 191, "idx": 191, "max_neg": 191, "84": 191, "60": 191, "74": 191, "79": 191, "73": 191, "66": 191, "65": 191, "83": 191, "69": 191, "94": 191, "76": 191, "91": 191, "max_negativities_iqm_backend_20250325": 191, "160833": 191, "max_negativities_graph_20250325": 191, "lowest": 191, "resconstruct": 191, "matric": [191, 192], "observation_dict": 191, "ob": 191, "argsort": 191, "lowest_negativity_pair": 191, "highest_negativity_pair": 191, "all_projected_qubit": 191, "all_pair_group": 191, "all_neighbor_group": 191, "all_tomography_st": 191, "all_neg": 191, "bootstrapped_averag": 191, "adjust": 191, "06e": 191, "3206842864916416": 191, "31010765308352356": 191, "93e": 191, "3542183495445777": 191, "3539253716950112": 191, "53e": 191, "3888948376922817": 191, "38736774049571426": 191, "40e": 191, "43361445043616353": 191, "4196633945881397": 191, "41e": 191, "43662497937638245": 191, "42249850678510703": 191, "90e": 191, "37169789059353975": 191, "36979367489991855": 191, "54e": 191, "38686144121566973": 191, "379324805728086": 191, "79e": 191, "39594160382229693": 191, "3931510385413373": 191, "97e": 191, "4092514317610637": 191, "4086540198375821": 191, "50e": 191, "36885658775672914": 191, "35382192582939426": 191, "08e": 191, "33451241682265326": 191, "32543228989306544": 191, "36671508133810615": 191, "36709383454659233": 191, "77e": 191, "32608570801001885": 191, "3213134253456277": 191, "29e": 191, "3566393931240753": 191, "3543493221398908": 191, "81e": 191, "3767486702923495": 191, "35860149933340935": 191, "3341624640356816": 191, "33262962066733953": 191, "00e": 191, "3486521211655147": 191, "3186675847362068": 191, "71e": 191, "39469814069723197": 191, "39099102345993036": 191, "13e": 191, "32804598413012276": 191, "3219124989220279": 191, "24e": 191, "3668085274286376": 191, "36257096650435117": 191, "62e": 191, "3732632016003694": 191, "35702785889177086": 191, "91e": 191, "3465755742920084": 191, "3416698385772142": 191, "17e": 191, "32654059296341725": 191, "30487999669484334": 191, "35e": 191, "39553971118808906": 191, "38203311102738585": 191, "3803202427020316": 191, "37715389665511634": 191, "76e": 191, "37343498488547655": 191, "35586222167388737": 191, "60e": 191, "41534546787652044": 191, "3993565114966017": 191, "45e": 191, "4134082416427767": 191, "398899780892523": 191, "55e": 191, "3810499300589416": 191, "3755024431288029": 191, "34e": 191, "37452627891460544": 191, "3671820250131137": 191, "q_0": 191, "\u03c0": [191, 192], "q_1": 191, "q_2": 191, "q_3": 191, "q_4": 191, "q_5": 191, "q_6": 191, "q_7": 191, "q_8": 191, "q_9": 191, "q_10": 191, "q_11": 191, "q_12": 191, "q_13": 191, "q_14": 191, "q_15": 191, "q_16": 191, "q_17": 191, "q_18": 191, "q_19": 191, "tomo_qubit": 191, "introduct": 192, "what": [192, 193], "background": 192, "journal": 192, "prxquantum": 192, "1103": 192, "010325": [192, 200], "compressive_gst": 192, "gstconfigur": 192, "compressivegst": 192, "iqmfakeadoni": 192, "iqmfakeapollo": 192, "gate_set": 192, "1qxyi": 192, "2qxycz": 192, "2qxycz_extend": 192, "3qxycz": 192, "krau": 192, "k_i": 192, "trigger": 192, "diamond": 192, "low": 192, "benefit": 192, "less": [192, 194], "captur": 192, "domin": 192, "sourc": [192, 198, 199], "bootstrap_sampl": 192, "trustworthi": 192, "veri": 192, "consum": 192, "minimal_1q_gst": 192, "minimal_2q_gst": 192, "Be": 192, "extra": 192, "434": [192, 195], "20it": 192, "converg": 192, "criterion": 192, "56e": 192, "deepcopi": 192, "benchmark_rk1": 192, "result_rk1": 192, "83it": 192, "99e": 192, "uncertaintit": 192, "restult": 192, "idl": 192, "qb1": 192, "99693": 192, "nan": 192, "00703": 192, "unitar": 192, "98781": 192, "rx": 192, "99918": 192, "0013": 192, "99674": 192, "ry": 192, "99509": 192, "01332": 192, "98074": 192, "tvd": 192, "00698": 192, "03296": 192, "povm": 192, "dist": 192, "00601": 192, "04366": 192, "results_layout_": 192, "raw_kraus_oper": 192, "raw_gat": 192, "raw_povm": 192, "raw_stat": 192, "gauge_opt_g": 192, "gauge_opt_gates_pauli_basi": 192, "gauge_opt_povm": 192, "gauge_opt_st": 192, "main_mgst_tim": 192, "gauge_optimization_tim": 192, "choi_ev": 192, "full_metr": 192, "save": 192, "raw": 192, "gaug": 192, "frame": 192, "3d": 192, "raw_result": 192, "array_str": 192, "precis": 192, "suppress_smal": 192, "002j": 192, "005": [192, 193, 195], "003j": 192, "004j": 192, "These": 192, "diplai": 192, "disc": 192, "superoper": 192, "represent": 192, "sinlg": 192, "g_": 192, "p_i": 192, "p_j": 192, "layout_": 192, "_gate_metr": 192, "_choi_eigenvalu": 192, "_other_metr": 192, "_process_matrix_0": 192, "_process_matrix_1": 192, "_process_matrix_2": 192, "_spam_matrices_r": 192, "_spam_matrices_imag": 192, "_hamiltonian_paramet": 192, "altern": 192, "ourselv": 192, "xyi": 192, "instruct": 192, "gate_list": 192, "1e": 192, "indentif": 192, "gate_label": 192, "custom_1q_gst": 192, "verbos": 192, "42e": 192, "008j": 192, "001j": 192, "064": 193, "121": [193, 195], "146": 193, "954": [193, 195], "376": [193, 195], "9975073376613797": 193, "9957157328789242": 193, "9976959612386156": 193, "9957310522299055": 193, "752861001879659e": 193, "028839025109517e": 193, "64196778583225e": 193, "243656712565855e": 193, "know": 193, "640": [193, 195], "842": [193, 194], "740": 193, "9798030906041997": 193, "9431232937255942": 193, "9840858225184934": 193, "945382422883015": 193, "174": 193, "038": 193, "215": [193, 194], "706": 193, "441": 193, "9344679810705316": 193, "9463377694591251": 193, "9267928870925659": 193, "943379008472002": 193, "947": 194, "365": [194, 195], "428": [194, 195], "940": 194, "944": [194, 195], "331": [194, 195], "889": 194, "651": [194, 195], "343": 194, "214": 194, "attr_kei": [194, 196], "depth_2": 194, "14302134513855": 194, "007565975189208984": 194, "06883907318115234": 194, "f8d9d789": 194, "0e9a": 194, "4086": 194, "ab36": 194, "685064a7b66": 194, "depth_4": 194, "0004930496215820312": 194, "0007040500640869141": 194, "87e367b7": 194, "c3ae": 194, "4457": 194, "8a2d": 194, "7b169c528033": 194, "depth_8": 194, "0004889965057373047": 194, "0005979537963867188": 194, "d84330c9": 194, "101f": 194, "40ff": 194, "bea8": 194, "f5e4c0b41527": 194, "depth_16": 194, "0004627704620361328": 194, "0006148815155029297": 194, "1f58b4a0": 194, "fb16": 194, "4d12": 194, "a9e8": 194, "c9263da52418": 194, "depth_32": 194, "00047278404235839844": 194, "0005419254302978516": 194, "4e43834b": 194, "5694": 194, "4c6d": 194, "8a83": 194, "796913d67e40": 194, "depth_64": 194, "000469207763671875": 194, "0005609989166259766": 194, "036e1dd": 194, "ca95": 194, "42a1": 194, "ab68": 194, "30a243f6b4ba": 194, "depth_128": 194, "0004668235778808594": 194, "0005328655242919922": 194, "13a59ca8": 194, "2ab0": 194, "4de8": 194, "a643": 194, "5b3f318f03d4": 194, "depth_256": 194, "0004749298095703125": 194, "e673defd": 194, "039c": 194, "4c37": 194, "9ef3": 194, "d4734436f39a": 194, "depth_512": 194, "0005099773406982422": 194, "0005548000335693359": 194, "d83ac439": 194, "2929": 194, "4d78": 194, "b52b": 194, "f297873c3e44": 194, "9710221314803044": 194, "001462493086363885": 194, "9473471466489307": 194, "00285118172031131": 194, "xxxxxxxxxxxxxx": 195, "put": 195, "run0_qscor": 195, "801": 195, "433": 195, "027": 195, "167": 195, "929": 195, "978": 195, "115": 195, "463": 195, "495": 195, "715": 195, "378": 195, "056": 195, "135": 195, "586": 195, "274": 195, "716": 195, "467": 195, "847": 195, "474": 195, "105": 195, "503": 195, "634": 195, "406": 195, "934": 195, "699": 195, "087": 195, "092": 195, "601": 195, "956": 195, "361": 195, "result0_qscor": 195, "4370": 195, "4700": 195, "6695": 195, "3692": 195, "5902": 195, "3404": 195, "5068": 195, "5085": 195, "4374": 195, "8942": 195, "43697610073325965": 195, "09963324394097106": 195, "6694825328517715": 195, "07553199096996285": 195, "5901951757699432": 195, "04806723107119834": 195, "5067731707198324": 195, "03884606517763287": 195, "4373922810576933": 195, "034249084355823": 195, "rem_quasidistribut": 196, "time_batch": 196, "cumulative_average_heavy_output_prob": 196, "cumulative_stddev_heavy_output_prob": 196, "rem_cumulative_average_heavy_output_prob": 196, "rem_cumulative_stddev_heavy_output_prob": 196, "rem_heavy_output_prob": 196, "60546875": 196, "71875": 196, "578125": 196, "74609375": 196, "6328125": 196, "546875": 196, "56640625": 196, "76953125": 196, "75390625": 196, "67578125": 196, "6171875": 196, "55078125": 196, "64453125": 196, "6875": 196, "7109375": 196, "82421875": 196, "76171875": 196, "6484375": 196, "6015625": 196, "73828125": 196, "63671875": 196, "69140625": 196, "61328125": 196, "734375": 196, "57421875": 196, "6953125": 196, "55859375": 196, "69921875": 196, "609375": 196, "671875": 196, "77734375": 196, "6796875": 196, "62890625": 196, "6640625": 196, "66796875": 196, "62109375": 196, "703125": 196, "68359375": 196, "58984375": 196, "71484375": 196, "59375": 196, "79296875": 196, "66015625": 196, "65234375": 196, "59765625": 196, "65625": 196, "84765625": 196, "5859375": 196, "5625": 196, "72265625": 196, "640625": 196, "58203125": 196, "54296875": 196, "8203125": 196, "78515625": 196, "7265625": 196, "53515625": 196, "5703125": 196, "5546875": 196, "5390625": 196, "828125": 196, "80859375": 196, "765625": 196, "81640625": 196, "5234375": 196, "73046875": 196, "87890625": 196, "7890625": 196, "7734375": 196, "7421875": 196, "70703125": 196, "50390625": 196, "7578125": 196, "52734375": 196, "78125": 196, "8125": 196, "average_heavy_output_prob": 196, "649203125": 196, "021341903733745705": 196, "672703125": 196, "020984452845629994": 196, "rem_average_heavy_output_prob": 196, "67954478782619": 196, "020869291754367154": 196, "rem_is_succes": 196, "rem_qv_result": 196, "710149650958595": 196, "020289757228807877": 196, "vanilla_4_qubits_": 196, "vanilla_rem_4_qubits_": 196, "Or": 196, "onc": [196, 200], "collect": 197, "demonstr": 197, "rest": 197, "summari": [197, 198], "releas": 198, "date": [198, 199], "finland": 198, "tool": [198, 200], "changelog": 198, "search": 198, "januari": 199, "2004": 199, "AND": 199, "FOR": 199, "reproduct": 199, "shall": 199, "licensor": 199, "owner": 199, "entiti": 199, "author": 199, "grant": 199, "legal": 199, "power": 199, "indirect": 199, "caus": 199, "contract": 199, "ownership": 199, "fifti": 199, "percent": 199, "outstand": 199, "iii": 199, "benefici": 199, "exercis": 199, "mechan": 199, "transform": 199, "translat": 199, "convers": 199, "media": 199, "authorship": 199, "attach": 199, "appendix": 199, "editori": 199, "revis": 199, "elabor": 199, "whole": 199, "remain": 199, "link": 199, "bind": 199, "interfac": 199, "thereof": 199, "contribut": 199, "intention": 199, "inclus": 199, "behalf": 199, "electron": 199, "verbal": 199, "mail": 199, "track": 199, "discuss": 199, "exclud": 199, "conspicu": 199, "Not": 199, "contributor": 199, "whom": 199, "been": 199, "incorpor": 199, "subject": 199, "herebi": 199, "perpetu": 199, "worldwid": 199, "charg": 199, "royalti": 199, "free": 199, "irrevoc": 199, "reproduc": 199, "publicli": 199, "sublicens": 199, "patent": 199, "sell": 199, "transfer": 199, "claim": 199, "infring": 199, "alon": 199, "institut": 199, "litig": 199, "counterclaim": 199, "lawsuit": 199, "alleg": 199, "contributori": 199, "termin": [199, 200], "redistribut": 199, "medium": 199, "meet": 199, "recipi": 199, "carri": 199, "promin": 199, "retain": 199, "trademark": 199, "pertain": 199, "readabl": 199, "along": 199, "wherev": 199, "third": 199, "parti": 199, "appear": 199, "content": 199, "alongsid": 199, "addendum": 199, "constru": 199, "compli": 199, "explicitli": 199, "notwithstand": 199, "noth": 199, "herein": 199, "supersed": 199, "agreement": 199, "regard": 199, "trade": 199, "servic": [199, 200], "reason": 199, "customari": 199, "describ": 199, "disclaim": 199, "merchant": 199, "particular": 199, "respons": 199, "appropri": 199, "risk": 199, "liabil": 199, "event": 199, "tort": 199, "neglig": 199, "deliber": [199, 200], "grossli": 199, "liabl": 199, "damag": 199, "special": 199, "incident": 199, "consequenti": 199, "aris": 199, "inabl": 199, "loss": 199, "goodwil": 199, "stoppag": 199, "failur": 199, "malfunct": 199, "commerci": 199, "even": 199, "advis": 199, "fee": 199, "indemn": 199, "oblig": 199, "indemnifi": 199, "defend": 199, "hold": 199, "harmless": 199, "incur": 199, "assert": 199, "boilerpl": 199, "enclos": 199, "bracket": 199, "replac": 199, "comment": 199, "syntax": 199, "easier": 199, "archiv": 199, "repositori": [199, 200], "licenc": 199, "src": 199, "raphael": 199, "brieger": 199, "ingo": 199, "roth": 199, "martin": 199, "kliesch": 199, "comprehens": 200, "modular": 200, "easi": 200, "042311": 200, "lett": 200, "080505": 200, "prx": 200, "2023": 200, "150502": 200, "2022": 200, "holist": 200, "032328": 200, "0712": 200, "0921": 200, "2007": 200, "adv": 200, "technol": 200, "2100061": 200, "ieee": 200, "tran": 200, "eng": 200, "legaci": 200, "wrap": 200, "benchmarkexperi": 200, "handl": 200, "uv": 200, "highli": 200, "practic": 200, "With": 200, "machin": 200, "venv": 200, "read": 200, "prompt": 200, "suppli": 200, "txt": 200, "lock": 200, "directli": 200, "repo": 200, "pypi": 200, "lint": 200, "cicd": 200, "clone": 200, "directori": 200, "edit": 200, "docbuild": 200, "pyproject": 200, "toml": 200, "commit": 200, "upgrad": 200, "transit": 200, "cloud": 200, "prem": 200, "platform": 200, "authent": 200, "example_irb": 200, "example_experi": 200, "setup": 200, "weekli": 200, "daili": 200, "gitlab": 200, "scheduled_experi": 200}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [47, 0, 0, "-", "logging_config"], [48, 0, 0, "-", "optimization"], [61, 0, 0, "-", "quantum_volume"], [80, 0, 0, "-", "randomized_benchmarking"], [137, 0, 0, "-", "readout_mitigation"], [141, 0, 0, "-", "utils"], [168, 0, 0, "-", "utils_plots"], [174, 0, 0, "-", "utils_shadows"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_circuits_per_batch"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_dd"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"], [34, 0, 0, "-", "graph_states"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "fidelity_analysis"], [24, 5, 1, "", "fidelity_ghz_coherences"], [25, 5, 1, "", "fidelity_ghz_randomized_measurements"], [26, 5, 1, "", "generate_ghz_linear"], [27, 5, 1, "", "generate_ghz_log_cruz"], [28, 5, 1, "", "generate_ghz_log_mooney"], [29, 5, 1, "", "generate_ghz_spanning_tree"], [30, 5, 1, "", "generate_ghz_star"], [31, 5, 1, "", "get_cx_map"], [32, 5, 1, "", "get_edges"], [33, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "append_rms"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.entanglement.graph_states": [[35, 1, 1, "", "GraphStateBenchmark"], [36, 1, 1, "", "GraphStateConfiguration"], [37, 5, 1, "", "find_edges_with_disjoint_neighbors"], [38, 5, 1, "", "generate_graph_state"], [39, 5, 1, "", "generate_minimal_edge_layers"], [40, 5, 1, "", "negativity_analysis"], [41, 5, 1, "", "plot_density_matrix"], [42, 5, 1, "", "plot_max_negativities"], [43, 5, 1, "", "plot_max_negativities_graph"], [44, 5, 1, "", "shadow_tomography_analysis"], [45, 5, 1, "", "state_tomography_analysis"], [46, 5, 1, "", "update_pauli_expectations"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[35, 2, 1, "", "add_all_circuits_to_dataset"], [35, 2, 1, "", "add_all_meta_to_dataset"], [35, 2, 1, "", "analysis_function"], [35, 2, 1, "", "execute"], [35, 2, 1, "", "generate_all_circuit_info_for_graph_state_benchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[36, 3, 1, "", "benchmark"], [36, 3, 1, "", "model_config"], [36, 3, 1, "", "n_median_of_means"], [36, 3, 1, "", "n_random_unitaries"], [36, 3, 1, "", "num_bootstraps"], [36, 3, 1, "", "qubits"], [36, 3, 1, "", "tomography"]], "iqm.benchmarks.optimization": [[49, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[50, 1, 1, "", "QScoreBenchmark"], [51, 1, 1, "", "QScoreConfiguration"], [52, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [53, 5, 1, "", "compute_expectation_value"], [54, 5, 1, "", "create_objective_function"], [55, 5, 1, "", "cut_cost_function"], [56, 5, 1, "", "get_optimal_angles"], [57, 5, 1, "", "is_successful"], [58, 5, 1, "", "plot_approximation_ratios"], [59, 5, 1, "", "qscore_analysis"], [60, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[50, 2, 1, "", "add_all_meta_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "choose_qubits_custom"], [50, 2, 1, "", "choose_qubits_naive"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[51, 3, 1, "", "REM"], [51, 3, 1, "", "benchmark"], [51, 3, 1, "", "choose_qubits_routine"], [51, 3, 1, "", "custom_qubits_array"], [51, 3, 1, "", "max_num_nodes"], [51, 3, 1, "", "min_num_nodes"], [51, 3, 1, "", "min_num_qubits"], [51, 3, 1, "", "mit_shots"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "num_instances"], [51, 3, 1, "", "num_qaoa_layers"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "qpu_topology"], [51, 3, 1, "", "seed"], [51, 3, 1, "", "use_classically_optimized_angles"], [51, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[62, 0, 0, "-", "clops"], [68, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[63, 1, 1, "", "CLOPSBenchmark"], [64, 1, 1, "", "CLOPSConfiguration"], [65, 5, 1, "", "clops_analysis"], [66, 5, 1, "", "plot_times"], [67, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[63, 2, 1, "", "add_all_meta_to_dataset"], [63, 2, 1, "", "analysis_function"], [63, 2, 1, "", "append_parameterized_unitary"], [63, 2, 1, "", "assign_random_parameters_to_all"], [63, 2, 1, "", "clops_cycle"], [63, 2, 1, "", "execute"], [63, 2, 1, "", "generate_circuit_list"], [63, 2, 1, "", "generate_random_parameters"], [63, 2, 1, "", "generate_single_circuit"], [63, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[64, 3, 1, "", "benchmark"], [64, 3, 1, "", "clops_h_bool"], [64, 3, 1, "", "model_config"], [64, 3, 1, "", "num_circuits"], [64, 3, 1, "", "num_shots"], [64, 3, 1, "", "num_updates"], [64, 3, 1, "", "optimize_sqg"], [64, 3, 1, "", "physical_layout"], [64, 3, 1, "", "qiskit_optim_level"], [64, 3, 1, "", "qubits"], [64, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[69, 1, 1, "", "QuantumVolumeBenchmark"], [70, 1, 1, "", "QuantumVolumeConfiguration"], [71, 5, 1, "", "compute_heavy_output_probabilities"], [72, 5, 1, "", "cumulative_hop"], [73, 5, 1, "", "cumulative_std"], [74, 5, 1, "", "get_ideal_heavy_outputs"], [75, 5, 1, "", "get_rem_hops"], [76, 5, 1, "", "heavy_projector"], [77, 5, 1, "", "is_successful"], [78, 5, 1, "", "plot_hop_threshold"], [79, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[69, 2, 1, "", "add_all_circuits_to_dataset"], [69, 2, 1, "", "add_all_meta_to_dataset"], [69, 2, 1, "", "analysis_function"], [69, 2, 1, "", "execute"], [69, 2, 1, "", "generate_circuit_list"], [69, 2, 1, "", "generate_single_circuit"], [69, 2, 1, "", "get_rem_quasidistro"], [69, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "choose_qubits_routine"], [70, 3, 1, "", "custom_qubits_array"], [70, 3, 1, "", "mit_shots"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "num_circuits"], [70, 3, 1, "", "num_sigmas"], [70, 3, 1, "", "optimize_sqg"], [70, 3, 1, "", "physical_layout"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "rem"], [70, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[81, 0, 0, "-", "clifford_rb"], [86, 0, 0, "-", "direct_rb"], [93, 0, 0, "-", "eplg"], [99, 0, 0, "-", "interleaved_rb"], [104, 0, 0, "-", "mirror_rb"], [113, 0, 0, "-", "multi_lmfit"], [118, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[82, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[83, 1, 1, "", "CliffordRBConfiguration"], [84, 1, 1, "", "CliffordRandomizedBenchmarking"], [85, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[83, 3, 1, "", "benchmark"], [83, 3, 1, "", "model_config"], [83, 3, 1, "", "num_circuit_samples"], [83, 3, 1, "", "parallel_execution"], [83, 3, 1, "", "qubits_array"], [83, 3, 1, "", "sequence_lengths"], [83, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[84, 2, 1, "", "add_all_circuits_to_dataset"], [84, 2, 1, "", "add_all_metadata_to_dataset"], [84, 2, 1, "", "analysis_function"], [84, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[87, 0, 0, "-", "direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[88, 1, 1, "", "DirectRBConfiguration"], [89, 1, 1, "", "DirectRandomizedBenchmarking"], [90, 5, 1, "", "direct_rb_analysis"], [91, 5, 1, "", "generate_drb_circuits"], [92, 5, 1, "", "generate_fixed_depth_parallel_drb_circuits"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration": [[88, 3, 1, "", "benchmark"], [88, 3, 1, "", "clifford_sqg_probabilities"], [88, 3, 1, "", "densities_2q_gates"], [88, 3, 1, "", "depths"], [88, 3, 1, "", "is_eplg"], [88, 3, 1, "", "model_config"], [88, 3, 1, "", "num_circuit_samples"], [88, 3, 1, "", "parallel_execution"], [88, 3, 1, "", "qiskit_optim_level"], [88, 3, 1, "", "qubits_array"], [88, 3, 1, "", "routing_method"], [88, 3, 1, "", "shots"], [88, 3, 1, "", "sqg_gate_ensembles"], [88, 3, 1, "", "two_qubit_gate_ensembles"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking": [[89, 2, 1, "", "add_all_meta_to_dataset"], [89, 2, 1, "", "analysis_function"], [89, 2, 1, "", "assign_inputs_to_qubits"], [89, 2, 1, "", "execute"], [89, 2, 1, "", "submit_single_drb_job"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[94, 0, 0, "-", "eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[95, 1, 1, "", "EPLGBenchmark"], [96, 1, 1, "", "EPLGConfiguration"], [97, 5, 1, "", "eplg_analysis"], [98, 5, 1, "", "plot_layered_fidelities_graph"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark": [[95, 2, 1, "", "add_all_meta_to_dataset"], [95, 2, 1, "", "analysis_function"], [95, 2, 1, "", "execute"], [95, 2, 1, "", "validate_custom_qubits_array"], [95, 2, 1, "", "validate_random_chain_inputs"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration": [[96, 3, 1, "", "calibration_url"], [96, 3, 1, "", "chain_length"], [96, 3, 1, "", "chain_path_samples"], [96, 3, 1, "", "custom_qubits_array"], [96, 3, 1, "", "drb_circuit_samples"], [96, 3, 1, "", "drb_depths"], [96, 3, 1, "", "max_hamiltonian_path_tries"], [96, 3, 1, "", "model_config"], [96, 3, 1, "", "num_disjoint_layers"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[100, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[101, 1, 1, "", "InterleavedRBConfiguration"], [102, 1, 1, "", "InterleavedRandomizedBenchmarking"], [103, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[101, 3, 1, "", "interleaved_gate"], [101, 3, 1, "", "interleaved_gate_params"], [101, 3, 1, "", "model_config"], [101, 3, 1, "", "num_circuit_samples"], [101, 3, 1, "", "parallel_execution"], [101, 3, 1, "", "qubits_array"], [101, 3, 1, "", "sequence_lengths"], [101, 3, 1, "", "shots"], [101, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[102, 2, 1, "", "add_all_circuits_to_dataset"], [102, 2, 1, "", "add_all_meta_to_dataset"], [102, 2, 1, "", "analysis_function"], [102, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[105, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[106, 1, 1, "", "MirrorRBConfiguration"], [107, 1, 1, "", "MirrorRandomizedBenchmarking"], [108, 5, 1, "", "compute_polarizations"], [109, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [110, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [111, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [112, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[106, 3, 1, "", "benchmark"], [106, 3, 1, "", "clifford_sqg_probability"], [106, 3, 1, "", "density_2q_gates"], [106, 3, 1, "", "depths_array"], [106, 3, 1, "", "model_config"], [106, 3, 1, "", "num_circuit_samples"], [106, 3, 1, "", "num_pauli_samples"], [106, 3, 1, "", "qiskit_optim_level"], [106, 3, 1, "", "qubits_array"], [106, 3, 1, "", "routing_method"], [106, 3, 1, "", "shots"], [106, 3, 1, "", "simulation_method"], [106, 3, 1, "", "sqg_gate_ensemble"], [106, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[107, 2, 1, "", "add_all_meta_to_dataset"], [107, 2, 1, "", "analysis_function"], [107, 2, 1, "", "execute"], [107, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[114, 5, 1, "", "create_multi_dataset_params"], [115, 5, 1, "", "eval_func_single_dataset"], [116, 5, 1, "", "get_param_names_from_func_signature"], [117, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[119, 5, 1, "", "compute_inverse_clifford"], [120, 5, 1, "", "edge_grab"], [121, 5, 1, "", "estimate_survival_probabilities"], [122, 5, 1, "", "exponential_rb"], [123, 5, 1, "", "fit_decay_lmfit"], [124, 5, 1, "", "generate_all_rb_circuits"], [125, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [126, 5, 1, "", "generate_random_clifford_seq_circuits"], [127, 5, 1, "", "get_survival_probabilities"], [128, 5, 1, "", "import_native_gate_cliffords"], [129, 5, 1, "", "lmfit_minimizer"], [130, 5, 1, "", "plot_rb_decay"], [131, 5, 1, "", "relabel_qubits_array_from_zero"], [132, 5, 1, "", "submit_parallel_rb_job"], [133, 5, 1, "", "submit_sequential_rb_jobs"], [134, 5, 1, "", "survival_probabilities_parallel"], [135, 5, 1, "", "validate_irb_gate"], [136, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[138, 1, 1, "", "M3IQM"], [139, 5, 1, "", "apply_readout_error_mitigation"], [140, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[138, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[142, 5, 1, "", "bootstrap_counts"], [143, 5, 1, "", "count_2q_layers"], [144, 5, 1, "", "count_native_gates"], [145, 5, 1, "", "extract_fidelities"], [146, 5, 1, "", "generate_state_tomography_circuits"], [147, 5, 1, "", "get_Pauli_expectation"], [148, 5, 1, "", "get_active_qubits"], [149, 5, 1, "", "get_iqm_backend"], [150, 5, 1, "", "get_measurement_mapping"], [151, 5, 1, "", "get_neighbors_of_edges"], [152, 5, 1, "", "get_tomography_matrix"], [153, 5, 1, "", "marginal_distribution"], [154, 5, 1, "", "median_with_uncertainty"], [155, 5, 1, "", "perform_backend_transpilation"], [156, 5, 1, "", "random_hamiltonian_path"], [157, 5, 1, "", "reduce_to_active_qubits"], [158, 5, 1, "", "remove_directed_duplicates_to_list"], [159, 5, 1, "", "retrieve_all_counts"], [160, 5, 1, "", "retrieve_all_job_metadata"], [161, 5, 1, "", "set_coupling_map"], [162, 5, 1, "", "sort_batches_by_final_layout"], [163, 5, 1, "", "split_into_disjoint_pairs"], [164, 5, 1, "", "split_sequence_in_chunks"], [165, 5, 1, "", "submit_execute"], [166, 5, 1, "", "timeit"], [167, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[169, 1, 1, "", "GraphPositions"], [170, 5, 1, "", "draw_graph_edges"], [171, 5, 1, "", "evaluate_hamiltonian_paths"], [172, 5, 1, "", "plot_layout_fidelity_graph"], [173, 5, 1, "", "rx_to_nx_graph"]], "iqm.benchmarks.utils_plots.GraphPositions": [[169, 2, 1, "", "create_positions"], [169, 3, 1, "", "deneb_positions"], [169, 3, 1, "", "garnet_positions"], [169, 3, 1, "", "predefined_stations"]], "iqm.benchmarks.utils_shadows": [[175, 5, 1, "", "CUE"], [176, 5, 1, "", "get_local_shadow"], [177, 5, 1, "", "get_negativity"], [178, 5, 1, "", "local_shadow_tomography"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 194, 195, 196, 198, 200], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 198, 200], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 184, 185, 187, 188], "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 191], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 184, 185, 189, 190], "ghzbenchmark": 21, "ghzconfigur": 22, "fidelity_analysi": 23, "fidelity_ghz_coher": 24, "fidelity_ghz_randomized_measur": 25, "generate_ghz_linear": 26, "generate_ghz_log_cruz": 27, "generate_ghz_log_moonei": 28, "generate_ghz_spanning_tre": 29, "generate_ghz_star": 30, "get_cx_map": 31, "get_edg": 32, "plot_fidel": 33, "graph_stat": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "graphstatebenchmark": 35, "graphstateconfigur": 36, "find_edges_with_disjoint_neighbor": 37, "generate_graph_st": 38, "generate_minimal_edge_lay": 39, "negativity_analysi": 40, "plot_density_matrix": 41, "plot_max_neg": 42, "plot_max_negativities_graph": 43, "shadow_tomography_analysi": 44, "state_tomography_analysi": 45, "update_pauli_expect": 46, "logging_config": 47, "optim": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "qscore": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 189, 195], "qscorebenchmark": 50, "qscoreconfigur": 51, "calculate_optimal_angles_for_qaoa_p1": 52, "compute_expectation_valu": 53, "create_objective_funct": 54, "cut_cost_funct": 55, "get_optimal_angl": 56, "is_success": [57, 77], "plot_approximation_ratio": 58, "qscore_analysi": 59, "run_qaoa": 60, "quantum_volum": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "clop": [62, 63, 64, 65, 66, 67, 184, 185, 187, 189], "clopsbenchmark": 63, "clopsconfigur": 64, "clops_analysi": 65, "plot_tim": 66, "retrieve_clops_elapsed_tim": 67, "quantumvolumebenchmark": 69, "quantumvolumeconfigur": 70, "compute_heavy_output_prob": 71, "cumulative_hop": 72, "cumulative_std": 73, "get_ideal_heavy_output": 74, "get_rem_hop": 75, "heavy_projector": 76, "plot_hop_threshold": 78, "qv_analysi": 79, "randomized_benchmark": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "clifford_rb": [81, 82, 83, 84, 85], "cliffordrbconfigur": 83, "cliffordrandomizedbenchmark": 84, "clifford_rb_analysi": 85, "direct_rb": [86, 87, 88, 89, 90, 91, 92], "directrbconfigur": 88, "directrandomizedbenchmark": 89, "direct_rb_analysi": 90, "generate_drb_circuit": 91, "generate_fixed_depth_parallel_drb_circuit": 92, "eplg": [93, 94, 95, 96, 97, 98, 188], "eplgbenchmark": 95, "eplgconfigur": 96, "eplg_analysi": 97, "plot_layered_fidelities_graph": 98, "interleaved_rb": [99, 100, 101, 102, 103], "interleavedrbconfigur": 101, "interleavedrandomizedbenchmark": 102, "interleaved_rb_analysi": 103, "mirror_rb": [104, 105, 106, 107, 108, 109, 110, 111, 112], "mirrorrbconfigur": 106, "mirrorrandomizedbenchmark": 107, "compute_polar": 108, "generate_fixed_depth_mrb_circuit": 109, "generate_pauli_dressed_mrb_circuit": 110, "list_to_numcircuit_times_numpauli_matrix": 111, "mrb_analysi": 112, "multi_lmfit": [113, 114, 115, 116, 117], "create_multi_dataset_param": 114, "eval_func_single_dataset": 115, "get_param_names_from_func_signatur": 116, "multi_dataset_residu": 117, "randomized_benchmarking_common": [118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "compute_inverse_clifford": 119, "edge_grab": 120, "estimate_survival_prob": 121, "exponential_rb": 122, "fit_decay_lmfit": 123, "generate_all_rb_circuit": 124, "generate_fixed_depth_parallel_rb_circuit": 125, "generate_random_clifford_seq_circuit": 126, "get_survival_prob": 127, "import_native_gate_clifford": 128, "lmfit_minim": 129, "plot_rb_decai": 130, "relabel_qubits_array_from_zero": 131, "submit_parallel_rb_job": 132, "submit_sequential_rb_job": 133, "survival_probabilities_parallel": 134, "validate_irb_g": 135, "validate_rb_qubit": 136, "readout_mitig": [137, 138, 139, 140], "m3iqm": 138, "apply_readout_error_mitig": 139, "readout_error_m3": 140, "util": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "bootstrap_count": 142, "count_2q_lay": 143, "count_native_g": 144, "extract_fidel": 145, "generate_state_tomography_circuit": 146, "get_pauli_expect": 147, "get_active_qubit": 148, "get_iqm_backend": 149, "get_measurement_map": 150, "get_neighbors_of_edg": 151, "get_tomography_matrix": 152, "marginal_distribut": 153, "median_with_uncertainti": 154, "perform_backend_transpil": 155, "random_hamiltonian_path": 156, "reduce_to_active_qubit": 157, "remove_directed_duplicates_to_list": 158, "retrieve_all_count": 159, "retrieve_all_job_metadata": 160, "set_coupling_map": 161, "sort_batches_by_final_layout": 162, "split_into_disjoint_pair": 163, "split_sequence_in_chunk": 164, "submit_execut": 165, "timeit": 166, "xrvariable_to_count": 167, "utils_plot": [168, 169, 170, 171, 172, 173], "graphposit": 169, "draw_graph_edg": 170, "evaluate_hamiltonian_path": 171, "plot_layout_fidelity_graph": 172, "rx_to_nx_graph": 173, "utils_shadow": [174, 175, 176, 177, 178], "cue": 175, "get_local_shadow": 176, "get_neg": 177, "local_shadow_tomographi": 178, "changelog": 179, "version": 179, "2": [179, 181], "34": 179, "33": 179, "32": 179, "31": 179, "30": 179, "29": 179, "28": 179, "27": 179, "26": 179, "25": 179, "24": 179, "23": 179, "22": 179, "21": 179, "20": 179, "19": 179, "18": 179, "17": 179, "16": 179, "15": 179, "14": 179, "13": 179, "12": 179, "11": 179, "10": 179, "9": 179, "8": 179, "7": 179, "6": 179, "5": 179, "4": 179, "3": 179, "1": 179, "0": 179, "develop": [180, 200], "qubit": [181, 191], "clifford": [181, 184, 186, 189], "group": 181, "decomposit": 181, "gener": [181, 187, 194, 196], "1q": [181, 193], "2q": [181, 193], "dump": 181, "pickl": 181, "file": 181, "load": 181, "count": 181, "element": 181, "A": 181, "wai": 181, "work": 181, "out": [181, 192], "invers": 181, "sequenc": 181, "design": 181, "condit": 181, "how": 182, "make": 182, "your": 182, "own": 182, "devic": 183, "spark": 184, "connect": [184, 185], "backend": [184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196], "state": [184, 185, 189, 190, 191], "fidel": [184, 185, 188, 189, 190], "quantum": [184, 185, 189, 196], "volum": [184, 185, 189, 196], "layer": [184, 185, 187, 188], "oper": [184, 185, 187], "per": [184, 185, 187, 188], "second": [184, 185, 187], "random": [184, 186, 188, 189, 193, 194], "interleav": [184, 189, 193], "irb": [184, 193], "q": [184, 185, 195], "score": [184, 185, 195], "summari": [184, 185, 189], "star": 185, "crb": 186, "choos": [186, 187, 188, 189, 191, 192, 193, 194, 195, 196], "defin": [186, 187, 188, 189, 191, 192, 193, 194, 195, 196], "set": [186, 187, 188, 189, 192, 194, 195, 196], "token": [186, 187, 188, 189, 194, 195, 196], "us": [186, 187, 188, 189, 191, 194, 195, 196, 200], "reson": [186, 187, 188, 189, 194, 195, 196], "configur": [186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "run": [186, 187, 188, 190, 191, 193, 194, 195, 196], "experi": [186, 187, 188, 191, 192, 193, 194, 195, 196], "perform": [186, 187, 188, 191, 195, 196], "analysi": [186, 187, 188, 191, 195, 196], "list": [187, 194], "all": [187, 188, 191, 192, 194], "kei": [187, 194], "attribut": [187, 191, 194], "dataset": [187, 191, 194], "The": [187, 194], "observ": [187, 192, 194], "object": [187, 194], "contain": [187, 194], "result": [187, 190, 192, 193, 194], "plot": [187, 188, 191, 192, 194, 196], "error": 188, "gate": [188, 192, 193], "inspect": [188, 191], "final": [188, 192], "visual": 188, "select": 188, "drb": 188, "decai": 188, "sampl": [188, 191], "parallel": 188, "notebook": [189, 200], "mirror": [189, 194], "greenberg": 190, "horn": 190, "zeiling": 190, "definit": 190, "access": [190, 192], "graph": 191, "bipartit": 191, "displai": 191, "maximum": 191, "neg": 191, "pair": 191, "avail": 191, "If": 191, "tomographi": [191, 192], "bootstrap": 191, "bia": 191, "differ": 191, "between": 191, "each": 191, "mean": 191, "measur": 191, "some": 191, "particular": 191, "pauli": 191, "compress": 192, "gst": 192, "minim": 192, "execut": 192, "": 192, "examin": 192, "high": 192, "level": 192, "store": 192, "estim": 192, "further": 192, "process": 192, "creat": 192, "custom": 192, "check": 192, "matrix": 192, "correspond": 192, "pi": 192, "rotat": 192, "around": 192, "y": 192, "axi": 192, "analyz": [193, 194], "non": 193, "nativ": 193, "mrb": 194, "rb": 194, "qv": 196, "exampl": 197, "content": 198, "indic": 198, "tabl": 198, "licens": 199, "instal": 200, "latest": 200, "releas": 200, "option": 200, "depend": 200, "chang": 200, "character": 200, "physic": 200, "hardwar": 200, "jupyt": 200, "python": 200, "script": 200, "schedul": 200, "ci": 200, "cd": 200, "pipelin": 200}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[23, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[26, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[31, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[32, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[33, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[34, "module-iqm.benchmarks.entanglement.graph_states"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[35, "iqm-benchmarks-entanglement-graph-states-graphstatebenchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[36, "iqm-benchmarks-entanglement-graph-states-graphstateconfiguration"]], "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors": [[37, "iqm-benchmarks-entanglement-graph-states-find-edges-with-disjoint-neighbors"]], "iqm.benchmarks.entanglement.graph_states.generate_graph_state": [[38, "iqm-benchmarks-entanglement-graph-states-generate-graph-state"]], "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers": [[39, "iqm-benchmarks-entanglement-graph-states-generate-minimal-edge-layers"]], "iqm.benchmarks.entanglement.graph_states.negativity_analysis": [[40, "iqm-benchmarks-entanglement-graph-states-negativity-analysis"]], "iqm.benchmarks.entanglement.graph_states.plot_density_matrix": [[41, "iqm-benchmarks-entanglement-graph-states-plot-density-matrix"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities": [[42, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph": [[43, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities-graph"]], "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis": [[44, "iqm-benchmarks-entanglement-graph-states-shadow-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis": [[45, "iqm-benchmarks-entanglement-graph-states-state-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations": [[46, "iqm-benchmarks-entanglement-graph-states-update-pauli-expectations"]], "iqm.benchmarks.logging_config": [[47, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[48, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[49, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[50, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[51, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[52, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[53, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[54, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[55, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[56, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[57, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[58, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[59, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[60, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[61, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[62, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[63, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[64, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[65, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[66, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[67, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[69, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[70, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[71, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[72, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[73, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[74, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[75, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[80, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[81, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[82, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[83, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[84, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[85, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[86, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration": [[88, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-directrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking": [[89, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-directrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis": [[90, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-direct-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits": [[91, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-generate-drb-circuits"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits": [[92, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-generate-fixed-depth-parallel-drb-circuits"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[93, "module-iqm.benchmarks.randomized_benchmarking.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[94, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark": [[95, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplgbenchmark"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration": [[96, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplgconfiguration"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis": [[97, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplg-analysis"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph": [[98, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-plot-layered-fidelities-graph"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[100, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[101, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[102, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[103, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[104, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[105, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[106, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[107, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[108, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[109, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[110, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[111, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[112, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[113, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[114, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[115, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[116, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[117, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[118, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[124, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[125, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[130, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[131, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[132, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[133, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[134, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[135, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[136, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[137, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[138, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[139, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[140, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[141, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[142, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[143, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[144, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[145, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.generate_state_tomography_circuits": [[146, "iqm-benchmarks-utils-generate-state-tomography-circuits"]], "iqm.benchmarks.utils.get_Pauli_expectation": [[147, "iqm-benchmarks-utils-get-pauli-expectation"]], "iqm.benchmarks.utils.get_active_qubits": [[148, "iqm-benchmarks-utils-get-active-qubits"]], "iqm.benchmarks.utils.get_iqm_backend": [[149, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.get_measurement_mapping": [[150, "iqm-benchmarks-utils-get-measurement-mapping"]], "iqm.benchmarks.utils.get_neighbors_of_edges": [[151, "iqm-benchmarks-utils-get-neighbors-of-edges"]], "iqm.benchmarks.utils.get_tomography_matrix": [[152, "iqm-benchmarks-utils-get-tomography-matrix"]], "iqm.benchmarks.utils.marginal_distribution": [[153, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.median_with_uncertainty": [[154, "iqm-benchmarks-utils-median-with-uncertainty"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[155, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.random_hamiltonian_path": [[156, "iqm-benchmarks-utils-random-hamiltonian-path"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[157, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.remove_directed_duplicates_to_list": [[158, "iqm-benchmarks-utils-remove-directed-duplicates-to-list"]], "iqm.benchmarks.utils.retrieve_all_counts": [[159, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[160, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[161, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[162, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.split_into_disjoint_pairs": [[163, "iqm-benchmarks-utils-split-into-disjoint-pairs"]], "iqm.benchmarks.utils.split_sequence_in_chunks": [[164, "iqm-benchmarks-utils-split-sequence-in-chunks"]], "iqm.benchmarks.utils.submit_execute": [[165, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[166, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[167, "iqm-benchmarks-utils-xrvariable-to-counts"]], "iqm.benchmarks.utils_plots": [[168, "module-iqm.benchmarks.utils_plots"]], "iqm.benchmarks.utils_plots.GraphPositions": [[169, "iqm-benchmarks-utils-plots-graphpositions"]], "iqm.benchmarks.utils_plots.draw_graph_edges": [[170, "iqm-benchmarks-utils-plots-draw-graph-edges"]], "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths": [[171, "iqm-benchmarks-utils-plots-evaluate-hamiltonian-paths"]], "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph": [[172, "iqm-benchmarks-utils-plots-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils_plots.rx_to_nx_graph": [[173, "iqm-benchmarks-utils-plots-rx-to-nx-graph"]], "iqm.benchmarks.utils_shadows": [[174, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.utils_shadows.CUE": [[175, "iqm-benchmarks-utils-shadows-cue"]], "iqm.benchmarks.utils_shadows.get_local_shadow": [[176, "iqm-benchmarks-utils-shadows-get-local-shadow"]], "iqm.benchmarks.utils_shadows.get_negativity": [[177, "iqm-benchmarks-utils-shadows-get-negativity"]], "iqm.benchmarks.utils_shadows.local_shadow_tomography": [[178, "iqm-benchmarks-utils-shadows-local-shadow-tomography"]], "Changelog": [[179, "changelog"]], "Version 2.34": [[179, "version-2-34"]], "Version 2.33": [[179, "version-2-33"]], "Version 2.32": [[179, "version-2-32"]], "Version 2.31": [[179, "version-2-31"]], "Version 2.30": [[179, "version-2-30"]], "Version 2.29": [[179, "version-2-29"]], "Version 2.28": [[179, "version-2-28"]], "Version 2.27": [[179, "version-2-27"]], "Version 2.26": [[179, "version-2-26"]], "Version 2.25": [[179, "version-2-25"]], "Version 2.24": [[179, "version-2-24"]], "Version 2.23": [[179, "version-2-23"]], "Version 2.22": [[179, "version-2-22"]], "Version 2.21": [[179, "version-2-21"]], "Version 2.20": [[179, "version-2-20"]], "Version 2.19": [[179, "version-2-19"]], "Version 2.18": [[179, "version-2-18"]], "Version 2.17": [[179, "version-2-17"]], "Version 2.16": [[179, "version-2-16"]], "Version 2.15": [[179, "version-2-15"]], "Version 2.14": [[179, "version-2-14"]], "Version 2.13": [[179, "version-2-13"]], "Version 2.12": [[179, "version-2-12"]], "Version 2.11": [[179, "version-2-11"]], "Version 2.10": [[179, "version-2-10"]], "Version 2.9": [[179, "version-2-9"]], "Version 2.8": [[179, "version-2-8"]], "Version 2.7": [[179, "version-2-7"]], "Version 2.6": [[179, "version-2-6"]], "Version 2.5": [[179, "version-2-5"]], "Version 2.4": [[179, "version-2-4"]], "Version 2.3": [[179, "version-2-3"]], "Version 2.2": [[179, "version-2-2"]], "Version 2.1": [[179, "version-2-1"]], "Version 2.0": [[179, "version-2-0"]], "Version 1.12": [[179, "version-1-12"]], "Version 1.11": [[179, "version-1-11"]], "Version 1.10": [[179, "version-1-10"]], "Version 1.9": [[179, "version-1-9"]], "Version 1.8": [[179, "version-1-8"]], "Version 1.7": [[179, "version-1-7"]], "Version 1.6": [[179, "version-1-6"]], "Version 1.5": [[179, "version-1-5"]], "Version 1.4": [[179, "version-1-4"]], "Version 1.3": [[179, "version-1-3"]], "Version 1.2": [[179, "version-1-2"]], "Version 1.1": [[179, "version-1-1"]], "Version 1.0": [[179, "version-1-0"]], "Development": [[180, "development"]], "2-Qubit Clifford Group Decomposition": [[181, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[181, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[181, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[181, "dump-on-a-pickle-file"]], "Load": [[181, "load"]], "Count elements": [[181, "count-elements"]], "2Q": [[181, "q"]], "1Q": [[181, "id1"]], "A way to work out the inverse of sequences": [[181, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[181, "design-condition"]], "How to make your own benchmark?": [[182, "how-to-make-your-own-benchmark"]], "Devices": [[183, "devices"]], "Benchmarking IQM Spark": [[184, "benchmarking-iqm-spark"]], "Connect to the backend": [[184, "connect-to-the-backend"], [185, "connect-to-the-backend"]], "GHZ state fidelity": [[184, "ghz-state-fidelity"], [185, "ghz-state-fidelity"], [189, "ghz-state-fidelity"]], "Quantum Volume": [[184, "quantum-volume"], [185, "quantum-volume"], [189, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[184, "circuit-layer-operations-per-second-clops"], [185, "circuit-layer-operations-per-second-clops"], [187, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[184, "clifford-randomized-benchmarking"], [189, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[184, "interleaved-randomized-benchmarking-irb"], [193, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[184, "q-score"], [185, "q-score"], [195, "q-score"]], "Summary": [[184, "summary"], [185, "summary"]], "Benchmarking IQM Star": [[185, "benchmarking-iqm-star"]], "Clifford Randomized Benchmarking (CRB)": [[186, "clifford-randomized-benchmarking-crb"]], "Choose (or define) a backend": [[186, "choose-or-define-a-backend"], [187, "choose-or-define-a-backend"], [188, "choose-or-define-a-backend"], [189, "choose-or-define-a-backend"], [191, "choose-or-define-a-backend"], [192, "choose-or-define-a-backend"], [193, "choose-or-define-a-backend"], [194, "choose-or-define-a-backend"], [195, "choose-or-define-a-backend"], [196, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[186, "set-iqm-token-if-using-resonance"], [188, "set-iqm-token-if-using-resonance"], [189, "set-iqm-token-if-using-resonance"], [194, "set-iqm-token-if-using-resonance"], [195, "set-iqm-token-if-using-resonance"], [196, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[186, "randomized-benchmarking-configuration"], [188, "randomized-benchmarking-configuration"]], "Run the experiment": [[186, "run-the-experiment"], [187, "run-the-experiment"], [188, "run-the-experiment"], [191, "run-the-experiment"], [194, "run-the-experiment"], [195, "run-the-experiment"], [196, "run-the-experiment"]], "Perform the analysis": [[186, "perform-the-analysis"], [188, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[187, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[187, "clops-configuration"]], "Perform Analysis": [[187, "perform-analysis"], [191, "perform-analysis"], [195, "perform-analysis"], [196, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[187, "list-all-the-keys-in-the-attributes-of-the-dataset"], [194, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[187, "the-observation-object-contains-the-benchmark-results"], [194, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[187, "generate-plots"], [194, "generate-plots"], [196, "generate-plots"]], "Error Per Layered Gate (EPLG)": [[188, "error-per-layered-gate-eplg"]], "Inspect all the fidelities and the final EPLG": [[188, "inspect-all-the-fidelities-and-the-final-eplg"]], "Plot a visualization of the selected layers and all the DRB decays": [[188, "plot-a-visualization-of-the-selected-layers-and-all-the-drb-decays"]], "Inspect a sample circuit (parallel DRB)": [[188, "inspect-a-sample-circuit-parallel-drb"]], "IQM Benchmarks: Summary Notebook": [[189, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[189, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[189, "mirror-randomized-benchmarking"]], "CLOPS": [[189, "clops"]], "QScore": [[189, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[190, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[190, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[190, "running-the-benchmark"]], "Accessing the results": [[190, "accessing-the-results"]], "Graph State Bipartite Entanglement": [[191, "graph-state-bipartite-entanglement"]], "Graph State Configuration": [[191, "graph-state-configuration"]], "Display the maximum negativity for all qubit pairs": [[191, "display-the-maximum-negativity-for-all-qubit-pairs"]], "Inspect the available plots": [[191, "inspect-the-available-plots"]], "Display all available dataset attributes": [[191, "display-all-available-dataset-attributes"]], "If using state tomography: inspect the bootstrap bias (difference between each bootstrap mean and the measured sample)": [[191, "if-using-state-tomography-inspect-the-bootstrap-bias-difference-between-each-bootstrap-mean-and-the-measured-sample"]], "Inspect a graph state for some particular Pauli measurement": [[191, "inspect-a-graph-state-for-some-particular-pauli-measurement"]], "Compressive Gate Set Tomography (GST)": [[192, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[192, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[192, "execute-gst-experiment-s"]], "Examine the results": [[192, "examine-the-results"]], "High level results stored at result.observations": [[192, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[192, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[192, "plots"]], "Creating a custom gate set": [[192, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[192, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[192, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[193, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[193, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[193, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[193, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[193, "id1"]], "Run the experiment - 2Q gate IRB": [[193, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[193, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[193, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[194, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[194, "mirror-rb-configuration"]], "Analyze the results": [[194, "analyze-the-results"]], "Qscore Configuration": [[195, "qscore-configuration"]], "Quantum Volume (QV)": [[196, "quantum-volume-qv"]], "Quantum Volume Configuration": [[196, "quantum-volume-configuration"]], "Examples": [[197, "examples"]], "IQM Benchmarks": [[198, "iqm-benchmarks"], [200, "iqm-benchmarks"]], "Contents": [[198, "contents"]], "Indices and tables": [[198, "indices-and-tables"]], "License": [[199, "license"]], "Installation (latest release)": [[200, "installation-latest-release"]], "Optional dependencies": [[200, "optional-dependencies"]], "Development installation (latest changes)": [[200, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[200, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[200, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[200, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [34, "module-iqm.benchmarks.entanglement.graph_states"], [47, "module-iqm.benchmarks.logging_config"], [48, "module-iqm.benchmarks.optimization"], [49, "module-iqm.benchmarks.optimization.qscore"], [61, "module-iqm.benchmarks.quantum_volume"], [62, "module-iqm.benchmarks.quantum_volume.clops"], [68, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [80, "module-iqm.benchmarks.randomized_benchmarking"], [81, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [82, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [86, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"], [87, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"], [93, "module-iqm.benchmarks.randomized_benchmarking.eplg"], [94, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"], [99, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [100, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [104, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [105, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [113, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [118, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [137, "module-iqm.benchmarks.readout_mitigation"], [141, "module-iqm.benchmarks.utils"], [168, "module-iqm.benchmarks.utils_plots"], [174, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_circuits_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_circuits_per_batch"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_dd"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[34, "module-iqm.benchmarks.entanglement.graph_states"]], "graphstatebenchmark (class in iqm.benchmarks.entanglement.graph_states)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark static method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.execute"]], "generate_all_circuit_info_for_graph_state_benchmark() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.generate_all_circuit_info_for_graph_state_benchmark"]], "graphstateconfiguration (class in iqm.benchmarks.entanglement.graph_states)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration"]], "benchmark (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.benchmark"]], "model_config (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_config"]], "n_median_of_means (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_median_of_means"]], "n_random_unitaries (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_random_unitaries"]], "num_bootstraps (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.num_bootstraps"]], "qubits (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.qubits"]], "tomography (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.tomography"]], "find_edges_with_disjoint_neighbors() (in module iqm.benchmarks.entanglement.graph_states)": [[37, "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors"]], "generate_graph_state() (in module iqm.benchmarks.entanglement.graph_states)": [[38, "iqm.benchmarks.entanglement.graph_states.generate_graph_state"]], "generate_minimal_edge_layers() (in module iqm.benchmarks.entanglement.graph_states)": [[39, "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers"]], "negativity_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[40, "iqm.benchmarks.entanglement.graph_states.negativity_analysis"]], "plot_density_matrix() (in module iqm.benchmarks.entanglement.graph_states)": [[41, "iqm.benchmarks.entanglement.graph_states.plot_density_matrix"]], "plot_max_negativities() (in module iqm.benchmarks.entanglement.graph_states)": [[42, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities"]], "plot_max_negativities_graph() (in module iqm.benchmarks.entanglement.graph_states)": [[43, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph"]], "shadow_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[44, "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis"]], "state_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[45, "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis"]], "update_pauli_expectations() (in module iqm.benchmarks.entanglement.graph_states)": [[46, "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations"]], "iqm.benchmarks.logging_config": [[47, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[48, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[49, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[52, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[53, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[54, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[55, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[56, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[61, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[62, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[65, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[66, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[67, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[71, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[72, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[73, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[74, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[80, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[81, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[82, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[86, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"]], "directrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.benchmark"]], "clifford_sqg_probabilities (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.clifford_sqg_probabilities"]], "densities_2q_gates (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.densities_2q_gates"]], "depths (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.depths"]], "is_eplg (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.is_eplg"]], "model_config (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.parallel_execution"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.shots"]], "sqg_gate_ensembles (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.sqg_gate_ensembles"]], "two_qubit_gate_ensembles (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.two_qubit_gate_ensembles"]], "directrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[89, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking static method)": [[89, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.analysis_function"]], "assign_inputs_to_qubits() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.assign_inputs_to_qubits"]], "execute() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.execute"]], "submit_single_drb_job() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.submit_single_drb_job"]], "direct_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis"]], "generate_drb_circuits() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[91, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits"]], "generate_fixed_depth_parallel_drb_circuits() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[92, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[93, "module-iqm.benchmarks.randomized_benchmarking.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[94, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"]], "eplgbenchmark (class in iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[95, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[95, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark static method)": [[95, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[95, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.execute"]], "validate_custom_qubits_array() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[95, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.validate_custom_qubits_array"]], "validate_random_chain_inputs() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[95, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.validate_random_chain_inputs"]], "eplgconfiguration (class in iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration"]], "calibration_url (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.calibration_url"]], "chain_length (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.chain_length"]], "chain_path_samples (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.chain_path_samples"]], "custom_qubits_array (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.custom_qubits_array"]], "drb_circuit_samples (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.drb_circuit_samples"]], "drb_depths (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.drb_depths"]], "max_hamiltonian_path_tries (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.max_hamiltonian_path_tries"]], "model_config (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.model_config"]], "num_disjoint_layers (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[96, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.num_disjoint_layers"]], "eplg_analysis() (in module iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[97, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis"]], "plot_layered_fidelities_graph() (in module iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[98, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[100, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[101, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[102, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[102, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[102, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[102, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[104, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[105, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "clifford_sqg_probability (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.clifford_sqg_probability"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "simulation_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.simulation_method"]], "sqg_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.sqg_gate_ensemble"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[108, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[109, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[110, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[111, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[113, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[114, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[115, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[116, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[117, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[118, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[124, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[125, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[130, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[131, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[132, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[133, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[134, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[135, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[136, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[137, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[138, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[138, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[139, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[140, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[141, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.extract_fidelities"]], "generate_state_tomography_circuits() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.generate_state_tomography_circuits"]], "get_pauli_expectation() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.get_Pauli_expectation"]], "get_active_qubits() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.get_active_qubits"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[149, "iqm.benchmarks.utils.get_iqm_backend"]], "get_measurement_mapping() (in module iqm.benchmarks.utils)": [[150, "iqm.benchmarks.utils.get_measurement_mapping"]], "get_neighbors_of_edges() (in module iqm.benchmarks.utils)": [[151, "iqm.benchmarks.utils.get_neighbors_of_edges"]], "get_tomography_matrix() (in module iqm.benchmarks.utils)": [[152, "iqm.benchmarks.utils.get_tomography_matrix"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[153, "iqm.benchmarks.utils.marginal_distribution"]], "median_with_uncertainty() (in module iqm.benchmarks.utils)": [[154, "iqm.benchmarks.utils.median_with_uncertainty"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[155, "iqm.benchmarks.utils.perform_backend_transpilation"]], "random_hamiltonian_path() (in module iqm.benchmarks.utils)": [[156, "iqm.benchmarks.utils.random_hamiltonian_path"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[157, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "remove_directed_duplicates_to_list() (in module iqm.benchmarks.utils)": [[158, "iqm.benchmarks.utils.remove_directed_duplicates_to_list"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[159, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[160, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[161, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[162, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "split_into_disjoint_pairs() (in module iqm.benchmarks.utils)": [[163, "iqm.benchmarks.utils.split_into_disjoint_pairs"]], "split_sequence_in_chunks() (in module iqm.benchmarks.utils)": [[164, "iqm.benchmarks.utils.split_sequence_in_chunks"]], "submit_execute() (in module iqm.benchmarks.utils)": [[165, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[166, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[167, "iqm.benchmarks.utils.xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[168, "module-iqm.benchmarks.utils_plots"]], "graphpositions (class in iqm.benchmarks.utils_plots)": [[169, "iqm.benchmarks.utils_plots.GraphPositions"]], "create_positions() (iqm.benchmarks.utils_plots.graphpositions static method)": [[169, "iqm.benchmarks.utils_plots.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[169, "iqm.benchmarks.utils_plots.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[169, "iqm.benchmarks.utils_plots.GraphPositions.garnet_positions"]], "predefined_stations (iqm.benchmarks.utils_plots.graphpositions attribute)": [[169, "iqm.benchmarks.utils_plots.GraphPositions.predefined_stations"]], "draw_graph_edges() (in module iqm.benchmarks.utils_plots)": [[170, "iqm.benchmarks.utils_plots.draw_graph_edges"]], "evaluate_hamiltonian_paths() (in module iqm.benchmarks.utils_plots)": [[171, "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils_plots)": [[172, "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph"]], "rx_to_nx_graph() (in module iqm.benchmarks.utils_plots)": [[173, "iqm.benchmarks.utils_plots.rx_to_nx_graph"]], "iqm.benchmarks.utils_shadows": [[174, "module-iqm.benchmarks.utils_shadows"]], "cue() (in module iqm.benchmarks.utils_shadows)": [[175, "iqm.benchmarks.utils_shadows.CUE"]], "get_local_shadow() (in module iqm.benchmarks.utils_shadows)": [[176, "iqm.benchmarks.utils_shadows.get_local_shadow"]], "get_negativity() (in module iqm.benchmarks.utils_shadows)": [[177, "iqm.benchmarks.utils_shadows.get_negativity"]], "local_shadow_tomography() (in module iqm.benchmarks.utils_shadows)": [[178, "iqm.benchmarks.utils_shadows.local_shadow_tomography"]]}})