Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.entanglement.graph_states", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.direct_rb", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits", "api/iqm.benchmarks.randomized_benchmarking.eplg", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.generate_state_tomography_circuits", "api/iqm.benchmarks.utils.get_Pauli_expectation", "api/iqm.benchmarks.utils.get_active_qubits", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.get_measurement_mapping", "api/iqm.benchmarks.utils.get_neighbors_of_edges", "api/iqm.benchmarks.utils.get_tomography_matrix", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.median_with_uncertainty", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.random_hamiltonian_path", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.split_into_disjoint_pairs", "api/iqm.benchmarks.utils.split_sequence_in_chunks", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "api/iqm.benchmarks.utils_plots", "api/iqm.benchmarks.utils_plots.GraphPositions", "api/iqm.benchmarks.utils_plots.draw_graph_edges", "api/iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph", "api/iqm.benchmarks.utils_shadows", "api/iqm.benchmarks.utils_shadows.CUE", "api/iqm.benchmarks.utils_shadows.get_local_shadow", "api/iqm.benchmarks.utils_shadows.get_negativity", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_eplg", "examples/example_experiment_all", "examples/example_ghz", "examples/example_graphstate", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.entanglement.graph_states.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.rst", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers.rst", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph.rst", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.generate_state_tomography_circuits.rst", "api/iqm.benchmarks.utils.get_Pauli_expectation.rst", "api/iqm.benchmarks.utils.get_active_qubits.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.get_measurement_mapping.rst", "api/iqm.benchmarks.utils.get_neighbors_of_edges.rst", "api/iqm.benchmarks.utils.get_tomography_matrix.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.median_with_uncertainty.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.random_hamiltonian_path.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.split_into_disjoint_pairs.rst", "api/iqm.benchmarks.utils.split_sequence_in_chunks.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "api/iqm.benchmarks.utils_plots.rst", "api/iqm.benchmarks.utils_plots.GraphPositions.rst", "api/iqm.benchmarks.utils_plots.draw_graph_edges.rst", "api/iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths.rst", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph.rst", "api/iqm.benchmarks.utils_shadows.rst", "api/iqm.benchmarks.utils_shadows.CUE.rst", "api/iqm.benchmarks.utils_shadows.get_local_shadow.rst", "api/iqm.benchmarks.utils_shadows.get_negativity.rst", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_eplg.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_graphstate.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.entanglement.graph_states", "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "iqm.benchmarks.entanglement.graph_states.generate_graph_state", "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "iqm.benchmarks.entanglement.graph_states.negativity_analysis", "iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.direct_rb", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits", "iqm.benchmarks.randomized_benchmarking.eplg", "iqm.benchmarks.randomized_benchmarking.eplg.eplg", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.generate_state_tomography_circuits", "iqm.benchmarks.utils.get_Pauli_expectation", "iqm.benchmarks.utils.get_active_qubits", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.get_measurement_mapping", "iqm.benchmarks.utils.get_neighbors_of_edges", "iqm.benchmarks.utils.get_tomography_matrix", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.median_with_uncertainty", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.random_hamiltonian_path", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.remove_directed_duplicates_to_list", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.split_into_disjoint_pairs", "iqm.benchmarks.utils.split_sequence_in_chunks", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "iqm.benchmarks.utils_plots", "iqm.benchmarks.utils_plots.GraphPositions", "iqm.benchmarks.utils_plots.draw_graph_edges", "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths", "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "iqm.benchmarks.utils_plots.rx_to_nx_graph", "iqm.benchmarks.utils_shadows", "iqm.benchmarks.utils_shadows.CUE", "iqm.benchmarks.utils_shadows.get_local_shadow", "iqm.benchmarks.utils_shadows.get_negativity", "iqm.benchmarks.utils_shadows.local_shadow_tomography", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (CRB)", "Circuit Layer Operations Per Second (CLOPS)", "Error Per Layered Gate (EPLG)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Graph State Bipartite Entanglement", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 82, 125, 128, 129, 140, 146, 154, 156, 161, 174, 203, 204, 206, 207, 210, 218, 219], "python": 1, "librari": [1, 107, 120, 125, 154, 200, 211], "suit": [1, 219], "qcvv": [1, 28, 201, 217, 219], "subpackag": [1, 19, 38, 67, 80, 99, 100, 105, 112, 118, 123], "modul": [1, 5, 15, 19, 38, 66, 67, 80, 99, 100, 105, 112, 118, 123, 217], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 45, 46, 47, 48, 49, 50, 54, 55, 57, 69, 77, 82, 85, 88, 97, 103, 107, 110, 111, 114, 115, 120, 121, 125, 128, 129, 132, 133, 139, 143, 144, 145, 150, 153, 160, 161, 165, 175, 188, 190, 191, 194, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 218], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 53, 54, 55, 68, 69, 70, 81, 82, 83, 87, 88, 89, 101, 102, 103, 106, 107, 108, 113, 114, 115, 119, 120, 121, 124, 125, 126, 143, 156, 157, 187, 188, 198, 200, 201, 218, 219], "inherit": [2, 3, 5, 15, 20, 39, 53, 68, 81, 87, 101, 106, 113, 119, 124, 156, 187], "benchmarkbas": [2, 4, 219], "abc": [2, 3, 5, 6, 20, 39, 53, 68, 81, 87, 101, 106, 113, 119, 124], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 53, 55, 68, 70, 81, 83, 87, 89, 101, 102, 106, 107, 113, 115, 119, 120, 124, 125, 219], "pydant": [2, 4, 20, 22, 39, 41, 53, 55, 68, 70, 81, 83, 87, 89, 101, 102, 106, 107, 113, 115, 119, 120, 124, 125], "main": [2, 7, 8, 20, 21, 39, 53, 68, 81, 87, 101, 106, 113, 119, 124, 203], "basemodel": [2, 4, 20, 39, 53, 68, 81, 87, 101, 106, 113, 119, 124], "backend": [3, 6, 20, 21, 22, 23, 25, 29, 40, 41, 48, 54, 57, 60, 61, 62, 63, 64, 69, 77, 82, 83, 88, 89, 97, 103, 108, 110, 111, 114, 115, 117, 121, 126, 128, 129, 139, 143, 144, 151, 152, 154, 155, 157, 158, 159, 163, 164, 168, 174, 176, 180, 181, 184, 189, 190, 192, 198, 201, 209, 219], "iqmbackendbas": [3, 6, 21, 40, 54, 57, 69, 82, 88, 103, 108, 110, 111, 114, 121, 126, 128, 129, 139, 143, 144, 145, 151, 152, 154, 155, 158, 163, 168, 174, 180, 184, 190], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 54, 55, 69, 70, 82, 83, 88, 89, 96, 102, 103, 107, 108, 114, 115, 120, 121, 125, 126, 198, 218, 219], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 43, 50, 54, 55, 69, 70, 72, 82, 83, 88, 89, 102, 103, 107, 108, 114, 115, 120, 121, 125, 126, 137, 157, 188, 198, 199, 203, 204, 218], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 69, 70, 73, 79, 82, 83, 85, 88, 89, 91, 92, 94, 95, 102, 103, 107, 108, 109, 111, 114, 115, 116, 117, 120, 121, 125, 126, 127, 128, 138, 139, 149, 153, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 182, 183, 184, 185, 188, 189, 191, 192, 197, 203, 204, 205, 209, 210, 211, 215, 216, 218, 219], "implement": [3, 5, 6, 40, 41, 44, 209], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 40, 41, 50, 52, 54, 69, 76, 82, 86, 88, 90, 91, 92, 95, 96, 102, 103, 107, 108, 114, 120, 121, 126, 143, 149, 151, 152, 157, 165, 170, 171, 178, 179, 198, 201, 203, 204, 205, 208, 209, 212, 214, 215, 216, 218, 219], "from": [3, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 48, 50, 51, 56, 65, 73, 79, 85, 86, 88, 90, 95, 97, 115, 125, 127, 135, 149, 150, 153, 157, 159, 161, 164, 166, 167, 168, 169, 171, 175, 177, 178, 179, 180, 186, 189, 190, 191, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 48, 51, 55, 58, 69, 70, 78, 80, 82, 83, 84, 88, 98, 102, 103, 104, 107, 110, 111, 120, 121, 122, 125, 126, 128, 129, 131, 139, 143, 149, 153, 157, 164, 197, 203, 204, 206, 209, 210, 211, 218, 219], "thei": [3, 17, 32, 211], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 43, 54, 55, 69, 70, 82, 83, 88, 89, 102, 103, 107, 108, 110, 111, 114, 115, 120, 121, 125, 126, 128, 129, 157, 174, 188, 198, 203, 204, 208, 209, 211, 215], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 206, 207, 208, 209, 211], "abstract": [3, 6, 211], "classmethod": [3, 6, 7], "name": [3, 6, 7, 8, 16, 17, 18, 22, 23, 24, 52, 60, 61, 62, 63, 64, 77, 85, 97, 107, 117, 120, 125, 135, 142, 143, 159, 164, 165, 168, 188, 189, 191, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 218], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 108, 109, 110, 111, 114, 116, 117, 121, 122, 126, 127, 128, 129, 130, 131, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 50, 54, 55, 63, 64, 67, 69, 77, 80, 82, 83, 88, 89, 90, 97, 102, 103, 107, 108, 114, 120, 121, 125, 126, 127, 140, 146, 151, 152, 153, 174, 176, 184, 185, 186, 198, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 218, 219], "full": [3, 19, 20, 22, 83, 89, 211, 219], "given": [3, 6, 7, 11, 22, 30, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 57, 62, 63, 64, 67, 69, 70, 75, 80, 82, 88, 95, 96, 117, 118, 127, 144, 145, 166, 170, 171, 175, 181, 183, 188, 189, 195, 196, 203, 204, 209, 211, 219], "static": [3, 6, 21, 40, 54, 69, 82, 88, 103, 108, 114, 121, 126, 188], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 43, 44, 54, 55, 57, 60, 61, 62, 63, 64, 65, 70, 72, 73, 74, 77, 79, 82, 83, 85, 86, 88, 89, 90, 93, 94, 95, 97, 102, 103, 107, 108, 110, 111, 114, 115, 117, 120, 121, 125, 126, 127, 128, 129, 139, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 168, 171, 172, 173, 174, 176, 178, 179, 184, 186, 188, 189, 190, 191, 195, 197, 200, 201, 203, 208, 209, 211, 213, 215], "check": [3, 25, 76, 96, 200, 203, 204, 209], "whether": [3, 4, 22, 41, 55, 70, 76, 77, 79, 82, 83, 88, 89, 96, 97, 102, 107, 111, 120, 144, 149, 150, 153, 161, 165, 174, 195, 197, 209, 212, 218], "requir": [3, 70, 165, 200, 209, 211, 218, 219], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 40, 41, 50, 51, 65, 88, 89, 114, 129, 149, 155, 165, 166, 169, 171, 172, 191, 197, 198, 200, 203, 204, 206, 209, 211, 216, 218, 219], "met": 3, "valid": [3, 24, 114, 154, 155, 217, 219], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 54, 55, 58, 60, 61, 62, 63, 64, 65, 70, 73, 82, 83, 86, 88, 89, 90, 93, 94, 95, 102, 107, 108, 110, 111, 115, 117, 120, 125, 126, 128, 129, 138, 139, 143, 144, 145, 147, 151, 152, 158, 159, 161, 163, 165, 166, 169, 171, 172, 173, 181, 184, 186, 188, 189, 190, 195, 197, 205, 207, 208, 211, 212], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 211, 218], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 28, 30, 41, 48, 51, 55, 60, 61, 62, 70, 77, 82, 83, 88, 89, 102, 107, 110, 111, 115, 117, 120, 125, 128, 129, 133, 138, 139, 142, 143, 144, 145, 147, 149, 151, 152, 154, 157, 161, 165, 174, 176, 178, 184, 188, 189, 191, 195, 197, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 219], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 54, 55, 69, 70, 82, 83, 88, 89, 102, 103, 107, 108, 114, 115, 120, 121, 125, 126, 185, 188, 207, 211, 215, 218], "shot": [4, 22, 41, 55, 61, 62, 70, 83, 88, 89, 102, 107, 115, 120, 125, 151, 152, 157, 158, 184, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 74, 75, 77, 79, 82, 83, 85, 88, 89, 90, 93, 96, 97, 102, 107, 108, 110, 111, 115, 117, 120, 125, 126, 127, 128, 129, 130, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 157, 158, 161, 162, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 194, 195, 196, 197, 207, 209, 211], "256": [4, 55, 70, 83, 89, 102, 107, 115, 120, 125, 205, 208, 213], "max_gates_per_batch": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 151, 152, 184, 203, 204, 205, 207, 208, 210, 213, 215, 219], "max_circuits_per_batch": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 151, 152, 184, 198, 207, 210, 219], "calset_id": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 151, 152, 184, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 219], "routing_method": [4, 22, 41, 55, 70, 83, 89, 102, 107, 110, 111, 115, 120, 125, 128, 129, 174, 203, 204, 205, 207, 208, 210, 213, 215, 219], "liter": [4, 22, 41, 55, 60, 61, 62, 70, 83, 89, 102, 107, 110, 111, 115, 120, 125, 128, 129, 166, 180, 188, 195, 197], "basic": [4, 22, 41, 55, 70, 83, 89, 102, 107, 110, 111, 115, 120, 125, 128, 129], "lookahead": [4, 22, 41, 55, 70, 83, 89, 102, 107, 110, 111, 115, 120, 125], "stochast": [4, 22, 41, 55, 70, 83, 89, 102, 107, 110, 111, 115, 120, 125], "sabr": [4, 22, 41, 55, 70, 83, 89, 102, 107, 110, 111, 115, 120, 125, 174, 203, 204, 205, 208, 209, 211, 215, 219], "physical_layout": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 180, 203, 204, 205, 207, 208, 210, 213, 215, 219], "fix": [4, 22, 29, 41, 55, 70, 83, 89, 102, 107, 108, 115, 120, 125, 126, 128, 144, 151, 153, 180, 198, 203, 204, 205, 208, 211, 215, 219], "batch": [4, 17, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 151, 152, 180, 181, 184, 198, 205, 207, 208, 209, 210, 211, 212, 213, 215, 219], "use_dd": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 207, 210], "bool": [4, 22, 27, 41, 55, 70, 76, 77, 79, 82, 83, 88, 89, 96, 97, 102, 107, 111, 115, 120, 125, 149, 150, 153, 157, 161, 165, 174, 189], "fals": [4, 22, 27, 41, 55, 70, 83, 89, 97, 102, 107, 111, 115, 120, 125, 149, 150, 153, 157, 161, 174, 189, 203, 205, 207, 208, 215], "dd_strategi": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 207, 210], "ddstrategi": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 55, 60, 61, 62, 67, 69, 70, 72, 74, 75, 77, 79, 80, 83, 88, 89, 96, 97, 99, 102, 107, 108, 110, 111, 115, 120, 125, 126, 127, 128, 129, 130, 139, 140, 143, 144, 145, 146, 151, 152, 157, 158, 161, 162, 163, 173, 175, 176, 182, 184, 189, 190, 196, 197, 203, 204, 208, 209, 211], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 43, 44, 48, 50, 51, 52, 55, 57, 60, 61, 62, 63, 64, 66, 70, 77, 79, 82, 83, 89, 107, 111, 117, 125, 127, 142, 149, 157, 159, 165, 184, 191, 195, 197, 198, 200, 201, 203, 204, 209, 211, 212, 216, 218], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 57, 69, 70, 73, 80, 82, 83, 88, 89, 90, 93, 96, 97, 102, 103, 107, 108, 110, 111, 114, 115, 120, 121, 125, 126, 127, 128, 129, 130, 138, 139, 140, 143, 144, 145, 146, 151, 152, 154, 157, 158, 162, 163, 165, 167, 169, 174, 176, 181, 184, 186, 197, 198, 200, 201, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217], "default": [4, 6, 12, 22, 27, 30, 41, 55, 60, 61, 62, 70, 83, 88, 89, 97, 102, 107, 110, 111, 115, 120, 125, 128, 129, 139, 145, 149, 150, 153, 157, 161, 165, 180, 184, 189, 195, 197, 203, 205, 208, 211, 212, 214], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 45, 48, 50, 52, 55, 60, 61, 62, 65, 69, 70, 76, 78, 79, 82, 83, 84, 88, 89, 96, 97, 98, 102, 103, 104, 107, 110, 111, 115, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 139, 147, 149, 150, 153, 154, 157, 161, 164, 165, 166, 174, 180, 184, 189, 191, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "2": [4, 22, 23, 24, 28, 51, 70, 76, 89, 96, 107, 111, 115, 125, 144, 150, 162, 182, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219], "8": [4, 22, 150, 182, 200, 203, 204, 205, 207, 208, 209, 210, 212, 213, 215, 218, 219], "maximum": [4, 31, 61, 62, 63, 64, 79, 115, 151, 152, 184, 190, 198, 203, 204, 211], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 45, 49, 50, 51, 58, 70, 80, 82, 83, 89, 99, 100, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 125, 128, 129, 138, 139, 142, 143, 144, 145, 147, 149, 151, 152, 154, 162, 163, 165, 174, 184, 190, 191, 195, 197, 198, 203, 209, 213, 216, 217, 219], "per": [4, 22, 60, 61, 62, 80, 83, 89, 102, 107, 111, 112, 113, 125, 127, 128, 129, 130, 151, 152, 157, 158, 184, 196, 198, 211, 216, 217, 219], "option": [4, 20, 41, 51, 60, 61, 62, 70, 77, 88, 89, 107, 108, 110, 115, 117, 120, 125, 128, 129, 138, 139, 142, 144, 145, 147, 149, 151, 152, 154, 161, 165, 174, 176, 178, 184, 188, 189, 195, 197, 198, 201, 207, 208, 210, 211, 217], "calibr": [4, 6, 41, 51, 88, 89, 115, 151, 152, 157, 158, 164, 184, 190, 191, 198, 207, 208, 209, 212, 214], "id": [4, 184, 206, 208, 212, 214], "last": [4, 22], "avail": [4, 33, 218, 219], "qiskit": [4, 6, 22, 29, 70, 83, 89, 107, 110, 111, 120, 125, 128, 129, 154, 174, 184, 198, 200, 201, 203, 211], "rout": [4, 83, 89, 107, 110, 111, 125, 128, 129, 174, 208, 209, 211, 215], "transpil": [4, 16, 21, 40, 41, 43, 44, 70, 82, 83, 89, 107, 110, 111, 125, 128, 129, 143, 144, 154, 158, 163, 174, 181, 198, 201, 203, 206, 208, 209, 211, 215], "physic": [4, 22, 24, 30, 41, 55, 70, 82, 83, 88, 89, 93, 107, 111, 120, 125, 128, 180, 208, 211, 215, 217], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 52, 55, 62, 70, 82, 83, 88, 89, 107, 108, 111, 117, 125, 126, 151, 152, 159, 164, 174, 180, 188, 191, 198, 203, 204, 208, 209, 211, 213, 215], "constrain": [4, 180, 219], "dure": [4, 13, 23, 54, 88, 103, 121, 210], "select": [4, 22, 41, 70, 89, 95, 115, 191, 198, 209, 211], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 72, 73, 79, 80, 82, 83, 88, 89, 93, 97, 99, 102, 103, 107, 108, 110, 111, 114, 115, 117, 120, 125, 126, 127, 128, 129, 139, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 157, 159, 162, 164, 165, 167, 169, 174, 176, 180, 181, 184, 189, 191, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 66, 159, 203, 211], "allow": [4, 198, 203, 204, 209, 219], "ani": [4, 8, 22, 23, 27, 43, 44, 54, 63, 64, 86, 88, 108, 120, 126, 130, 149, 151, 152, 158, 179, 183, 200, 218, 219], "other": [4, 21, 27, 41, 165, 184, 197, 198, 203, 204, 206, 218, 219], "accord": [4, 27, 40, 46, 47, 69, 107, 139, 180, 181, 190, 200, 208, 211, 215], "final": [4, 6, 32, 51, 83, 88, 89, 93, 107, 111, 125, 169, 174, 180, 181, 184, 203], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 43, 60, 61, 62, 69, 72, 82, 83, 88, 89, 93, 102, 107, 110, 111, 120, 125, 153, 158, 163, 165, 166, 169, 180, 181, 184, 197, 201, 203, 204, 209, 211], "boolean": [4, 41, 209], "flag": [4, 41, 189], "determin": [4, 22, 41, 218], "enabl": [4, 182, 184, 198], "dynam": [4, 184, 198], "decoupl": [4, 184, 198], "model_config": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "classvar": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "configdict": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "model": [4, 22, 27, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125, 142, 148, 149, 203, 211], "should": [4, 6, 8, 10, 22, 40, 41, 48, 55, 65, 66, 70, 83, 89, 102, 107, 115, 120, 125, 144, 184, 198, 208, 209, 211, 218], "conform": [4, 22, 28, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "config": [4, 22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "thi": [5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 48, 52, 76, 83, 96, 115, 150, 159, 188, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 216, 218, 219], "defin": [5, 6, 7, 24, 25, 48, 50, 83, 143, 189, 201, 203, 204, 209, 218, 219], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 53, 54, 59, 65, 68, 69, 73, 78, 81, 82, 84, 87, 88, 98, 101, 103, 104, 106, 108, 109, 113, 114, 116, 119, 121, 122, 124, 126, 131, 132, 134, 135, 137, 138, 141, 142, 148, 150, 156, 160, 184, 185, 187, 193, 198, 211], "benchmarkobservationidentifi": [5, 8, 35, 198, 205, 208, 212, 215], "benchmarkobserv": [5, 7, 35, 52, 63, 64, 198, 205, 208, 212, 215], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 42, 54, 59, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 114, 116, 121, 122, 126, 131, 198], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 42, 54, 59, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 114, 116, 121, 122, 126, 131, 198], "kwarg": 6, "A": [6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 69, 78, 82, 84, 86, 88, 94, 95, 98, 103, 104, 107, 108, 110, 111, 117, 125, 126, 128, 129, 131, 138, 139, 142, 144, 145, 151, 152, 161, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 180, 182, 183, 184, 186, 188, 189, 190, 196, 203, 209, 211, 218, 219], "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 42, 54, 59, 69, 73, 78, 82, 83, 84, 88, 98, 103, 104, 108, 109, 114, 116, 121, 122, 126, 131, 198, 201, 203, 204, 208, 211, 216, 219], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 52, 54, 59, 60, 61, 62, 63, 64, 69, 77, 78, 82, 84, 85, 88, 89, 91, 92, 98, 103, 104, 107, 111, 117, 121, 122, 126, 131, 141, 148, 149, 153, 155, 165, 189, 208, 216], "In": [6, 107, 203, 204, 207, 211, 218, 219], "order": [6, 22, 27, 51, 52, 142, 150, 164, 165, 198, 207, 209, 219], "write": [6, 157, 200, 201, 218], "new": [6, 7, 11, 176, 198, 201, 203, 204, 211, 219], "recommend": [6, 211, 218, 219], "deriv": [6, 218], "baseclass": 6, "addition": [6, 209], "custom": [6, 70, 89, 114, 115, 203, 204, 208, 214, 215, 219], "analysi": [6, 7, 12, 21, 22, 26, 34, 54, 59, 63, 64, 69, 78, 82, 84, 85, 88, 98, 103, 104, 108, 109, 114, 116, 121, 122, 126, 131, 198, 203, 211], "can": [6, 10, 16, 22, 30, 32, 41, 58, 67, 69, 80, 88, 107, 159, 164, 198, 203, 204, 206, 207, 209, 211, 215, 219], "give": [6, 21, 73, 182, 198, 203, 209, 211, 218], "pointer": 6, "analysis_funct": [6, 21, 40, 54, 69, 82, 88, 103, 108, 114, 121, 126, 201], "field": [6, 218], "accept": [6, 22, 77, 198, 218], "analysisresult": [6, 7, 40, 42, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 114, 116, 121, 122, 126, 131, 198, 201], "its": [6, 117, 135, 176, 198, 203, 204, 218], "input": [6, 11, 24, 56, 65, 83, 89, 108, 114, 130, 150, 154, 155, 159, 170, 173, 175, 180, 182, 183, 196, 208, 211], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 52, 67, 69, 72, 78, 79, 80, 82, 84, 88, 89, 96, 97, 98, 103, 104, 108, 109, 114, 116, 121, 122, 126, 131, 140, 146, 148, 180, 184, 198, 201, 203, 204, 208, 215, 218, 219], "onli": [6, 12, 23, 83, 89, 107, 176, 196, 203, 204, 206, 209, 211, 213, 218], "pass": [6, 12, 130, 152, 159, 174, 184, 201, 207, 208], "through": [6, 12, 44, 218], "iqmbackend": [6, 88, 108, 126, 151, 152], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 52, 54, 63, 64, 69, 82, 85, 88, 103, 108, 114, 121, 126, 132, 134, 149, 186, 198, 201, 205, 207, 208, 211, 212, 215], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 42, 43, 69, 82, 111, 115, 121, 122, 150, 154, 158, 159, 166, 175, 189, 194, 198, 200, 201, 203, 204, 209, 211, 218, 219], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 43, 54, 69, 82, 88, 103, 108, 114, 121, 126, 186, 198, 201], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 42, 43, 44, 52, 54, 63, 64, 65, 108, 126, 139, 151, 152, 164, 176, 188, 191, 198, 203, 204, 211, 215, 216, 218, 219], "inform": [6, 10, 51, 54, 66, 191, 218], "necessari": [6, 196, 203, 209, 219], "analys": 6, "calibration_set_id": [6, 207, 210], "uuid": 6, "calibrationsetid": 6, "latest": [6, 184, 209, 217], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 56, 70, 83, 88, 89, 128, 130, 136, 139, 149, 163, 166, 170, 180, 184, 200, 203, 204, 209, 210, 212, 216, 217, 219], "runresult": [6, 7, 10, 40, 42, 69, 78, 82, 84, 88, 98, 103, 104, 121, 122, 126, 131, 198, 201], "analyz": [6, 10, 40, 42, 162, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 219], "run_index": [6, 208, 215], "1": [6, 22, 33, 55, 70, 74, 95, 107, 110, 111, 125, 128, 129, 139, 141, 144, 150, 165, 174, 195, 196, 197, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "intern": [6, 17], "perform": [6, 21, 33, 63, 64, 70, 83, 89, 142, 153, 165, 174, 197, 203, 211, 216, 218, 219], "make": [6, 88, 184, 198, 199, 203, 217, 218, 219], "shallow": 6, "copi": [6, 161, 200, 211, 218], "produc": [6, 20, 24, 31, 33, 51, 89, 211, 219], "therefor": [6, 76, 96], "chang": [6, 22, 198, 217, 218], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 43, 51, 60, 63, 64, 85, 97, 115, 133, 136, 142, 148, 157, 164, 190, 191, 201, 208, 209, 211, 215], "just": [6, 203], "structur": [6, 110, 203, 204], "arrai": [6, 20, 27, 29, 31, 33, 37, 82, 102, 107, 111, 114, 115, 120, 125, 149, 150, 155, 159, 195, 211], "index": [6, 40, 48, 50, 51, 82, 88, 107, 128, 215, 217], "construct": [6, 19, 41, 45, 195], "updat": [6, 21, 34, 63, 64, 65, 82, 83, 198, 203, 204, 208, 219], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 42, 52, 60, 61, 62, 63, 64, 97, 117, 149, 187, 191, 198, 201, 203, 204, 205, 208, 209, 212, 219], "dict": [7, 11, 22, 23, 24, 43, 44, 54, 58, 60, 61, 62, 63, 64, 65, 72, 73, 79, 82, 85, 86, 88, 90, 93, 94, 95, 107, 108, 110, 111, 117, 125, 126, 127, 128, 129, 138, 139, 140, 143, 144, 145, 146, 147, 149, 151, 152, 153, 158, 159, 161, 163, 165, 166, 169, 171, 172, 173, 178, 179, 181, 184, 186, 188, 189, 190, 195, 197, 201], "matplotlib": [7, 28, 191, 201, 203, 204, 210, 211], "figur": [7, 14, 28, 31, 32, 33, 52, 60, 61, 62, 77, 85, 97, 117, 149, 189, 191, 201, 207, 208, 210, 211], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 42, 52, 63, 64, 85, 149, 173, 198, 203, 204, 205, 207, 208, 209, 210, 212, 214, 215], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 43, 44, 48, 50, 51, 52, 56, 57, 58, 63, 64, 69, 71, 72, 73, 75, 77, 79, 82, 83, 88, 90, 91, 92, 93, 94, 96, 97, 107, 108, 110, 111, 125, 126, 127, 128, 129, 130, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 167, 170, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 197, 198, 200, 204, 207, 209, 210, 211, 215, 218, 219], "object": [7, 8, 9, 10, 16, 17, 18, 24, 27, 28, 35, 40, 42, 52, 88, 108, 126, 133, 151, 152, 168, 178, 179, 184, 188, 189, 191, 211, 215, 218], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 52, 188, 198, 206, 219], "consist": [7, 19, 198, 209, 218], "map": [7, 21, 41, 48, 51, 58, 63, 64, 72, 73, 83, 89, 169, 174, 177, 180, 181, 188, 189, 192, 198, 209], "kei": [7, 60, 61, 62, 65, 72, 79, 82, 88, 93, 107, 110, 111, 117, 125, 128, 129, 139, 163, 165, 166, 169, 171, 172, 173, 181, 184, 190, 197, 200, 207, 210, 211, 215], "valu": [7, 8, 22, 36, 40, 41, 44, 48, 58, 60, 61, 62, 65, 72, 73, 79, 82, 83, 107, 110, 111, 117, 125, 128, 129, 139, 141, 150, 163, 165, 166, 169, 172, 173, 174, 181, 184, 190, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215], "pair": [7, 36, 49, 51, 54, 58, 60, 61, 62, 63, 64, 82, 115, 117, 155, 164, 170, 177, 182, 203, 207], "plot_nam": 7, "plot_al": [7, 201, 203, 204, 206, 207, 208, 209, 211, 214, 215], "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 48, 49, 69, 73, 78, 82, 84, 88, 98, 103, 104, 121, 122, 126, 131, 191, 199, 201, 219], "identifi": [8, 9, 11, 27, 35, 54, 88, 108, 126, 142, 149, 151, 152, 154, 178, 184, 186, 198, 203, 205, 207, 208, 209, 210, 211, 212, 215, 218], "uncertainti": [8, 22, 36, 44, 60, 61, 62, 117, 173, 205, 207, 208, 209, 210, 211, 212, 213, 215], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 52, 55, 70, 71, 82, 83, 88, 89, 111, 134, 139, 166, 184, 194, 198, 203, 204, 211, 219], "string": [8, 9, 11, 17, 18, 27, 30, 36, 65, 153, 165, 166, 171, 178, 195, 207, 219], "qubit_indic": [9, 16, 205, 207, 208, 210, 212, 215], "eas": 9, "indic": [9, 61, 62, 63, 64, 88, 93, 117, 172, 181, 188, 189, 191, 195, 209, 218], "wa": [9, 25, 32, 61, 62, 76, 96, 153, 203, 204, 218], "properti": [9, 16, 17], "string_identifi": [9, 203, 208, 209, 211], "version": [9, 132, 200, 203, 204, 218, 219], "enough": [10, 209], "those": [10, 88, 93, 180, 203, 204, 211, 218], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 42, 65, 72, 73, 79, 88, 90, 127, 140, 146, 153, 158, 159, 161, 163, 166, 172, 178, 179, 186, 195, 198, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215], "add": [11, 17, 21, 40, 50, 54, 69, 82, 88, 103, 108, 114, 121, 126, 139, 185, 198, 200, 218, 219], "job": [11, 82, 86, 88, 108, 126, 151, 152, 178, 201, 205, 206, 207, 208, 212, 213, 215], "If": [11, 22, 27, 33, 41, 70, 107, 111, 114, 115, 125, 147, 153, 166, 171, 191, 197, 203, 204, 207, 209, 211, 213, 218], "same": [11, 17, 51, 125, 164, 203, 204, 208, 209, 211, 218], "alreadi": [11, 205], "present": 11, "old": 11, "both": [11, 21, 89, 147, 203, 206, 207, 212, 219], "ad": [11, 198, 205, 206, 207, 208, 210, 212, 213, 215], "togeth": [11, 219], "bitstr": [11, 65, 72, 73, 74, 79, 95, 153, 166, 172], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 82, 157, 164, 209, 211, 219], "instanc": [11, 16, 17, 21, 34, 43, 44, 62, 77, 117, 198, 211], "xr": [11, 13, 32, 40, 43, 44, 52, 54, 63, 64, 69, 82, 85, 88, 103, 108, 114, 121, 126, 149, 186, 201], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 129, 169, 191, 198, 203, 204, 209, 211, 218], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 48, 50, 57, 148, 182, 209], "size": [13, 22, 28, 41, 48, 67, 69, 77, 79, 147, 182, 183, 194, 201, 203, 208, 214, 219], "dateset": 13, "fig": [14, 52, 201, 209], "show": [14, 191, 201, 203, 204, 206, 208, 209], "close": [14, 22, 201], "easili": [15, 198, 219], "interact": [15, 198], "quantum": [15, 21, 22, 23, 24, 40, 41, 43, 45, 46, 47, 48, 49, 69, 80, 82, 83, 87, 88, 89, 90, 93, 96, 98, 128, 139, 140, 144, 145, 146, 157, 158, 162, 163, 165, 167, 169, 174, 176, 184, 188, 191, 197, 198, 207, 209, 211, 216, 217, 219], "circuitgroup": [15, 16, 40, 198], "benchmarkcircuit": [15, 18, 21, 198], "circuit_group": [16, 207, 210], "group": [16, 17, 63, 64, 103, 199, 203, 207, 210, 217], "purpos": [16, 17, 218], "typic": [16, 17, 203, 204], "repres": [16, 17, 23, 28, 57, 58, 85, 97, 170, 172, 175, 177, 191, 218], "exampl": [16, 132, 182, 198, 199, 201, 202, 209, 211, 217, 218, 219], "insid": [16, 198], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 135, 166, 168, 208, 211, 213], "desir": [16, 17, 21, 175], "doe": [16, 41, 218], "exist": [16, 18, 198, 203, 204, 219], "group_nam": [16, 207], "integ": [16, 17, 22, 24, 41, 57, 58, 88, 93, 128, 170, 177, 182], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 21, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 44, 48, 56, 60, 61, 62, 63, 64, 72, 73, 77, 79, 82, 83, 85, 88, 93, 97, 107, 108, 115, 117, 126, 142, 143, 144, 145, 147, 149, 151, 158, 164, 174, 175, 181, 182, 184, 188, 189, 190, 197], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 43, 44, 48, 50, 51, 52, 191, 203, 208, 209, 211], "qiskit_iqm": [17, 41, 198, 201, 203, 204, 207, 208, 210], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 45, 46, 47, 48, 49, 82, 88, 93, 126, 128, 129, 138, 139, 143, 144, 145, 147, 151, 152, 154, 158, 162, 163, 165, 167, 169, 174, 176, 181, 184, 198], "It": [17, 107, 115, 200, 203, 204, 219], "common": [17, 137, 218], "activ": [17, 167, 176, 197, 219], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 218, 219], "found": [17, 164, 203, 204, 209, 210, 219], "benchmark_circuit": [18, 207, 210], "get_benchmark_circuits_by_nam": [18, 207], "request": 18, "otherwis": [18, 218], "compress": [19, 20, 21, 22, 26, 34, 198, 216, 217, 219], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 198, 216, 217], "self": [19, 21, 145, 201], "character": [19, 21, 203, 217], "process": [19, 20, 27, 89, 203, 204, 205, 207, 208, 212, 213, 215], "matric": [19, 31, 210, 211], "well": [19, 21, 33, 34], "parametr": [19, 27, 73, 80, 82, 83, 203, 204, 208, 211], "state": [19, 22, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 61, 62, 64, 140, 146, 165, 198, 201, 211, 216, 217, 218, 219], "povm": [19, 27, 31, 37, 211], "low": [19, 211], "rank": [19, 22, 31, 33, 198, 211], "matrix": [19, 20, 31, 60, 130, 171, 194, 196, 200, 203, 204], "reduc": [19, 22, 41, 176], "post": [19, 89, 205, 207, 208, 212, 213, 215], "overhead": 19, "tomographi": [20, 26, 55, 60, 61, 62, 63, 64, 165, 193, 197, 216, 217, 219], "follow": [20, 111, 203, 204, 207, 209, 211, 218, 219], "step": 20, "said": 20, "convers": [20, 218], "ideal": [20, 90, 127, 203, 204, 210], "numpi": [20, 29, 31, 33, 161, 195, 197, 200, 203, 204, 207, 208, 211, 212], "mgst": [20, 22, 29, 36, 37, 198, 211, 218, 219], "first": [20, 22, 27, 37, 50, 69, 82, 107, 125, 209, 211, 213, 215, 216], "estim": [20, 22, 27, 31, 33, 37, 38, 40, 41, 43, 44, 54, 55, 67, 69, 83, 88, 103, 105, 108, 112, 114, 117, 121, 123, 126, 127, 153, 166, 198, 203, 204, 208, 209, 212], "gaug": [20, 31, 33, 211], "optim": [20, 22, 31, 33, 41, 82, 83, 89, 107, 110, 111, 125, 128, 129, 174, 198, 203, 204, 208, 209, 211, 214, 215, 219], "target": [20, 22, 27, 33, 37, 57, 174, 211], "pygsti": [20, 27], "rerun": [20, 209], "bootstrap": [20, 22, 27, 32, 33, 55, 61, 62, 161, 198, 211], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 43, 70, 88, 89, 94, 112, 113, 115, 149, 159, 191, 198, 203, 208, 209, 211, 216, 217, 219], "bar": [20, 27, 32, 33, 149, 201, 206, 211], "tabl": [20, 22, 28, 31, 32, 33, 203, 211], "reconstruct": [20, 22, 27, 37, 171, 210, 211], "compressivegst": [20, 22, 211], "benchmark_definit": [20, 22, 39, 41, 53, 55, 68, 70, 81, 83, 87, 89, 101, 102, 106, 107, 113, 115, 119, 120, 124, 125, 201], "gstconfigur": [20, 21, 24, 211], "spam": [21, 27, 32, 35, 203], "robust": [21, 203], "generate_meas_circuit": 21, "random": [21, 22, 40, 41, 55, 60, 61, 62, 70, 82, 99, 101, 106, 107, 108, 111, 115, 119, 120, 124, 125, 129, 137, 139, 144, 145, 161, 175, 194, 195, 197, 198, 200, 204, 209, 211, 214, 216, 217, 219], "distribut": [21, 94, 95, 172, 200, 203, 204, 218], "among": [21, 111, 184, 203, 219], "differ": [21, 24, 27, 40, 85, 125, 188, 203, 206, 209, 211, 215, 216, 218, 219], "depth": [21, 22, 41, 45, 46, 47, 48, 57, 70, 88, 97, 107, 108, 110, 111, 115, 125, 126, 128, 129, 141, 144, 148, 151, 153, 203, 204, 205, 207, 208, 209, 212, 213], "rang": [21, 186, 198, 200, 201, 203, 204, 205, 208, 210, 211, 212, 213, 219], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41, 203, 204, 209, 213, 219], "need": [21, 22, 28, 40, 82, 159, 203, 204, 207, 209, 211, 219], "axactli": 21, "describ": [21, 218], "meaning": [21, 67, 69, 80, 88, 89], "untranspiled_circuit": 21, "untranspil": [21, 88, 93, 110, 111, 143, 174, 198], "circuit_gen_transp_tim": 21, "float": [21, 22, 28, 36, 51, 60, 61, 62, 63, 64, 65, 69, 71, 72, 74, 75, 76, 77, 79, 82, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 107, 110, 111, 117, 120, 125, 127, 128, 129, 139, 140, 141, 142, 146, 149, 153, 154, 157, 159, 163, 164, 166, 171, 172, 173, 188, 196], "time": [21, 22, 27, 82, 85, 86, 88, 108, 126, 151, 152, 185, 198, 203, 204, 206, 208, 209, 211], "took": 21, "transpiled_circuit": [21, 152, 158, 207], "add_configuration_to_dataset": [21, 40], "metadata": [21, 40, 52, 54, 69, 82, 86, 88, 103, 108, 114, 121, 126, 179], "sourc": [21, 211, 217, 218], "further": [21, 40, 198], "storag": [21, 40, 198], "routin": [21, 28, 40, 41, 70, 89, 142], "1024": [22, 41], "iqm_client": [22, 41, 55, 70, 83, 89, 102, 107, 115, 120, 125], "gate_set": [22, 23, 24, 211], "num_circuit": [22, 27, 37, 83, 89, 203, 204, 206, 208, 211, 215, 219], "gate_label": [22, 211], "14": [22, 200, 204, 205, 206, 207, 208, 210, 212, 213, 219], "from_init": 22, "true": [22, 27, 41, 43, 70, 83, 88, 89, 107, 111, 149, 153, 165, 174, 200, 203, 204, 207, 208, 209, 211, 212, 214, 215, 219], "max_init": 22, "20": [22, 115, 200, 201, 205, 207, 208, 212], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 82, 150, 165, 171, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "0": [22, 40, 48, 50, 51, 69, 76, 89, 107, 110, 125, 128, 129, 139, 150, 174, 180, 182, 196, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "0001": [22, 201], "batch_siz": 22, "bootstrap_sampl": [22, 211], "test": [22, 198, 203, 204, 219], "parallel_execut": [22, 102, 107, 120, 203, 205, 207, 208, 212, 219], "ghzbenchmark": [22, 39, 41, 203, 204, 208, 209], "sequenc": [22, 29, 41, 55, 56, 57, 60, 70, 83, 88, 89, 102, 107, 108, 110, 111, 115, 120, 125, 126, 127, 139, 140, 143, 144, 145, 146, 151, 165, 170, 173, 174, 180, 182, 183, 189, 195, 197, 203, 205, 208, 211, 212], "e": [22, 23, 24, 27, 37, 41, 107, 120, 125, 150, 153, 165, 166, 186, 198, 203, 204, 206, 208, 209, 211, 215], "g": [22, 41, 107, 120, 125, 150, 153, 165, 175, 186, 198, 200, 203, 204, 208, 209, 211, 215], "specifi": [22, 23, 24, 27, 37, 41, 56, 83, 88, 89, 107, 108, 110, 111, 115, 120, 125, 126, 128, 129, 139, 147, 151, 152, 155, 163, 166, 170, 171, 172, 180, 182, 184, 195, 198, 203, 204, 207, 213, 219], "label": [22, 23, 24, 28, 30, 41, 60, 61, 62, 65, 83, 97, 117, 120, 128, 138, 145, 149, 165, 166, 174, 180, 195, 197, 198, 200, 201, 203, 206, 209], "meant": [22, 24, 41], "either": [22, 107, 142, 147, 159, 163, 164, 172, 188, 195, 197, 200, 209, 211, 218, 219], "cirucuit": 22, "one": [22, 83, 115, 150, 153, 201, 203, 204, 209, 211, 213, 218, 219], "predefin": [22, 23, 188, 191, 209, 211], "1qxyi": [22, 211], "2qxycz": [22, 211], "2qxycz_extend": [22, 211], "3qxycz": [22, 211], "tomograph": [22, 171], "complet": 22, "mean": [22, 55, 60, 61, 62, 76, 153, 163, 191, 200, 203, 204, 211, 218], "vacuum": 22, "abl": [22, 207], "prepar": [22, 37, 40, 57, 110, 165, 194, 197, 201, 203, 209, 211, 218], "form": [22, 139, 207, 218], "frame": [22, 211], "space": [22, 153], "practic": [22, 219], "suffici": [22, 196, 209], "condit": [22, 76, 96, 196, 209, 218], "combin": [22, 30, 203, 204, 218], "local": [22, 55, 195, 197, 209], "pauli": [22, 30, 33, 65, 125, 127, 128, 129, 130, 165, 166, 171, 200, 211], "eigenst": 22, "union": [22, 159, 211, 218], "quantumcircuit": [22, 23, 24, 40, 45, 46, 47, 48, 49, 57, 69, 82, 88, 93, 108, 110, 111, 126, 129, 138, 139, 143, 144, 145, 151, 152, 158, 162, 165, 167, 169, 174, 176, 181, 184, 195, 197, 198, 200, 201, 211], "how": [22, 40, 199, 202, 211, 216, 217, 218, 219], "mani": [22, 40, 82, 198, 209], "guidelin": [22, 198], "choos": [22, 30, 41, 69, 204, 209, 218], "At": 22, "least": [22, 89, 203, 204, 211, 218], "50": [22, 55, 201, 203, 204, 207, 208, 210, 211, 212, 213, 218], "3": [22, 41, 70, 83, 89, 96, 107, 150, 182, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "400": [22, 200, 205, 208, 210], "two": [22, 107, 111, 125, 139, 200, 201, 203, 209, 211], "6": [22, 31, 150, 200, 205, 207, 208, 209, 210, 212, 213, 218, 219], "2000": [22, 204, 211], "three": [22, 203, 204], "9": [22, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 218, 219], "expect": [22, 65, 72, 73, 79, 107, 110, 111, 125, 128, 129, 139, 166, 171, 198, 203], "grow": 22, "linearli": [22, 41], "exponenti": [22, 141, 203], "krau": [22, 27, 31, 33, 37, 211], "coher": [22, 40, 41, 43, 203, 204, 208, 209], "dim": 22, "control": [22, 28, 209, 218], "maxim": [22, 49, 203, 204], "middl": 22, "cutoff": 22, "below": [22, 107, 203, 204, 209, 211, 218, 219], "possibl": [22, 41, 175, 209, 215, 218], "algorithm": [22, 37, 41, 50, 139, 191, 203, 204, 209], "point": [22, 149, 173, 209], "tri": [22, 115, 190], "limit": [22, 200, 218], "amount": [22, 38, 55, 185, 186, 198], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 218], "newton": 22, "respect": [22, 41, 60, 107, 110, 125, 127, 165, 190, 198, 203], "automat": [22, 32, 125, 128, 129, 207, 209, 219], "iter": [22, 159, 172], "while": [22, 157, 209, 211, 218], "second": [22, 27, 37, 80, 82, 107, 216, 217], "when": [22, 89, 198, 203, 206, 209, 219], "termin": [22, 218, 219], "multipli": [22, 74], "cost": [22, 203, 204], "threshold": [22, 76, 77, 89, 96, 97, 203, 204], "nois": [22, 203], "consid": [22, 83, 89, 115, 180, 195], "success": [22, 76, 96, 203, 204], "10": [22, 83, 115, 153, 190, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219], "usual": [22, 33], "sensibl": 22, "rel": 22, "between": [22, 49, 50, 129, 150, 157, 191, 203, 204, 206, 209], "consecut": [22, 41], "1e": [22, 211], "hyperparamt": 22, "converg": [22, 211], "behaviour": 22, "smaller": [22, 40, 41, 48, 203, 219], "runtim": [22, 198], "lead": [22, 198, 209, 211], "errat": 22, "jump": 22, "lack": 22, "repeat": [22, 203, 204], "fake": [22, 198], "via": [22, 40, 41, 203, 204, 209, 211], "parallel": [22, 41, 50, 58, 80, 102, 107, 111, 115, 120, 144, 151, 153, 162, 198, 203, 204, 208, 209, 212], "num_qubit": [23, 24, 44, 45, 46, 47, 49, 69, 70, 88, 127, 140, 146, 204, 207, 210], "correspond": [23, 30, 58, 60, 61, 62, 65, 69, 78, 80, 82, 83, 84, 88, 93, 97, 98, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 125, 126, 127, 128, 129, 131, 139, 149, 153, 158, 165, 181, 184, 190, 192, 197, 198, 203, 204, 205, 207, 208, 209, 210, 212, 213, 215], "assign": [23, 82, 83, 107, 108, 115, 125, 161, 165, 197, 198, 203, 204, 206, 208], "transipil": 23, "so": [23, 32, 198, 203, 204, 211], "stage": [23, 198], "mai": [23, 200, 203, 204, 206, 218], "actual": [23, 203, 204], "gate_labels_dict": [23, 24], "rx_pi_2": [23, 24], "pi": [23, 24, 200, 208, 212], "rotat": [23, 24, 33, 200, 201], "around": [23, 24, 203, 204], "x": [23, 24, 27, 37, 55, 74, 134, 136, 149, 165, 166, 188, 194, 198, 200, 201, 207, 210, 211, 213, 215], "axi": [23, 24, 27, 37, 149, 198], "num_gat": [23, 24], "handl": [24, 219], "variabl": [24, 54, 69, 82, 88, 103, 108, 114, 121, 126, 142, 201, 209, 211, 219], "correct": [25, 97, 127, 157, 158, 198, 203, 204, 211], "properli": [25, 31, 33, 35, 203, 204], "rais": [25, 114, 115, 130, 139, 147, 155, 157, 166, 171, 174, 180, 197], "code": [26, 203, 204, 211, 217, 218, 219], "y": [27, 29, 37, 165, 166, 188, 200], "ndarrai": [27, 29, 31, 33, 37, 60, 82, 141, 142, 148, 171, 194, 195, 196, 197], "k": [27, 37, 200, 203, 204, 206, 213, 215], "rho": [27, 37, 196, 211], "target_mdl": 27, "resampl": [27, 161], "outcom": [27, 29, 37, 158, 203, 204, 211], "comput": [27, 33, 40, 42, 48, 72, 73, 88, 90, 91, 92, 94, 138, 140, 146, 172, 173, 191, 196, 200, 203, 204, 207, 209, 211, 217, 218, 219], "each": [27, 29, 37, 50, 52, 58, 61, 62, 77, 91, 92, 93, 97, 107, 117, 120, 125, 127, 129, 133, 150, 153, 158, 163, 164, 191, 195, 197, 205, 207, 208, 209, 211, 212, 213, 218, 219], "repetit": 27, "newli": 27, "sampl": [27, 40, 55, 60, 61, 62, 73, 79, 89, 95, 107, 110, 111, 114, 115, 120, 125, 127, 128, 129, 130, 139, 143, 144, 145, 161, 211], "non": [27, 32, 35, 56, 141, 203, 204, 218], "corresp": 27, "probabl": [27, 29, 37, 91, 92, 94, 95, 107, 110, 111, 125, 128, 129, 139, 140, 146, 153, 172, 203, 204, 213, 219], "save": [27, 28, 32, 211], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 218], "oper": [27, 33, 37, 80, 99, 154, 163, 198, 200, 209, 211, 216, 217], "enumer": [27, 37, 209, 210, 211], "3d": [27, 31, 33, 211], "cpt": [27, 37], "superoper": [27, 37, 211], "standard": [27, 28, 30, 31, 33, 37, 77, 89, 92, 101, 149, 163, 198, 211, 219], "basi": [27, 30, 33, 37, 154, 174, 200, 203, 204, 211, 218], "stack": [27, 37], "els": [27, 200, 207], "x_arrai": 27, "tensor": [27, 198], "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40, 203, 204], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 200, 205, 207, 208, 210, 211, 212, 213, 215], "turn": [28, 29, 31, 32, 33, 203], "panda": [28, 31, 32, 33, 35], "file": [28, 198, 218, 219], "row": 28, "cell": [28, 203, 204], "width": [28, 198, 203, 204, 209], "font": [28, 210], "text": [28, 203, 204, 211, 218], "obtain": [29, 200, 203, 204, 218, 219], "format": [29, 31, 32, 33, 35, 36, 203, 218], "2d": [29, 31], "j": [29, 200, 203, 204, 209, 211], "column": 29, "pdim": 30, "dimens": [30, 201, 211], "like": [30, 35, 159, 200, 203, 204, 206, 219], "ii": [30, 200, 201, 218], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": [31, 115], "them": [31, 33, 50, 58, 201, 219], "after": [31, 33, 144, 219], "conta": 31, "element": [31, 69], "densiti": [31, 60, 107, 110, 111, 125, 128, 129, 139, 149, 171, 196, 203, 204, 210], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 42, 43, 44, 50, 51, 52, 83, 99, 100, 103, 105, 108, 112, 114, 115, 117, 118, 121, 123, 126, 127, 142, 149, 164, 190, 191, 198, 211, 216, 217, 219], "etc": [31, 33, 206], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 159, 198, 207, 209, 211, 215, 218, 219], "metric": [32, 33, 83, 203, 204, 211, 212], "fit": [32, 35, 120, 132, 133, 134, 136, 141, 142, 148, 149, 198, 211, 218], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 77, 85, 161, 189, 198, 203, 204, 206, 208, 209, 218], "hamiltonian": [33, 115, 175, 190, 198, 211], "diamond": [33, 211], "distanc": [33, 41, 50, 211], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 130, 192, 200], "high": [35, 41, 203, 204, 209], "level": [35, 41, 70, 83, 89, 107, 110, 111, 125, 128, 129, 198, 203, 204, 208, 209, 215], "simpl": [35, 201, 203, 219], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 198, 216, 217, 219], "verifi": [38, 154, 200], "greenberg": [38, 40, 203, 204, 216, 217], "horn": [38, 40, 203, 204, 216, 217], "zeiling": [38, 40, 203, 204, 216, 217], "graph": [38, 48, 50, 51, 53, 54, 55, 56, 57, 59, 62, 69, 70, 71, 72, 73, 74, 76, 77, 79, 117, 170, 175, 188, 189, 190, 191, 192, 198, 203, 204, 209, 216, 217, 219], "bipartit": [38, 54, 198, 216, 217, 219], "nativ": [38, 40, 51, 54, 57, 111, 114, 144, 145, 147, 154, 163, 165, 195, 197, 198, 203], "ghzconfigur": [39, 40, 203, 204, 208, 209], "generate_native_ghz": 40, "qubit_count": [40, 41], "topologi": [40, 164, 174, 176, 180, 188, 191, 198, 203], "subset": [40, 43, 44, 48, 50, 51, 58], "system": [40, 41, 43, 44, 48, 50, 51, 147, 157, 203, 204, 211, 218, 219], "protocol": [40, 43, 44, 48, 50, 51, 203, 204, 216], "equal": [40, 48, 88, 198, 203, 204], "generate_coherence_meas_circuit": 40, "take": [40, 41, 174, 185, 198, 203, 204, 211, 219], "output": [40, 66, 90, 91, 92, 93, 94, 95, 96, 150, 157, 182, 198, 200, 203, 204, 207, 211, 215, 219], "mult": 40, "q": [40, 67, 69, 70, 76, 107, 208, 211, 216, 217, 219], "qc_list_transpil": 40, "append_rm": 40, "num_rm": [40, 41, 209], "append": [40, 82, 197, 200, 201, 211], "1q": [40, 107, 110, 111, 125, 128, 129, 139, 147, 195, 197, 198, 203], "clifford": [40, 100, 101, 102, 103, 104, 107, 110, 111, 119, 120, 121, 125, 128, 129, 138, 139, 143, 144, 145, 147, 154, 155, 195, 197, 198, 199, 207, 212, 216, 217, 219], "uniformli": [40, 107, 110, 111, 125, 128, 129, 139, 203], "param": [40, 45, 46, 47, 49, 82, 91, 103, 121, 130, 134, 136, 138, 140, 151, 152, 155, 172, 178, 179, 196], "origin": [40, 56, 88, 93, 161, 174, 176, 218], "generate_readout_circuit": 40, "creation": [40, 209], "all_circuits_list": 40, "state_generation_routin": [41, 203, 204, 208, 209], "tree": [41, 48, 50, 203, 208, 209], "custom_qubits_arrai": [41, 69, 70, 89, 115, 198, 203, 204, 207, 208, 209, 214, 215, 219], "qiskit_optim_level": [41, 70, 83, 89, 107, 110, 111, 125, 128, 129, 174, 203, 204, 207, 208, 213, 215, 219], "optimize_sqg": [41, 70, 82, 83, 89, 174, 203, 204, 208, 215, 219], "fidelity_routin": [41, 203, 204, 208, 209], "100": [41, 55, 83, 89, 161, 203, 204, 206, 207, 208, 210, 211, 214, 219], "rem": [41, 43, 70, 89, 97, 158, 198, 203, 204, 208, 209, 214, 215, 219], "mit_shot": [41, 70, 88, 89, 158, 203, 204, 208, 209, 214, 215, 219], "1000": [41, 70, 89, 158, 201, 203, 204, 208, 209, 211, 214, 215], "cal_url": [41, 164, 191, 207, 209], "log": [41, 46, 47, 48, 50, 209], "coupl": [41, 48, 51, 58, 83, 89, 164, 174, 177, 180, 189, 192, 203, 209], "cz": [41, 49, 50, 51, 111, 144, 163, 164, 174, 195, 197, 200, 203, 209], "account": [41, 70, 174, 211, 219], "span": [41, 48, 50], "largest": [41, 203, 204, 209], "weight": [41, 50, 51, 95], "applic": [41, 50, 139, 200, 209, 218], "cx": [41, 45, 50, 82], "scale": [41, 203, 204], "logarithm": [41, 209], "connect": [41, 50, 155, 191, 198, 209], "naiv": [41, 70, 209], "appli": [41, 45, 50, 58, 82, 89, 198, 208, 209, 213, 218], "textbook": [41, 209], "assum": [41, 52, 150, 166, 218], "NOT": 41, "support": [41, 51, 218], "denot": 41, "provid": [41, 75, 188, 199, 201, 202, 203, 204, 207, 208, 209, 210, 218], "here": [41, 127, 201, 203, 204, 211], "ha": [41, 70, 150, 203, 204, 205, 211, 213, 218, 219], "small": [41, 198], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 43, 55, 111, 132, 198, 203, 204, 209], "moonei": [41, 43, 203, 204, 209], "2021": [41, 43, 203, 204, 209, 219], "randomized_measur": [41, 209], "outlin": 41, "http": [41, 44, 46, 47, 132, 173, 200, 201, 207, 208, 209, 210, 211, 218, 219], "arxiv": [41, 44, 46, 47, 83, 111, 139, 200, 209, 219], "org": [41, 44, 46, 47, 200, 209, 211, 218], "ab": [41, 44, 46, 47, 200, 209, 210], "1812": [41, 44], "02624": [41, 44], "chosen": [41, 70, 203, 204, 209, 211], "readout": [41, 43, 70, 88, 89, 94, 156, 157, 159, 198, 208, 209], "mitig": [41, 43, 70, 88, 89, 94, 156, 157, 158, 159, 198, 208, 209], "total": [41, 55, 115, 136, 200, 203, 204, 206, 209], "url": [41, 115, 164, 190, 191, 203, 204, 207, 219], "retriev": [41, 82, 86, 115, 178, 179, 186, 190, 191, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215], "priorit": 41, "ideal_prob": 44, "cross": [44, 203, 204, 218], "correl": [44, 209], "rm": [44, 197], "eq": [44, 200], "34": [44, 201, 205, 207, 208, 210, 215], "hadamard": [45, 200], "seri": 45, "linear": [45, 115, 189, 207], "fashion": 45, "symmetr": 45, "halv": 45, "1807": [46, 209], "05572": [46, 209], "2101": [47, 209], "08946": [47, 209], "n_state": [48, 203], "networkx": [48, 50, 51, 69, 71, 72, 73, 74, 175, 192, 203, 204], "n": [48, 70, 103, 126, 171, 175, 190, 194, 200, 203, 204, 207, 209, 210], "participating_qubit": 48, "qc": [48, 82, 165, 167, 197, 200, 201, 219], "move": [49, 198], "calcul": [50, 71, 77, 93, 136, 162, 185, 198, 203, 204], "cx_map": 50, "particip": 50, "2qb": 50, "subgraph": 50, "edg": [50, 51, 56, 58, 72, 73, 74, 139, 170, 175, 177, 189, 190, 191, 198, 203, 204, 207, 209], "Then": [50, 219], "find": [50, 56, 115, 203, 204, 209], "most": [50, 211], "central": 50, "posit": [50, 188, 191], "next": 50, "start": [50, 69, 150, 203, 208, 209, 211, 219], "smallest": 50, "layer": [50, 58, 71, 75, 79, 80, 82, 83, 88, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 123, 125, 126, 128, 129, 139, 151, 162, 189, 198, 208, 216, 217, 219], "coupling_map": [51, 174, 203, 204, 207, 210], "couplingmap": [51, 58, 62, 117, 177, 180, 189, 192], "edges_c": 51, "fidelities_c": 51, "have": [51, 144, 166, 203, 204, 218, 219], "wai": [51, 164, 198, 203, 204], "v": [52, 77, 82, 84, 203, 204, 208, 212], "user": [52, 206, 207, 210, 219], "identif": [52, 218], "graphstatebenchmark": [53, 55, 210], "graphstateconfigur": [53, 54, 210], "backend_arg": [54, 69, 82, 88, 103, 108, 110, 111, 114, 121, 126, 128, 129, 139, 143, 144, 145, 151, 152, 154, 155, 158, 163, 190], "entangel": 54, "neg": [54, 60, 61, 62, 63, 64, 196, 198], "add_all_meta_to_dataset": [54, 69, 82, 88, 108, 114, 121, 126], "add_all_circuits_to_dataset": [54, 88, 103, 121], "generate_all_circuit_info_for_graph_state_benchmark": 54, "associ": [54, 95, 208, 218], "disjoint": [54, 115, 182, 189, 207], "neighbor": [54, 56, 60, 63, 64, 170, 210], "project": [54, 60, 65, 95, 219], "node": [54, 56, 58, 70, 72, 73, 77, 79, 170, 175, 188, 191, 203, 204, 209, 214], "cover": 54, "state_tomographi": [55, 60, 61, 62, 210], "shadow_tomographi": [55, 60, 61, 62], "num_bootstrap": [55, 61, 62, 210], "n_random_unitari": [55, 210], "n_median_of_mean": [55, 210], "shadow": [55, 61, 62, 63, 193, 195, 197], "haar": [55, 194, 195, 197], "unitari": [55, 194, 195, 197, 203, 204, 211], "over": [55, 96, 157, 172, 203], "median": [55, 60, 61, 62, 173, 203, 204], "nb": [55, 166, 196, 203, 205, 206, 208], "call": [55, 157, 198], "factor": [55, 206], "overlap": [56, 58, 198], "cp_map": [58, 177], "sort": [58, 150, 181, 207, 213, 215], "arrang": 58, "being": [58, 60, 76, 82, 88, 93, 96, 97, 107, 110, 111, 125, 127, 128, 129, 139, 140, 146, 163, 165, 171, 172, 184, 190, 197, 203, 204], "item": [58, 203, 210], "2q": [58, 107, 110, 111, 112, 114, 115, 128, 129, 139, 147, 149, 190, 203, 208], "qubit_pair": 60, "backend_nam": [60, 61, 63, 64, 77, 97, 205, 207, 210, 213, 215], "timestamp": [60, 61, 62, 63, 64, 77, 97, 117, 189, 205, 213], "num_rm_sampl": [60, 61, 62], "num_moms_sampl": [60, 61, 62], "np": [60, 82, 141, 148, 171, 194, 195, 196, 197, 200, 203, 204, 207, 208, 209, 210, 211, 212], "gather": 60, "qubit_nam": [61, 62, 117, 189, 207, 210], "num_shot": [61, 62, 83, 203, 204, 206, 208], "max": [61, 62, 70, 182, 203, 204, 210, 219], "backend_coupling_map": [62, 117, 189, 192, 207], "station": [62, 115, 117, 189, 191, 201, 207, 219], "won": 62, "t": [62, 198, 210, 218], "displai": [62, 198, 200, 203, 204, 205, 207, 208, 211, 212, 218], "titl": [62, 149, 218], "all_qubit_pairs_per_group": [63, 64], "all_qubit_neighbors_per_group": [63, 64], "all_unprojected_qubit": [63, 64, 210], "execution_timestamp": [63, 64, 205, 207, 210, 213, 215], "experiment": [63, 64], "unproject": [63, 64], "pauli_expect": [65, 171], "projected_count": 65, "nonid_pauli_label": 65, "helper": [65, 150], "outermost": [65, 163], "innermost": 65, "ident": [65, 200], "infer": [65, 203], "z": [65, 166, 174], "instead": [65, 198, 219], "logger": [66, 185], "everi": 66, "warn": [66, 200, 203, 204, 207, 210], "score": [67, 69, 70, 76, 208, 216, 217, 219], "combinatori": [67, 69, 203, 204], "problem": [67, 69, 71, 72, 73, 74, 76, 77, 203, 204, 219], "qscorebenchmark": [68, 70, 203, 204, 208, 214], "qscoreconfigur": [68, 69, 203, 204, 208, 214], "generate_maxcut_ansatz": 69, "theta": 69, "ansatz": [69, 71, 73, 75, 79], "qaoa": [69, 70, 71, 75, 79], "maxcut": [69, 71, 72, 73, 74, 75, 79, 203, 204, 208], "end": [69, 82, 88, 200, 218], "variat": [69, 203, 204], "gamma": [69, 71], "beta": [69, 71, 76, 77, 203, 204, 208], "choose_qubits_na": 69, "sequenti": [69, 107, 152, 205, 208], "choose_qubits_custom": 69, "match": [69, 209], "num_inst": [70, 77, 203, 204, 208, 214], "num_qaoa_lay": [70, 203, 204, 208, 214], "min_num_nod": [70, 203, 204, 208, 214], "max_num_nod": [70, 203, 204, 208, 214], "use_virtual_nod": [70, 77, 203, 204, 208, 214], "use_classically_optimized_angl": [70, 77, 203, 204, 208, 214], "choose_qubits_routin": [70, 89, 203, 204, 208, 214, 215, 219], "min_num_qubit": 70, "seed": [70, 203, 204, 208, 214], "min": [70, 157, 203, 204], "taken": [70, 203, 204], "increas": [70, 150, 165, 211], "potenti": 70, "pre": 70, "optimis": 70, "tune": 70, "minumum": 70, "virtual_nod": [70, 72, 73, 79], "upon": [70, 83, 89], "angl": [71, 75, 77, 79], "qubit_to_nod": [72, 73], "val": 72, "virtual": [72, 73, 77, 79, 174], "cut": [72, 73, 74, 79, 203, 204], "avg": [72, 208, 211], "callabl": [73, 142, 148], "minu": [74, 115], "sign": 74, "solut": [74, 203, 204], "obj": 74, "num_lay": 75, "approximation_ratio": 76, "approxim": [76, 77, 203, 204, 208], "ratio": [76, 77, 203, 204, 208], "abov": [76, 96, 203, 204, 211, 218], "beta_ratio": 77, "beta_std": 77, "deviat": [77, 89, 92, 149, 163], "classic": [77, 79, 88, 165, 166, 169, 197], "graph_phys": 79, "qubit_nod": 79, "use_classical_angl": 79, "qaoa_lay": 79, "solv": [79, 203, 204], "averag": [79, 91, 96, 97, 103, 121, 123, 127, 142, 198, 203, 204, 211], "presenc": 79, "volum": [80, 87, 88, 89, 98, 198, 216, 217, 219], "reflect": [80, 82, 88, 99, 100, 118], "deepest": [80, 88], "clop": [80, 198, 216, 217, 219], "speed": [80, 82, 203, 204], "clops_v": [80, 208], "qv": [80, 82, 83, 88, 89, 91, 92, 96, 97, 198, 203, 204, 208, 216, 217], "clops_h": [80, 83, 208], "squar": [80, 203, 204, 211], "clopsbenchmark": [81, 83, 203, 204, 206, 208], "clopsconfigur": [81, 82, 203, 204, 206, 208], "h": [82, 84], "append_parameterized_unitari": 82, "q0": 82, "q1": 82, "decompos": [82, 203], "su": 82, "involv": [82, 203, 204], "belong": [82, 111, 153], "generate_single_circuit": [82, 88], "generate_circuit_list": [82, 88], "generate_random_paramet": 82, "templat": [82, 203, 204, 206, 208], "float64": 82, "assign_random_parameters_to_al": 82, "dict_parametrized_circ": 82, "clops_cycl": 82, "sorted_transpiled_qc_list": [82, 88, 184], "cycl": 82, "elaps": [82, 85, 86, 185, 206, 208], "submiss": [82, 88, 108, 126, 151, 152, 203, 204, 206, 218], "generate_transpiled_clops_templ": 82, "num_upd": [83, 203, 204, 206, 208], "clops_h_bool": [83, 208], "establish": [83, 208], "By": [83, 206, 208], "definit": [83, 203, 204, 206, 208, 218], "2110": [83, 219], "14108": [83, 219], "quant": [83, 139, 219], "ph": [83, 139, 219], "rigor": [83, 211], "loos": 83, "www": [83, 200, 218], "ibm": [83, 157], "com": [83, 173, 207, 209, 210], "blog": 83, "restrict": [83, 89, 180, 208, 215], "clops_data": 85, "job_meta": 86, "quantumvolumebenchmark": [87, 89, 203, 204, 208, 215], "quantumvolumeconfigur": [87, 88, 203, 204, 208, 215, 219], "classical_permut": 88, "permut": 88, "avoid": 88, "swap": [88, 200], "get_rem_quasidistro": 88, "sorted_qc_list_indic": [88, 93], "execution_result": [88, 90], "quasicollect": [88, 94, 158], "quasiprob": [88, 94, 158, 159], "qubii": 88, "submit_single_qv_job": 88, "submit": [88, 108, 126, 151, 152, 184, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218], "organ": [88, 184], "vanilla": [88, 97, 126, 151, 152], "dd": [88, 97, 126, 151, 152], "num_sigma": [89, 96, 97, 203, 204, 208, 215, 219], "criteria": [89, 114], "consensu": 89, "unmitig": 89, "1_000": [89, 203, 204, 208, 215, 219], "ideal_heavy_output": [90, 94], "hop": [90, 91, 92, 96, 97, 198], "heavi": [90, 91, 92, 93, 94, 95, 96, 203, 204], "cumul": [91, 92], "individu": [91, 92, 149, 195, 198, 203, 209, 211, 218, 219], "trial": [91, 92], "qc_list": [93, 174], "bitrstr": 93, "all_rem_quasidistro": 94, "noiseless": [94, 208, 210, 215], "onto": 95, "heavy_output_prob": [96, 215], "within": [96, 189, 218, 219], "sigma": [96, 97], "qv_result": [97, 203, 204, 215], "qv_results_typ": [97, 215], "in_volumetr": 97, "plot_rem": 97, "come": [97, 127, 159, 166], "context": 97, "volumetr": 97, "rb": [100, 102, 103, 104, 105, 107, 108, 109, 110, 118, 120, 121, 122, 123, 125, 126, 140, 141, 142, 144, 146, 148, 149, 152, 153, 155, 198, 200, 203, 205, 207, 208, 212], "cliffordrandomizedbenchmark": [101, 102, 203, 205, 208], "cliffordrbconfigur": [101, 103, 203, 205, 208], "qubits_arrai": [102, 107, 111, 120, 125, 144, 149, 151, 153, 155, 203, 205, 207, 208, 212, 213, 219], "sequence_length": [102, 120, 143, 144, 203, 205, 208, 212, 219], "num_circuit_sampl": [102, 107, 111, 120, 125, 143, 203, 205, 207, 208, 212, 213, 219], "length": [102, 115, 120, 127, 130, 143, 144, 145, 200, 203, 205, 208, 212], "add_all_metadata_to_dataset": 103, "direct": [105, 106, 107, 108, 109, 110, 207, 218], "canon": [105, 108, 110, 111, 126, 128, 129, 151], "directrandomizedbenchmark": [106, 107], "directrbconfigur": [106, 108], "is_eplg": [107, 111, 149, 189, 207], "two_qubit_gate_ensembl": [107, 110, 125, 128, 129, 139, 207, 208, 213, 219], "densities_2q_g": [107, 207], "clifford_sqg_prob": [107, 110, 125, 128, 129, 139, 207], "sqg_gate_ensembl": [107, 110, 125, 128, 129, 139, 207], "drb": [107, 108, 109, 110, 111, 114, 115, 116], "regist": [107, 150, 153, 165, 166, 197], "case": [107, 203, 204], "done": [107, 198, 200, 206], "eplg": [107, 111, 149, 189, 198, 216, 217], "subroutin": 107, "overrid": 107, "czgate": [107, 120, 125, 200, 203, 208, 211, 212, 213, 219], "5": [107, 150, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 218, 219], "igat": 107, "mrb": [107, 108, 125, 126, 128, 131, 142, 149, 151, 152, 198, 208, 216, 217], "ensembl": [107, 111, 123, 125, 126, 139, 149, 194], "cxgate": [107, 125], "len": [107, 125, 200, 203, 204, 211], "25": [107, 110, 125, 128, 129, 139, 203, 205, 207, 208, 210, 212, 213, 215, 219], "leav": 107, "uniform": 107, "assign_inputs_to_qubit": 108, "submit_single_drb_job": 108, "sorted_transpiled_circuit_dict": [108, 126, 151], "circ_sampl": [110, 128, 207], "density_2q_g": [110, 125, 128, 129, 139, 208, 213, 219], "stabil": [110, 125, 128, 129, 138, 145, 198], "randomli": 110, "assigned_density_2q_g": 111, "assigned_two_qubit_gate_ensembl": 111, "assigned_clifford_sqg_prob": 111, "assigned_sqg_gate_ensembl": 111, "cliffords_1q": [111, 144, 195, 197], "cliffords_2q": [111, 144], "pattern": 111, "barrier": [111, 163, 200, 201], "taylor": 111, "2311": [111, 219], "05933": [111, 219], "interleav": [111, 118, 119, 120, 121, 122, 125, 129, 141, 142, 143, 144, 145, 149, 198, 205, 216, 217, 219], "invers": [111, 138, 203], "term": [111, 144, 166, 195, 197, 200, 211, 218], "r": [111, 144, 163, 174, 195, 197, 200, 210, 211], "simultan": [111, 120, 142], "eplgbenchmark": [113, 115, 207], "eplgconfigur": [113, 114, 207], "validate_custom_qubits_arrai": 114, "validate_random_chain_input": 114, "chain": [114, 115, 189, 207], "valueerror": [114, 130, 139, 147, 155, 166, 171, 174, 180, 197], "beyond": 114, "drb_depth": [115, 207], "drb_circuit_sampl": [115, 207], "chain_length": [115, 207], "chain_path_sampl": [115, 207], "num_disjoint_lay": [115, 207], "max_hamiltonian_path_tri": [115, 207], "calibration_url": [115, 207], "proce": 115, "highest": [115, 210], "path": [115, 157, 175, 190], "must": [115, 188, 203, 204, 218, 219], "eplg_estim": 117, "interleavedrandomizedbenchmark": [119, 120, 203, 208, 212], "interleavedrbconfigur": [119, 121, 203, 208, 212, 219], "interleaved_g": [120, 143, 144, 145, 149, 203, 208, 212, 219], "interleaved_gate_param": [120, 203, 208, 212, 219], "simultaneous_fit": [120, 203, 208, 212, 219], "amplitud": [120, 141, 203, 208, 212, 219], "offset": [120, 141, 203, 208, 212, 219], "irb": [120, 142, 198, 216, 217], "ygate": 120, "enter": [120, 142, 144], "specif": [121, 174, 200, 202, 203, 204, 208, 211, 215, 216, 218], "mirror": [123, 124, 125, 126, 129, 198, 216, 217, 219], "mirrorrandomizedbenchmark": [124, 125, 208, 213, 219], "mirrorrbconfigur": [124, 126, 208, 213, 219], "depths_arrai": [125, 208, 213, 219], "num_pauli_sampl": [125, 127, 130, 208, 213, 219], "simulation_method": [125, 128, 129], "statevector": [125, 128, 129], "extended_stabil": [125, 128, 129], "matrix_product_st": [125, 128, 129], "aer": [125, 128, 129], "simul": [125, 127, 128, 129, 157, 198, 208, 213, 215], "submit_single_mrb_job": 126, "noisy_count": 127, "ideal_count": 127, "num_circ_sampl": [127, 130, 145], "polar": [127, 142], "noisi": 127, "rescal": 127, "few": [127, 203, 204, 209], "effect": [127, 150, 203, 204], "real": [127, 219], "pauli_samples_per_circ": [128, 129], "dress": [128, 129, 130], "input_list": 130, "flat": 130, "shape": 130, "lmfit": [132, 133, 142], "extend": [132, 198], "shown": [132, 203, 204, 209, 210, 211], "document": [132, 184, 203, 204, 218, 219], "github": [132, 219], "io": 132, "py": [132, 207, 210, 219], "example_fit_multi_dataset": 132, "html": [132, 173, 219], "sphx": 132, "glr": 132, "multi": [132, 203, 204], "func": [133, 134, 135, 136, 142, 148], "initial_guess": 133, "constraint": [133, 219], "simultaneously_fit_var": 133, "line": 133, "evalu": [134, 190, 203, 204], "signatur": 135, "residu": 136, "sever": [136, 198, 203, 204, 206], "techniqu": 137, "qc_inv": 138, "clifford_dictionari": 138, "invert": 138, "de": [138, 145], "qubit_set": [139, 142], "n_layer": 139, "grab": [139, 157], "see": [139, 184, 198, 200, 203, 209, 211, 218], "2204": 139, "07568": 139, "subsequ": [139, 218], "do": [139, 157, 212, 218], "up": [139, 203, 219], "uniti": 139, "ground": [140, 146, 201], "depolarization_prob": 141, "depolar": 141, "p": [141, 203], "decai": [141, 149, 198, 203], "rb_identifi": 142, "simultaneous_fit_var": 142, "interleaved_gate_str": 142, "0th": 142, "ap": [142, 211], "m": [142, 203, 204, 205, 208, 210, 212, 213, 219], "b": [142, 196, 200, 203, 218], "stdrb": 142, "clifford_dict": [143, 145], "fir": 143, "num_sampl": [144, 145], "befor": [144, 203], "seq_length": 145, "system_s": 147, "import": [147, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219], "load": [147, 205, 206], "1q_dict": 147, "2q_dict": 147, "fit_paramet": 148, "fit_data": 148, "minimizerresult": 148, "violin": 149, "scatter": 149, "shade_stdev": 149, "shade_meanerror": 149, "logscal": 149, "mrb_2q_densiti": 149, "mrb_2q_ensembl": 149, "shade": 149, "arr": 150, "separate_regist": [150, 153], "reversed_arr": 150, "relabel": 150, "increasingli": 150, "zero": [150, 198, 203, 204], "7": [150, 200, 203, 205, 207, 208, 209, 210, 212, 213, 218, 219], "note": [150, 159, 196, 198, 209, 211, 219], "clbit": [150, 153], "were": [150, 153, 186, 198], "separ": [150, 153, 157, 198, 215, 218], "skip": 150, "sublist": 150, "revers": [150, 207], "circuit_compilation_opt": [152, 184], "circuitcompilationopt": [152, 184], "compil": [152, 184, 198, 203, 206, 211, 218], "submit_execut": 152, "margin": [153, 157, 172], "surviv": [153, 203], "bit": [153, 169, 172, 195], "00": [153, 203, 204, 207, 208, 210, 211, 213, 215], "anoth": [153, 201], "gate_id": 154, "gate_param": 154, "m3": [156, 157, 158], "modif": [156, 218], "qpu": [156, 198, 203], "m3iqm": [156, 159], "mthree": [156, 159], "m3mitig": [156, 157], "iter_threshold": 157, "4096": 157, "modifi": [157, 198, 203, 204, 218], "work": [157, 159, 203, 204, 218, 219], "devic": [157, 198, 203, 204, 217, 219], "cals_from_system": 157, "initial_reset": 157, "rep_delai": 157, "cals_fil": 157, "async_c": 157, "cal_id": 157, "array_lik": 157, "1e4": 157, "max_shot": 157, "balanc": 157, "hardwar": [157, 206, 217], "independ": [157, 203], "reset": 157, "begin": [157, 200], "delai": 157, "json": [157, 211], "async": 157, "thread": 157, "m3error": 157, "progress": 157, "against": [158, 218], "mit": [159, 218], "processor": [159, 203, 204], "argument": [159, 198, 209, 219], "util": [159, 187, 193, 198, 209, 210], "final_measurement_map": 159, "qubit_name_to_index": 159, "quasiprobabilti": 159, "we": [159, 201, 203, 204, 207, 211, 218], "could": 159, "would": [159, 210], "out": [159, 218], "box": 159, "u": 159, "sinc": [159, 203, 204, 206, 211], "annot": [159, 218], "original_count": 161, "num_bootstrap_sampl": 161, "rgen": 161, "include_original_count": 161, "default_rng": 161, "circuit_list": 162, "transpiled_qc_list": 163, "under": [164, 198, 200, 203, 211, 218], "list_fid": 164, "list_coupl": 164, "chip": [164, 188, 191], "star": [164, 174, 180, 188, 198, 202, 203, 209, 217], "crystal": [164, 188], "active_qubit": [165, 197], "measure_oth": [165, 197], "measure_other_nam": [165, 197], "tomograhi": 165, "xy": 165, "pauli_label": 166, "charact": [166, 218], "extract": [167, 169, 186, 203, 219], "backend_label": 168, "prob_dist_or_count": 172, "prob_dist": 172, "propag": 173, "refer": [173, 189, 203, 204, 206, 211, 217, 219], "mathworld": 173, "wolfram": 173, "statisticalmedian": 173, "basis_g": 174, "drop_final_rz": 174, "optimization_level": [174, 201, 203], "sqg": [174, 208, 209, 215], "drop": 174, "rz": 174, "emploi": 174, "vertic": [175, 177, 190], "empti": 175, "backend_topologi": 176, "backend_num_qubit": [176, 189, 207], "remov": [177, 198], "duplic": 177, "iqm_job": [178, 179], "iqmjob": [178, 179, 184], "relev": 179, "transpiled_circuit_list": 181, "sorted_indic": [181, 210], "sorted_circuit": 181, "split": [182, 183, 207, 219], "13": [182, 200, 205, 207, 208, 209, 210, 212, 213, 219], "17": [182, 200, 205, 206, 207, 208, 209, 210, 212, 213, 215, 219], "18": [182, 200, 205, 206, 207, 208, 209, 210, 212, 213, 219], "todo": 182, "pylint": 182, "disabl": 182, "fixm": 182, "sequence_in": 183, "split_siz": 183, "chunk": 183, "normal": [184, 218], "sent": [184, 218], "manag": [184, 218, 219], "abil": 184, "f": [185, 200, 201, 203, 204, 207, 208, 209, 210, 211], "decor": 185, "statement": [185, 218], "counts_rang": 186, "visual": [187, 191, 198, 203, 209], "graphposit": 187, "variou": [188, 216], "garnet_posit": 188, "garnet": [188, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219], "deneb_posit": 188, "deneb": [188, 198, 205, 206, 208, 212, 213, 214, 215], "predefined_st": 188, "create_posit": 188, "pygraph": 188, "coordin": [188, 201], "edge_list": 189, "disjoint_lay": [189, 207], "draw": [189, 200, 203, 204, 207, 210], "respectv": 189, "path_sampl": 190, "max_tri": 190, "product": [190, 200, 218], "address": 190, "thick": [191, 198], "thinner": [191, 209], "better": [191, 209], "highlight": 191, "orang": [191, 209], "rustworkx": [192, 198], "random_gen": 194, "randomst": 194, "drawn": 194, "circuilar": 194, "unitary_arg": 195, "subsystem_bit_indic": 195, "clifford_or_haar": [195, 197], "initialis": [195, 197], "subsystem": [195, 196], "na": 196, "entangl": [196, 198, 203, 204, 208, 209, 216, 217, 219], "For": [196, 209, 211, 218, 219], "more": [196, 198, 203, 204, 218, 219], "mere": [196, 218], "nu": 197, "compos": [197, 200], "bug": 198, "qscore": [198, 203, 204], "improv": [198, 218], "benchmark": [198, 199, 200, 202, 210, 211, 214, 215, 216], "iqm": [198, 199, 200, 201, 202, 209, 210, 211, 212, 216, 218], "client": 198, "depend": [198, 206, 209, 211, 217], "incorrect": 198, "jupyt": 198, "tutori": 198, "report": [198, 203, 206], "explicit": 198, "offlin": [198, 206], "spent": [198, 206], "header": 198, "example_graphst": [198, 210], "notebook": [198, 201, 203, 204, 211, 216, 217], "page": [198, 217, 218], "render": [198, 219], "wrong": 198, "aid": 198, "don": [198, 218], "bottom": 198, "top": 198, "instal": [198, 203, 211, 217], "command": [198, 219], "develop": [198, 200, 217], "mode": [198, 200, 219], "41": [198, 207, 208, 212, 213], "folder": [198, 218, 219], "doc": [198, 219], "spark": [198, 202, 217], "compat": 198, "adapt": [198, 219], "behavior": 198, "publish": 198, "ci": 198, "secur": [198, 219], "scan": [198, 219], "lockfil": [198, 219], "relat": [198, 203, 206], "modulenotfounderror": 198, "pyrit": [198, 214], "about": [198, 209], "revert": 198, "ones": [198, 203, 204, 219], "now": [198, 205, 208, 209, 210, 211, 212], "port": 198, "subclass": 198, "usag": 198, "place": [198, 218], "miscellan": 198, "relax": 198, "api": [198, 207, 209, 217, 219], "build": [198, 219], "overwrit": 198, "minor": 198, "longer": [198, 203], "renam": 198, "rebas": 198, "randomizedbenchmark": 198, "quantumvolum": 198, "serial": 198, "some": [198, 203, 204, 209], "available_benchmark": 198, "__init__": 198, "public": 198, "hint": 198, "docstr": 198, "messag": 198, "prevent": 198, "exclus": [198, 218], "section": [199, 202, 216, 218], "guidanc": [199, 202], "packag": [199, 203, 207, 210, 216, 219], "your": [199, 203, 204, 206, 217, 218, 219], "own": [199, 217, 218, 219], "decomposit": [199, 217], "1402": 200, "4848": 200, "copyright": [200, 218], "2024": [200, 205, 218], "licens": [200, 217], "apach": [200, 218], "you": [200, 203, 204, 207, 212, 218, 219], "except": [200, 201, 218], "complianc": [200, 218], "unless": [200, 218], "law": [200, 218], "agre": [200, 218], "softwar": [200, 218], "AS": [200, 218], "without": [200, 203, 204, 206, 209, 218], "warranti": [200, 218], "OR": [200, 218], "OF": [200, 218], "kind": [200, 218], "express": [200, 218], "impli": [200, 218], "languag": [200, 218], "govern": [200, 218], "permiss": [200, 218], "quantum_info": 200, "qi": 200, "c0": 200, "c": [200, 203, 207, 210, 218], "_": [200, 203, 209, 211], "24": [200, 205, 207, 208, 211, 212], "half": 200, "x2": 200, "to_gat": 200, "y2": 200, "x2m": 200, "y2m": 200, "inplac": 200, "2pi": 200, "11": [200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 219], "15": [200, 203, 205, 206, 207, 208, 210, 212, 213], "16": [200, 205, 207, 208, 209, 210, 211, 212, 213, 215], "19": [200, 206, 207, 208, 209, 210, 211, 212, 213], "21": [200, 207, 208, 210, 212], "22": [200, 207, 208, 210, 211, 212, 213], "23": [200, 205, 207, 208, 209, 212, 213, 215], "clifford_sqg": 200, "s1": 200, "s1x2": 200, "s1y2": 200, "displaystyl": 200, "sum_": [200, 211], "prime": 200, "left": 200, "mathrm": [200, 203, 204, 209], "tr": [200, 211], "u_": 200, "dagger": [200, 203, 211], "u_k": 200, "right": [200, 218], "s2": 200, "satisfi": [200, 211], "c_kei": 200, "aux": 200, "total_triangl": 200, "c1": 200, "adjoint": 200, "c2": 200, "c3": 200, "to_matrix": 200, "trace": [200, 211], "print": [200, 203, 206, 207, 208, 209, 210, 211, 213, 215, 218], "0f": 200, "diagon": [200, 203, 204], "nsum": 200, "sum": 200, "clifford_2qg": 200, "c2q_0": 200, "c2q": 200, "counter": 200, "to_label": 200, "sqg_class_": 200, "cnot": [200, 209], "sy2": 200, "cnot_class_": 200, "iswap": 200, "sy1": 200, "sx2": 200, "i_swap_class_": 200, "swap_class_": 200, "clifford_1qg": 200, "open": 200, "clifford_1q": 200, "pkl": 200, "wb": 200, "clifford_2q": 200, "loaded_dict": 200, "def": [200, 201], "count_rcz": 200, "c_list": 200, "no_cz": 200, "no_r": 200, "count_op": 200, "num_2qcz": 200, "num_2qr": 200, "num_1qcz": 200, "num_1qr": 200, "875": [200, 203, 212, 215], "200": [200, 207, 210], "randint": [200, 203, 204, 208, 214], "11520": 200, "mpl": [200, 207, 210], "style": [200, 210], "iqp": [200, 210], "fold": [200, 207, 210], "ninvers": 200, "qc_aux": 200, "qcinv": 200, "op_seq": 200, "ncomposit": 200, "modulo": 200, "phase": 200, "equiv": 200, "latex": 200, "composit": 200, "bmatrix": 200, "520": [200, 208], "132": [200, 208, 212], "710": [200, 208], "suffic": 200, "triangular": 200, "part": [200, 218], "howev": [200, 218, 219], "still": [200, 211], "op": 200, "adj": 200, "prod": 200, "100000": 200, "ndone": 200, "defit": 201, "excit": 201, "add_counts_to_dataset": 201, "pyplot": [201, 203, 204, 211], "plt": [201, 203, 204, 207, 211], "generate_readout_test_circuit": 201, "n_qubit": [201, 207], "qb_to_measur": 201, "qc_transpil": 201, "plot_histogram": [201, 203], "try": 201, "state_": 201, "counts_": 201, "break": 201, "xtick": 201, "90": [201, 207, 210], "legend": 201, "readout_analysi": 201, "histogram": [201, 203], "readouttest": 201, "default_opt": 201, "n_shot": 201, "2048": 201, "staticmethod": 201, "readout_test": 201, "iqmprovid": [201, 203, 204, 207, 208, 210, 219], "iqm_server_url": 201, "fi": [201, 219], "coco": [201, 207, 210, 219], "get_backend": [201, 203, 204, 207, 208, 210, 219], "480b": 201, "state_0": 201, "state_1": 201, "u4": 201, "144b": 201, "0000": 201, "0010": 201, "1010": 201, "1100": 201, "176b": 201, "0011": 201, "0101": 201, "0110": 201, "1101": 201, "1110": 201, "1111": 201, "counts_0": 201, "int64": 201, "72b": 201, "1924": 201, "26": [201, 207, 208, 210, 211, 212], "39": [201, 207, 208, 210, 211, 212], "counts_1": 201, "88b": 201, "72": [201, 210], "48": [201, 207, 208, 211, 212], "78": [201, 207, 210], "36": [201, 207, 208, 210, 211, 217], "1801": 201, "sure": [203, 219], "pip": [203, 219], "ipykernel": 203, "o": [203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219], "environ": [203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219], "iqm_tokens_fil": [203, 204], "token": [203, 204, 209, 210, 212, 219], "iqm_url": [203, 204, 207, 208, 210], "access": [203, 204, 219], "everyth": [203, 204], "nx": [203, 204], "add_edges_from": [203, 204], "po": [203, 204], "spring_layout": [203, 204], "42": [203, 204, 207, 208, 209, 210, 211, 212], "with_label": [203, 204], "node_color": [203, 204], "lightblu": [203, 204], "edge_color": [203, 204], "grai": [203, 204], "node_s": [203, 204], "font_siz": [203, 204], "linewidth": [203, 204], "ignor": [203, 204], "critic": [203, 204], "filterwarn": [203, 204], "action": [203, 204], "superposit": [203, 204], "rangl": [203, 204], "frac": [203, 204, 211], "sqrt": [203, 204], "otim": [203, 204], "act": [203, 204, 218], "wit": [203, 204], "genuin": [203, 204, 209], "cannot": [203, 204, 218], "explain": [203, 204], "great": [203, 204], "rho_": [203, 204], "langl": [203, 204], "pure": [203, 204], "entri": [203, 204, 211], "written": [203, 204, 218], "corner": [203, 204], "simplifi": [203, 204], "four": [203, 204], "compon": [203, 204, 206], "formula": [203, 204], "nullifi": [203, 204], "To": [203, 204, 205, 207, 209, 211, 218, 219], "off": [203, 204], "want": [203, 204, 219], "pleas": [203, 204], "generate_ghz_spanning_tre": 203, "get_edg": 203, "ghz_circuit": 203, "qc_transp": 203, "re": [203, 212], "10000": [203, 214], "get_count": 203, "benchmark_ghz": [203, 204, 208, 209], "run_ghz": [203, 204, 208, 209], "result_ghz": [203, 204], "introduc": [203, 204], "2019": [203, 204, 209, 219], "successfulli": [203, 204, 205, 207, 208, 212, 213, 215], "occcur": [203, 204], "greater": [203, 204], "ask": [203, 204], "confid": [203, 204], "higher": [203, 204], "97": [203, 204, 207], "85": [203, 204, 210, 219], "asymptot": [203, 204], "log_2": [203, 204], "v_q": [203, 204], "underset": [203, 204], "argmax": [203, 204], "d": [203, 204, 209, 218], "leq": [203, 204], "achiev": [203, 204, 210], "quantum_volum": [203, 204, 206, 208, 215, 219], "due": [203, 206], "topmost": 203, "500": [203, 204, 208, 213, 215, 219], "40_000": [203, 210], "minut": [203, 204, 211], "benchmark_qv": [203, 204, 208, 215], "run_qv": [203, 204], "result_qv": [203, 204], "That": [203, 204], "wack": [203, 204], "constitut": [203, 204, 218], "_time": [203, 204], "notic": [203, 204, 218], "plot_tim": [203, 204], "benchmark_clop": [203, 204, 206, 208], "run_clop": [203, 204, 206, 208], "result_clop": [203, 204, 206, 208], "idea": 203, "behind": 203, "crb": [203, 216, 217], "certain": [203, 204], "langle0": 203, "c_": 203, "inv": 203, "c_m": 203, "cdot": 203, "_2c_1": 203, "sim": 203, "c_1": 203, "c_2": 203, "ldot": 203, "c_1c_2": 203, "_m": 203, "leq1": 203, "constant": 203, "isol": 203, "magesan": 203, "2012": [203, 219], "assumpt": 203, "markovian": 203, "stationari": 203, "theori": [203, 218], "fact": 203, "design": [203, 218, 219], "fulli": [203, 211], "ensur": 203, "our": 203, "overlin": 203, "intend": 203, "becaus": 203, "eventu": 203, "mention": 203, "barend": 203, "2014": 203, "approx": 203, "alwai": [203, 209], "slightli": 203, "care": 203, "compar": 203, "spec": 203, "randomized_benchmark": [203, 205, 207, 208, 212, 213, 219], "clifford_rb": [203, 205, 208], "benchmark_clifford_rb": [203, 205, 208], "run_clifford_rb": [203, 205, 208], "result_clifford_rb": [203, 205, 208], "previou": 203, "aim": [203, 209], "interest": 203, "sole": [203, 218], "made": [203, 218], "rate": 203, "wish": 203, "interleaved_rb": [203, 208, 212, 219], "irb_cz": 203, "benchmark_irb_cz": 203, "run_irb_cz": 203, "result_irb_cz": 203, "martiel": [203, 204], "erd\u0151": [203, 204], "r\u00e9nyi": [203, 204], "geq": [203, 204, 211], "60": [203, 204, 210], "999999": [203, 204, 208, 214], "benchmark_qscor": [203, 204, 208, 214], "run_qscor": [203, 204, 208], "result_qscor": [203, 204, 208], "summar": 203, "obs_ghz": [203, 204], "round": [203, 204], "obs_qv": [203, 204], "obs_clop": [203, 204], "obs_crb": 203, "f_crb": 203, "obs_irb": 203, "f_irb": 203, "average_gate_fidelity_czg": 203, "obs_q": [203, 204], "argmin": [203, 204], "mean_approximation_ratio": [203, 204, 208], "3000": 203, "999": [203, 205, 208, 211], "98": [203, 207], "30": [203, 205, 207, 208, 210, 212, 219], "num": [203, 207], "chosen_layout": 204, "60_000": [204, 208, 215, 219], "load_ext": [205, 206, 207, 208, 210, 211, 212, 213, 214, 215], "autoreload": [205, 206, 207, 208, 210, 211, 212, 213, 214, 215], "extens": 205, "reload": 205, "reload_ext": 205, "fakeadoni": [205, 206, 208, 210, 212, 213, 214, 215], "fakeapollo": [205, 206, 207, 208, 209, 210, 212, 213, 214, 215], "iqm_token": [205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219], "example_crb": [205, 208], "56": [205, 207, 208, 210, 211], "750": [205, 207, 208, 210], "logging_config": [205, 207, 208, 209, 210, 211, 212, 213, 215], "info": [205, 207, 208, 209, 210, 211, 212, 213, 215], "Will": [205, 207, 208, 211, 212, 213, 215, 219], "31": [205, 207, 208, 210, 212, 213], "63": [205, 207, 208, 210, 212], "831": [205, 208, 212], "992": [205, 208], "341": [205, 208], "040": [205, 208, 212], "469": [205, 208], "291": [205, 208], "292": [205, 208, 212], "349": 205, "541": [205, 208, 213], "600": [205, 208, 209], "756": [205, 208, 210], "837": [205, 208, 212, 215], "025": 205, "171": [205, 208], "905": [205, 208], "544": [205, 208], "899": [205, 207, 208], "32": [205, 207, 208, 210, 213], "624": [205, 208], "004": [205, 212], "43": [205, 207, 208, 209, 211, 212], "319": [205, 208], "569": [205, 207, 208, 213], "777": [205, 208], "840": [205, 208], "44": [205, 207, 208, 209, 211, 212], "048": [205, 207, 208, 212], "098": [205, 208], "qubits_": [205, 207, 208, 213], "_depth_1": [205, 207, 208, 212], "323": [205, 208], "45": [205, 207, 208, 209, 210, 212, 213], "186": [205, 212], "_depth_3": [205, 207, 208, 212], "225": [205, 208], "_depth_7": [205, 208, 212], "267": [205, 207, 208], "_depth_15": [205, 208, 212], "314": [205, 208], "_depth_31": [205, 208, 212], "315": [205, 208], "364": [205, 208, 213], "_depth_63": [205, 208, 212], "416": [205, 208], "417": [205, 208], "476": [205, 207], "542": [205, 207, 208, 213], "615": [205, 207, 208], "616": [205, 209], "697": [205, 208], "789": [205, 208, 212], "890": [205, 208, 212], "conclud": [205, 207, 208, 210, 212, 213, 215], "931": [205, 208], "938": [205, 208], "945": [205, 207, 208, 213], "952": [205, 208, 212], "959": [205, 208], "966": [205, 208], "972": [205, 208, 209], "979": [205, 207], "986": [205, 207, 208], "993": [205, 213], "46": [205, 207, 208, 210, 211], "006": 205, "013": [205, 208], "946844466999168": 205, "9429197366921651": 205, "attr": [205, 206, 207, 210, 211, 213, 215], "session_timestamp": [205, 207, 210, 213, 215], "20241217": 205, "115553": 205, "backend_configuration_nam": [205, 207, 210, 213, 215], "iqmfakeapollobackend": [205, 208, 209, 211, 215], "depth_1": 205, "time_circuit_gener": [205, 210, 213, 215], "541001081466675": 205, "time_submit": [205, 213, 215], "0006990432739257812": 205, "time_retriev": [205, 213, 215], "22491073608398438": 205, "all_job_metadata": [205, 213, 215], "batch_job_1": [205, 213], "job_id": [205, 213], "8f305755": 205, "e038": 205, "4596": 205, "8617": 205, "d96ba3f42ca9": 205, "aer_simul": [205, 213], "statu": [205, 213], "circuits_in_batch": [205, 213], "depth_3": 205, "05647683143615723": 205, "0005230903625488281": 205, "2fe0b406": 205, "8977": 205, "4567": 205, "bba0": 205, "d4168f0883ed": 205, "depth_7": 205, "19257187843322754": 205, "0004839897155761719": 205, "8299918c": 205, "be26": 205, "40d5": 205, "8778": 205, "9ea4468a1df2": 205, "depth_15": 205, "05831408500671387": 205, "0004811286926269531": 205, "174640c4": 205, "9ff3": 205, "4ca3": 205, "9ffc": 205, "d6aa5be304f3": 205, "depth_31": 205, "1564040184020996": 205, "0006189346313476562": 205, "7bb739f2": 205, "31bc": 205, "40af": 205, "8dbf": 205, "1d60a9310391": 205, "depth_63": 205, "08135986328125": 205, "0004200935363769531": 205, "f414a2c1": 205, "75c8": 205, "4d5a": 205, "9e4b": 205, "ccce29903f5f": 205, "147684812545776": 205, "0005502700805664062": 205, "00039887428283691406": 205, "8832576a": 205, "6d6e": 205, "4abe": 205, "8cfa": 205, "5001e6bb98e": 205, "08015298843383789": 205, "00039315223693847656": 205, "ecc1bcea": 205, "ef4c": 205, "4f35": 205, "9284": 205, "ab49af0c5b9f": 205, "16936397552490234": 205, "0003960132598876953": 205, "5582c842": 205, "0f07": 205, "46b6": 205, "96be": 205, "2fb3925b19d9": 205, "20774221420288086": 205, "0004191398620605469": 205, "6423b02b": 205, "8417": 205, "4300": 205, "b7ac": 205, "84d59f87a51f": 205, "0635080337524414": 205, "0004169940948486328": 205, "0b324804": 205, "44fe": 205, "4c16": 205, "83eb": 205, "08e5cd67aa79": 205, "20784401893615723": 205, "0004961490631103516": 205, "6c633640": 205, "d4b4": 205, "47de": 205, "a46d": 205, "d3ae4c84d212": 205, "avg_gate_fidel": [205, 213], "0012220693932290373": 205, "001545469960991071": 205, "xxxxxxxxxxxxxxx": 206, "example_clop": [206, 208], "operation_count": [206, 215], "breakdown": 206, "unit": 206, "remot": 206, "aspect": 206, "wall": 206, "experienc": 206, "encompass": 206, "compris": 206, "latenc": 206, "vari": 206, "significantli": 206, "extern": 206, "circumst": 206, "aggreg": 206, "finish": 206, "receiv": [206, 218], "xxxxxxxxxxxxxxxxxxxxxx": 207, "proxi": 207, "manual": 207, "necessarili": [207, 218], "simpli": 207, "iqm_provid": [207, 208, 210], "resonance_st": 207, "meetiqm": [207, 209, 210], "v1": [207, 209], "example_eplg": 207, "geomspac": 207, "endpoint": 207, "dtype": 207, "tolist": 207, "benchmark_eplg": 207, "run_eplg": 207, "2025": [207, 208, 209, 210, 211, 212, 213, 215, 217], "04": [207, 208, 210, 211, 212, 213], "358": [207, 208], "28": [207, 208, 210, 212, 215], "742": [207, 208], "745": [207, 208, 212], "111": [207, 208, 215], "61": [207, 210, 211], "748": [207, 210], "pedrofigueroaromero": [207, 210], "anaconda3": [207, 210], "env": [207, 210], "bench": [207, 210], "lib": [207, 210], "site": [207, 210], "177": [207, 208, 210, 213], "userwarn": [207, 210], "unknown": [207, 210], "unknown_opt": [207, 210], "571": [207, 208], "227": [207, 208], "523": [207, 208, 213], "539": [207, 208], "40": [207, 208, 210], "580": [207, 208], "333": [207, 208, 212], "52": [207, 208, 209, 210, 211, 212, 213], "692": [207, 208, 212], "57": [207, 208, 210, 212], "059": [207, 208], "816": [207, 208, 210], "03": [207, 208, 209, 210, 212, 213], "812": [207, 208], "06": [207, 208, 210, 211, 213], "057": [207, 208], "07": [207, 208, 210, 211, 212, 213], "672": [207, 208], "08": [207, 208, 210, 211, 212, 213], "826": [207, 208], "097": [207, 208, 213], "112": 207, "454": [207, 208], "888": [207, 208], "556": 207, "537": [207, 210], "547": [207, 208], "05": [207, 208, 211, 212, 213, 217], "054": [207, 208], "805": [207, 208], "51": [207, 208, 209, 210, 211, 212], "921": [207, 208], "066": [207, 208], "649": [207, 208], "33": [207, 208, 210, 213], "101": [207, 208], "37": [207, 208, 210], "712": [207, 208], "280": [207, 208], "252": [207, 208, 215], "704": [207, 208, 210, 212], "536": 207, "49": [207, 208, 210, 211, 212], "689": [207, 208], "204": [207, 208, 212, 215], "53": [207, 208, 209, 210, 212], "802": [207, 208], "54": [207, 208, 210, 212], "303": [207, 208, 210], "55": [207, 208, 210, 211, 213], "205": [207, 208, 210, 212], "813": [207, 208], "511": 207, "224": [207, 208], "136": [207, 208], "164": [207, 208], "236": 207, "920": [207, 208], "59": [207, 208, 210, 212, 213], "124": 207, "126": [207, 208, 209], "02": [207, 208, 210, 211, 213], "019": [207, 208], "833": [207, 208], "724": [207, 208], "631": [207, 208, 212], "09": [207, 208, 210, 212, 215], "861": [207, 208, 212], "955": [207, 208], "658": [207, 208], "819": [207, 208, 210, 212, 213], "161": [207, 208], "033": [207, 208, 212, 215], "050": [207, 208, 213, 215], "357": [207, 208, 213], "785": [207, 208, 212], "147": [207, 208, 211, 213], "289": [207, 208, 212], "253": [207, 208], "567": [207, 208], "914": [207, 208], "694": [207, 208], "282": [207, 208, 212], "408": [207, 211], "38": [207, 208, 210, 212], "721": [207, 208, 210], "738": [207, 208], "298": [207, 208], "395": [207, 208, 210, 212], "913": [207, 208], "828": [207, 208, 212], "830": [207, 208], "129": [207, 208, 219], "852": [207, 208, 210], "_depth_200": 207, "307": [207, 213], "_depth_111": 207, "58": [207, 208, 209, 210, 212], "471": [207, 208], "900": [207, 208], "_depth_61": 207, "525": [207, 208, 210], "067": [207, 208, 209, 212], "_depth_34": 207, "832": [207, 208], "255": [207, 208, 212], "_depth_18": 207, "851": 207, "246": [207, 208], "_depth_10": 207, "460": [207, 208], "843": [207, 208], "_depth_5": 207, "279": [207, 208], "154": [207, 208], "641": [207, 208], "455": [207, 208], "950": [207, 212], "568": [207, 208], "163": [207, 208, 212], "798": [207, 208, 210], "27": [207, 208, 209, 210, 211, 212], "382": [207, 208], "636": [207, 208, 212], "322": [207, 208], "35": [207, 208, 210], "273": [207, 208], "036": [207, 208], "769": [207, 208, 209], "681": [207, 208, 212], "751": [207, 208, 212], "774": 207, "788": [207, 208, 212], "632": [207, 208], "546": [207, 212, 213], "487": [207, 208, 210], "094": [207, 208, 212], "528": [207, 208], "594": [207, 208], "437": [207, 208], "01": [207, 208, 210, 211, 212, 213, 215, 217], "817": [207, 208], "873": [207, 208], "598": [207, 208, 213], "917": [207, 208], "901": [207, 208], "363": [207, 208], "895": [207, 208], "806": [207, 211, 215], "329": [207, 208], "585": [207, 208, 209, 210], "412": [207, 208, 210], "593": [207, 208, 212], "499": [207, 208, 210], "29": [207, 208, 210, 212, 215], "904": [207, 208], "814": 207, "401": [207, 208], "178": [207, 208], "863": [207, 208], "516": [207, 208, 210], "708": [207, 208, 210], "321": [207, 208], "656": [207, 208], "47": [207, 208, 211, 212], "576": [207, 208], "rcparam": [207, 210], "dpi": [207, 210], "175": [207, 208], "result_eplg": 207, "030": 207, "082": [207, 208, 215], "302": [207, 208], "893": [207, 208], "014": [207, 208], "108": [207, 208], "176": [207, 208, 209, 213], "497": [207, 208], "683": [207, 208, 210], "935": 207, "173": [207, 208, 212], "290": [207, 208, 212, 215], "367": [207, 208], "442": [207, 208, 212], "827": [207, 208], "069": 207, "194": 207, "308": [207, 208], "405": [207, 208, 210], "526": [207, 208], "575": [207, 208], "820": [207, 208, 212], "857": [207, 208], "946": [207, 208], "031": [207, 208], "116": [207, 208, 213], "185": [207, 208], "241": [207, 208], "334": [207, 208, 210], "375": [207, 208, 213], "dict_kei": [207, 210, 211], "parallel_all_0": 207, "parallel_all_1": 207, "parallel_all_2": 207, "parallel_all_3": 207, "2f": [207, 210], "2e": [207, 210], "average_gate_fidel": 207, "77": [207, 210], "96": 207, "95": [207, 210], "71": [207, 210], "81": [207, 210], "87": [207, 210], "75": [207, 210, 215], "70": [207, 210], "62": 207, "68": [207, 210], "80": [207, 210], "layer_fidel": 207, "88": 207, "eplg_circ_nam": 207, "circ_group_idx": 207, "circuit_to_draw": 207, "idle_wir": 207, "877": [208, 212], "127": [208, 212], "091": 208, "517": 208, "508": [208, 210], "507": [208, 210], "168": [208, 212], "188": [208, 212], "754": 208, "807": 208, "932": [208, 212], "052": 208, "447": 208, "448": [208, 213], "707": 208, "967": 208, "284": 208, "578": 208, "_depth_127": [208, 212], "324": [208, 210, 212], "557": [208, 213], "590": [208, 210], "602": 208, "611": 208, "626": [208, 210, 213], "example_irb_1q": [208, 212], "rgate": [208, 211, 212], "benchmark_irb_1q": [208, 212], "run_irb_1q": [208, 212], "021": [208, 215], "599": 208, "wxecut": 208, "047": 208, "588": 208, "423": 208, "348": [208, 212], "427": 208, "491": [208, 212], "445": 208, "219": 208, "479": 208, "482": [208, 210], "550": 208, "589": [208, 209, 213], "623": [208, 212], "558": [208, 210], "218": 208, "328": 208, "810": 208, "871": 208, "340": 208, "411": 208, "453": [208, 215], "876": [208, 212], "249": 208, "909": 208, "430": [208, 211], "233": 208, "519": 208, "530": [208, 212], "790": [208, 212, 213], "187": 208, "635": [208, 212], "783": [208, 215], "793": 208, "829": [208, 212], "933": [208, 212], "049": [208, 212], "778": 208, "008": [208, 212], "095": [208, 212], "260": 208, "881": [208, 212], "028": 208, "153": 208, "883": [208, 212, 213], "330": [208, 210, 213], "579": 208, "620": 208, "133": [208, 212, 213], "210": [208, 215], "709": 208, "310": 208, "549": 208, "326": [208, 210], "529": [208, 209, 213], "679": [208, 212, 213], "515": 208, "169": 208, "083": 208, "779": [208, 212], "009": 208, "732": 208, "560": 208, "943": 208, "071": 208, "182": 208, "976": 208, "553": [208, 212], "781": [208, 212, 215], "703": [208, 212], "554": 208, "639": [208, 209], "823": [208, 210], "179": 208, "859": 208, "114": 208, "338": [208, 211, 212], "425": 208, "480": 208, "821": [208, 210, 212], "070": [208, 209], "475": [208, 212], "000": [208, 212], "120": [208, 212], "250": [208, 211], "775": 208, "259": [208, 211], "352": 208, "648": 208, "044": 208, "874": [208, 212], "991": [208, 212], "229": 208, "690": 208, "149": [208, 213], "011": [208, 210, 211], "770": 208, "782": [208, 209], "565": 208, "739": [208, 212], "199": [208, 210], "346": [208, 212], "024": 208, "850": 208, "clifford_qubits_": [208, 212], "299": 208, "570": 208, "088": [208, 215], "377": 208, "379": 208, "698": 208, "700": 208, "150": [208, 210, 213], "_depth_255": [208, 212], "388": 208, "389": 208, "659": [208, 210], "110": 208, "118": [208, 212], "369": 208, "371": 208, "058": [208, 212], "650": [208, 212], "490": [208, 212], "834": 208, "682": [208, 212], "450": [208, 213], "240": 208, "189": 208, "231": 208, "660": 208, "018": 208, "939": [208, 212], "755": [208, 210], "759": 208, "484": 208, "970": [208, 213], "760": 208, "interleaved_qubits_": [208, 212], "109": [208, 219], "720": 208, "726": 208, "498": 208, "504": [208, 209], "937": 208, "320": 208, "270": 208, "702": [208, 213], "181": [208, 213], "687": 208, "761": [208, 209, 210], "148": [208, 211, 212], "010": 208, "468": 208, "919": 208, "562": [208, 210], "370": 208, "884": [208, 213], "172": 208, "075": [208, 211], "609": [208, 213], "053": 208, "983": [208, 213], "076": 208, "342": [208, 213], "849": [208, 213], "297": 208, "result_irb_1q": [208, 212], "894": 208, "452": [208, 209], "677": 208, "772": 208, "996": [208, 213], "203": 208, "538": [208, 212], "762": 208, "969": 208, "080": 208, "208": [208, 210, 212], "627": 208, "734": [208, 212], "942": 208, "165": 208, "272": [208, 213], "675": [208, 212], "882": [208, 212], "977": 208, "106": 208, "201": [208, 213], "431": 208, "666": 208, "776": 208, "887": [208, 213], "985": 208, "206": [208, 212], "318": 208, "545": [208, 213], "653": [208, 213], "766": [208, 213], "989": [208, 211, 212], "221": 208, "335": 208, "691": [208, 212], "809": 208, "936": 208, "286": [208, 212], "398": [208, 210], "780": [208, 212, 213, 215], "892": [208, 213], "612": 208, "avg_gate_fidelity_interleav": [208, 212], "9979183032433894": 208, "144505494191281e": 208, "avg_gate_fidelity_clifford": [208, 212], "9958115103388792": 208, "17823609003449e": 208, "avg_gate_fidelity_n": 208, "9977661388474022": 208, "361722520237145e": 208, "997958281196824": 208, "00010535448906517988": 208, "996185705320257": 208, "354178172452585e": 208, "9979657095041371": 208, "9888883256457185e": 208, "9976806659229207": 208, "00010662386983132284": 208, "9958525686447902": 208, "031666798234228e": 208, "9977880366105548": 208, "816884091625878e": 208, "9977658880315101": 208, "00013395088590563366": 208, "996010014510697": 208, "00011462572813413851": 208, "9978720077390384": 208, "113374307582606e": 208, "9978184054322468": 208, "00011216064141600791": 208, "9957406711482065": 208, "837832701601442e": 208, "9977283579457101": 208, "246845828393341e": 208, "example_irb_2q": [208, 212], "benchmark_irb_2q": [208, 212], "run_irb_2q": [208, 212], "304": 208, "543": 208, "034": [208, 211, 212], "729": 208, "930": [208, 210], "974": 208, "243": 208, "081": 208, "139": 208, "160": 208, "277": 208, "514": [208, 210], "728": 208, "665": 208, "824": [208, 210], "951": [208, 212], "131": [208, 212], "633": 208, "392": 208, "835": 208, "138": 208, "572": [208, 210], "897": 208, "039": [208, 212], "407": 208, "439": [208, 210], "555": 208, "003": [208, 211, 212], "668": 208, "752": [208, 212], "180": [208, 213], "608": 208, "743": 208, "564": [208, 209], "730": 208, "403": 208, "337": 208, "134": [208, 213], "676": [208, 213], "093": 208, "800": [208, 211, 219], "926": 208, "394": [208, 212], "860": [208, 212], "269": 208, "368": 208, "846": 208, "995": [208, 211], "477": [208, 210], "016": 208, "078": 208, "158": [208, 212], "614": 208, "866": 208, "035": 208, "213": 208, "419": 208, "815": 208, "838": 208, "478": 208, "574": 208, "144": 208, "744": [208, 212], "803": [208, 211], "261": 208, "796": 208, "713": 208, "844": 208, "073": 208, "271": [208, 213], "736": 208, "196": [208, 212, 215], "198": 208, "652": [208, 212, 213], "384": 208, "032": [208, 215], "912": 208, "896": 208, "007": [208, 212], "152": [208, 213], "306": 208, "060": 208, "062": 208, "610": 208, "084": 208, "456": [208, 213], "026": 208, "117": [208, 213], "141": 208, "501": [208, 210], "278": 208, "714": [208, 210], "079": [208, 213], "617": 208, "190": 208, "678": [208, 213], "432": [208, 212], "285": [208, 212], "228": 208, "result_irb_2q": [208, 212], "481": 208, "655": 208, "971": 208, "130": 208, "209": 208, "288": 208, "510": 208, "629": 208, "685": [208, 212], "764": [208, 212], "907": 208, "987": [208, 210], "353": 208, "512": [208, 210, 213], "591": 208, "686": 208, "797": 208, "927": 208, "162": 208, "606": [208, 213], "928": 208, "492": [208, 210, 212], "example_irb_iswap": [208, 212], "iswapg": [208, 212, 213, 219], "benchmark_irb_iswap": [208, 212], "run_irb_iswap": [208, 212], "166": [208, 212], "156": 208, "077": 208, "923": 208, "735": 208, "068": 208, "918": 208, "325": 208, "234": 208, "531": 208, "688": [208, 212, 215], "811": 208, "226": 208, "074": [208, 209, 212], "263": 208, "669": 208, "673": 208, "002": [208, 211, 212], "327": 208, "577": [208, 212], "015": 208, "099": 208, "965": 208, "029": 208, "045": 208, "296": [208, 213], "607": [208, 212], "911": 208, "313": 208, "664": [208, 212], "113": 208, "988": 208, "532": 208, "451": 208, "262": 208, "982": [208, 212, 213], "595": [208, 212], "336": 208, "result_irb_iswap": [208, 212], "953": 208, "140": 208, "191": 208, "223": [208, 212], "287": [208, 212], "355": [208, 212], "462": [208, 211], "621": 208, "667": 208, "701": 208, "747": [208, 210], "795": 208, "041": 208, "mirror_rb": [208, 213, 219], "example_mrb": [208, 213, 219], "benchmark_mrb": [208, 213], "run_mrb": [208, 213], "10x5": [208, 213], "64": [208, 210, 211, 213], "128": [208, 213], "622": 208, "865": [208, 209], "305": 208, "671": [208, 212], "055": 208, "485": [208, 212], "391": [208, 211], "584": [208, 210], "230": 208, "449": [208, 213], "242": 208, "472": 208, "509": [208, 210, 212], "022": [208, 212], "436": [208, 212], "628": 208, "980": 208, "418": 208, "603": 208, "808": 208, "051": 208, "293": 208, "157": [208, 212], "268": 208, "858": 208, "527": [208, 210], "486": 208, "898": 208, "107": [208, 212], "540": 208, "244": [208, 213], "661": 208, "885": [208, 212], "765": [208, 212], "193": 208, "465": 208, "910": 208, "643": 208, "104": [208, 210], "438": [208, 209], "613": 208, "470": 208, "581": 208, "693": 208, "266": 208, "488": 208, "662": 208, "870": 208, "506": 208, "207": [208, 212], "638": 208, "245": 208, "872": 208, "046": 208, "963": 208, "426": 208, "975": 208, "878": 208, "275": 208, "251": 208, "440": [208, 212], "964": [208, 210, 212], "922": 208, "309": 208, "981": [208, 212], "583": [208, 212], "413": [208, 213], "998": [208, 211], "906": [208, 212], "444": 208, "891": 208, "217": [208, 215], "409": 208, "457": 208, "311": 208, "446": 208, "695": 208, "924": 208, "941": 208, "625": [208, 210, 215], "727": 208, "184": [208, 213], "012": [208, 210], "090": [208, 212], "372": 208, "642": [208, 209], "202": [208, 210], "489": 208, "696": 208, "949": 208, "238": 208, "839": 208, "596": [208, 212, 213], "684": 208, "753": [208, 210], "535": 208, "415": 208, "354": 208, "345": 208, "604": 208, "968": [208, 209, 212], "502": 208, "768": 208, "380": [208, 212], "220": 208, "283": [208, 215], "773": [208, 212], "142": 208, "867": [208, 213], "123": 208, "381": [208, 212], "767": [208, 213], "072": [208, 209], "551": 208, "741": 208, "958": 208, "845": [208, 210, 212], "222": 208, "239": 208, "065": [208, 212], "903": 208, "869": 208, "552": 208, "757": [208, 215], "915": [208, 212], "043": 208, "125": [208, 210, 213], "429": 208, "984": 208, "618": 208, "344": 208, "663": 208, "216": [208, 212], "717": [208, 212], "258": 208, "421": 208, "647": 208, "420": 208, "410": 208, "390": 208, "566": [208, 210, 212], "718": 208, "645": 208, "587": [208, 210], "281": 208, "397": [208, 209], "017": [208, 210], "592": [208, 210], "192": 208, "122": 208, "362": 208, "862": 208, "784": [208, 212], "483": 208, "350": [208, 210], "339": [208, 212], "257": [208, 210], "383": [208, 212], "619": 208, "822": 208, "886": 208, "063": 208, "404": 208, "836": [208, 212], "573": 208, "424": [208, 210], "855": 208, "085": 208, "644": [208, 211], "902": 208, "461": [208, 210], "563": 208, "522": [208, 212, 213], "723": 208, "957": 208, "791": [208, 213], "908": 208, "195": [208, 210], "170": 208, "505": [208, 210], "294": [208, 212], "458": 208, "317": 208, "089": 208, "360": 208, "559": [208, 209, 210], "399": 208, "159": [208, 210], "247": 208, "103": [208, 212], "119": [208, 213], "994": [208, 211], "496": [208, 210, 212], "001": [208, 211], "848": 208, "435": 208, "725": 208, "197": [208, 210, 212], "023": 208, "818": [208, 212], "151": [208, 210], "473": [208, 210], "854": 208, "680": 208, "841": 208, "374": 208, "533": 208, "605": [208, 213], "086": 208, "211": 208, "758": [208, 210, 211, 212, 213], "792": 208, "719": [208, 210], "548": 208, "235": 208, "997": 208, "534": 208, "916": [208, 209, 212], "137": 208, "654": 208, "_depth_2": [208, 213], "_depth_4": [208, 213], "763": 208, "_depth_8": [208, 213], "_depth_16": [208, 213], "_depth_32": [208, 213], "_depth_64": [208, 213], "_depth_128": [208, 213], "_depth_256": [208, 213], "_depth_512": [208, 213], "295": 208, "674": 208, "result_mrb": [208, 213], "061": 208, "597": [208, 213], "145": 208, "1600x1200": 208, "ax": 208, "all_qubit_layout": [208, 213], "key_mrb_plot": [208, 213], "example_qv": [208, 215, 219], "run0_qv": [208, 215], "637": 208, "subbatch": [208, 215], "264": [208, 213], "387": [208, 212, 213], "result0_qv": [208, 215], "722": 208, "run1_qv": [208, 215], "result1_qv": [208, 215], "466": 208, "422": [208, 213], "948": [208, 213], "733": 208, "630": 208, "493": 208, "There": 208, "6353": 208, "19060": 208, "minimal_ghz": [208, 209], "237": 208, "183": [208, 209], "example_qscor": [208, 214], "10_000": 208, "880": 208, "4721": 208, "1866": 208, "301": [208, 213], "5760": 208, "3202": 208, "5666": 208, "6277": 208, "5362": 208, "1528": 208, "4720649335834727": 208, "264883828589849": 208, "is_succes": [208, 215], "qscore_result": 208, "5759620786516855": 208, "13942395641806907": 208, "5666397249858852": 208, "09938021346738757": 208, "536231071484655": 208, "13823427614487907": 208, "multipartit": 209, "One": [209, 215], "larger": [209, 211], "leibfri": 209, "et": 209, "al": 209, "six": 209, "atom": 209, "schr\u00f6dinger": 209, "cat": 209, "natur": 209, "2005": 209, "offer": [209, 218], "verif": [209, 217, 219], "superconduct": 209, "phy": [209, 219], "commun": [209, 218], "095004": 209, "elben": 209, "statist": 209, "toolbox": 209, "probe": 209, "bodi": 209, "rev": [209, 219], "99": 209, "052323": 209, "ciruit": 209, "hadamrd": 209, "addit": [209, 211, 218, 219], "log_depth": 209, "cruz": 209, "yield": 209, "lower": [209, 211], "hous": 209, "reli": 209, "dai": 209, "thu": 209, "comparison": 209, "best": 209, "gme": 209, "prefer": [209, 218], "whenev": 209, "mitgat": 209, "arang": 209, "think": 209, "help": 209, "your_token": [209, 219], "mark": [209, 218], "w_": 209, "ij": [209, 211], "mathcal": 209, "reson": [209, 210, 212, 219], "grid": 209, "might": 209, "until": 209, "nice": 209, "utils_plot": 209, "plot_layout_fidelity_graph": 209, "464": 209, "646": [209, 213], "962": 209, "212": 209, "fidelitii": 209, "filter": 209, "descript": [209, 218], "l0": 209, "l1": 209, "xxxxxxxxxxxxxxxx": 210, "get_iqm_backend": 210, "300": [210, 211], "graph_stat": 210, "benchmark_graphst": 210, "run_graphst": 210, "749": 210, "396": [210, 212], "402": 210, "332": 210, "020": 210, "155": 210, "705": 210, "711": 210, "result_graphst": 210, "042": 210, "fetch": 210, "ok": 210, "font_manag": 210, "findfont": 210, "famili": 210, "stixgener": 210, "fall": 210, "back": 210, "dejavu": 210, "san": 210, "stixnonunicod": 210, "494": 210, "stixsizeonesym": 210, "stixsizetwosym": 210, "stixsizethreesym": 210, "stixsizefoursym": 210, "stixsizefivesym": 210, "cmsy10": 210, "cmr10": 210, "cmtt10": 210, "518": 210, "cmmi10": 210, "521": 210, "cmb10": 210, "524": 210, "cmss10": 210, "cmex10": 210, "mono": 210, "351": 210, "percentag": 210, "idx": 210, "max_neg": 210, "84": 210, "86": 210, "74": 210, "79": 210, "73": 210, "66": 210, "65": 210, "83": 210, "69": 210, "94": 210, "76": 210, "82": [210, 211], "91": 210, "max_negativities_iqm_backend_20250325": 210, "160833": 210, "max_negativities_graph_20250325": 210, "lowest": 210, "resconstruct": 210, "observation_dict": 210, "ob": 210, "argsort": 210, "lowest_negativity_pair": 210, "highest_negativity_pair": 210, "all_projected_qubit": 210, "all_pair_group": 210, "all_neighbor_group": 210, "all_tomography_st": 210, "all_neg": 210, "bootstrapped_averag": 210, "adjust": 210, "06e": 210, "3206842864916416": 210, "31010765308352356": 210, "93e": 210, "3542183495445777": 210, "3539253716950112": 210, "53e": 210, "3888948376922817": 210, "38736774049571426": 210, "40e": 210, "43361445043616353": 210, "4196633945881397": 210, "41e": 210, "43662497937638245": 210, "42249850678510703": 210, "90e": 210, "37169789059353975": 210, "36979367489991855": 210, "54e": 210, "38686144121566973": 210, "379324805728086": 210, "79e": 210, "39594160382229693": 210, "3931510385413373": 210, "97e": 210, "4092514317610637": 210, "4086540198375821": 210, "50e": 210, "36885658775672914": 210, "35382192582939426": 210, "08e": 210, "33451241682265326": 210, "32543228989306544": 210, "36671508133810615": 210, "36709383454659233": 210, "77e": 210, "32608570801001885": 210, "3213134253456277": 210, "29e": 210, "3566393931240753": 210, "3543493221398908": 210, "81e": 210, "3767486702923495": 210, "35860149933340935": 210, "3341624640356816": 210, "33262962066733953": 210, "00e": 210, "3486521211655147": 210, "3186675847362068": 210, "71e": 210, "39469814069723197": 210, "39099102345993036": 210, "13e": 210, "32804598413012276": 210, "3219124989220279": 210, "24e": 210, "3668085274286376": 210, "36257096650435117": 210, "62e": 210, "3732632016003694": 210, "35702785889177086": 210, "91e": 210, "3465755742920084": 210, "3416698385772142": 210, "17e": 210, "32654059296341725": 210, "30487999669484334": 210, "35e": 210, "39553971118808906": 210, "38203311102738585": 210, "3803202427020316": 210, "37715389665511634": 210, "76e": 210, "37343498488547655": 210, "35586222167388737": 210, "60e": 210, "41534546787652044": 210, "3993565114966017": 210, "45e": 210, "4134082416427767": 210, "398899780892523": 210, "55e": 210, "3810499300589416": 210, "3755024431288029": 210, "34e": 210, "37452627891460544": 210, "3671820250131137": 210, "q_0": 210, "\u03c0": [210, 211], "q_1": 210, "q_2": 210, "q_3": 210, "q_4": 210, "q_5": 210, "q_6": 210, "q_7": 210, "q_8": 210, "q_9": 210, "q_10": 210, "q_11": 210, "q_12": 210, "q_13": 210, "q_14": 210, "q_15": 210, "q_16": 210, "q_17": 210, "q_18": 210, "q_19": 210, "tomo_qubit": 210, "introduct": 211, "what": [211, 212], "background": 211, "journal": 211, "prxquantum": 211, "1103": 211, "010325": [211, 219], "compressive_gst": 211, "iqmfakeadoni": 211, "iqmfakeapollo": 211, "k_i": 211, "trigger": 211, "benefit": 211, "less": [211, 213], "captur": 211, "domin": 211, "trustworthi": 211, "veri": 211, "consum": 211, "minimal_1q_gst": 211, "minimal_2q_gst": 211, "Be": 211, "extra": 211, "434": 211, "20it": 211, "criterion": 211, "56e": 211, "deepcopi": 211, "benchmark_rk1": 211, "result_rk1": 211, "83it": 211, "99e": 211, "uncertaintit": 211, "restult": 211, "idl": 211, "qb1": 211, "99693": 211, "nan": 211, "00703": 211, "unitar": 211, "98781": 211, "rx": 211, "99918": 211, "0013": 211, "99674": 211, "ry": 211, "99509": 211, "01332": 211, "98074": 211, "tvd": 211, "00698": 211, "03296": 211, "dist": 211, "00601": 211, "04366": 211, "results_layout_": 211, "raw_kraus_oper": 211, "raw_gat": 211, "raw_povm": 211, "raw_stat": 211, "gauge_opt_g": 211, "gauge_opt_gates_pauli_basi": 211, "gauge_opt_povm": 211, "gauge_opt_st": 211, "main_mgst_tim": 211, "gauge_optimization_tim": 211, "choi_ev": 211, "full_metr": 211, "raw": 211, "raw_result": 211, "array_str": 211, "precis": 211, "suppress_smal": 211, "002j": 211, "005": [211, 212], "003j": 211, "004j": 211, "These": 211, "diplai": 211, "disc": 211, "represent": 211, "sinlg": 211, "g_": 211, "p_i": 211, "p_j": 211, "layout_": 211, "_gate_metr": 211, "_choi_eigenvalu": 211, "_other_metr": 211, "_process_matrix_0": 211, "_process_matrix_1": 211, "_process_matrix_2": 211, "_spam_matrices_r": 211, "_spam_matrices_imag": 211, "_hamiltonian_paramet": 211, "altern": 211, "ourselv": 211, "xyi": 211, "instruct": 211, "gate_list": 211, "indentif": 211, "custom_1q_gst": 211, "verbos": 211, "42e": 211, "008j": 211, "001j": 211, "064": 212, "121": 212, "146": 212, "954": 212, "376": 212, "9975073376613797": 212, "9957157328789242": 212, "9976959612386156": 212, "9957310522299055": 212, "752861001879659e": 212, "028839025109517e": 212, "64196778583225e": 212, "243656712565855e": 212, "know": 212, "640": 212, "842": [212, 213], "740": 212, "9798030906041997": 212, "9431232937255942": 212, "9840858225184934": 212, "945382422883015": 212, "174": 212, "038": 212, "215": [212, 213], "706": 212, "441": 212, "9344679810705316": 212, "9463377694591251": 212, "9267928870925659": 212, "943379008472002": 212, "947": 213, "365": 213, "428": 213, "940": 213, "944": 213, "331": 213, "096": 213, "889": 213, "651": 213, "343": 213, "214": 213, "attr_kei": [213, 215], "depth_2": 213, "14302134513855": 213, "007565975189208984": 213, "06883907318115234": 213, "f8d9d789": 213, "0e9a": 213, "4086": 213, "ab36": 213, "685064a7b66": 213, "depth_4": 213, "0004930496215820312": 213, "0007040500640869141": 213, "87e367b7": 213, "c3ae": 213, "4457": 213, "8a2d": 213, "7b169c528033": 213, "depth_8": 213, "0004889965057373047": 213, "0005979537963867188": 213, "d84330c9": 213, "101f": 213, "40ff": 213, "bea8": 213, "f5e4c0b41527": 213, "depth_16": 213, "0004627704620361328": 213, "0006148815155029297": 213, "1f58b4a0": 213, "fb16": 213, "4d12": 213, "a9e8": 213, "c9263da52418": 213, "depth_32": 213, "00047278404235839844": 213, "0005419254302978516": 213, "4e43834b": 213, "5694": 213, "4c6d": 213, "8a83": 213, "796913d67e40": 213, "depth_64": 213, "000469207763671875": 213, "0005609989166259766": 213, "036e1dd": 213, "ca95": 213, "42a1": 213, "ab68": 213, "30a243f6b4ba": 213, "depth_128": 213, "0004668235778808594": 213, "0005328655242919922": 213, "13a59ca8": 213, "2ab0": 213, "4de8": 213, "a643": 213, "5b3f318f03d4": 213, "depth_256": 213, "0004749298095703125": 213, "e673defd": 213, "039c": 213, "4c37": 213, "9ef3": 213, "d4734436f39a": 213, "depth_512": 213, "0005099773406982422": 213, "0005548000335693359": 213, "d83ac439": 213, "2929": 213, "4d78": 213, "b52b": 213, "f297873c3e44": 213, "9710221314803044": 213, "001462493086363885": 213, "9473471466489307": 213, "00285118172031131": 213, "xxxxxxxxxxxxxx": 214, "put": 214, "run0_qscor": 214, "result0_qscor": 214, "rem_quasidistribut": 215, "time_transpil": 215, "time_batch": 215, "cumulative_average_heavy_output_prob": 215, "cumulative_stddev_heavy_output_prob": 215, "rem_cumulative_average_heavy_output_prob": 215, "rem_cumulative_stddev_heavy_output_prob": 215, "rem_heavy_output_prob": 215, "60546875": 215, "71875": 215, "578125": 215, "74609375": 215, "6328125": 215, "546875": 215, "56640625": 215, "76953125": 215, "75390625": 215, "67578125": 215, "6171875": 215, "55078125": 215, "64453125": 215, "6875": 215, "7109375": 215, "82421875": 215, "76171875": 215, "6484375": 215, "6015625": 215, "73828125": 215, "63671875": 215, "69140625": 215, "61328125": 215, "734375": 215, "57421875": 215, "6953125": 215, "55859375": 215, "69921875": 215, "609375": 215, "671875": 215, "77734375": 215, "6796875": 215, "62890625": 215, "6640625": 215, "66796875": 215, "62109375": 215, "703125": 215, "68359375": 215, "58984375": 215, "71484375": 215, "59375": 215, "79296875": 215, "66015625": 215, "65234375": 215, "59765625": 215, "65625": 215, "84765625": 215, "5859375": 215, "5625": 215, "72265625": 215, "640625": 215, "58203125": 215, "54296875": 215, "8203125": 215, "78515625": 215, "7265625": 215, "53515625": 215, "5703125": 215, "5546875": 215, "5390625": 215, "828125": 215, "80859375": 215, "765625": 215, "81640625": 215, "5234375": 215, "73046875": 215, "87890625": 215, "7890625": 215, "7734375": 215, "7421875": 215, "70703125": 215, "50390625": 215, "7578125": 215, "52734375": 215, "78125": 215, "8125": 215, "average_heavy_output_prob": 215, "649203125": 215, "021341903733745705": 215, "672703125": 215, "020984452845629994": 215, "rem_average_heavy_output_prob": 215, "67954478782619": 215, "020869291754367154": 215, "rem_is_succes": 215, "rem_qv_result": 215, "710149650958595": 215, "020289757228807877": 215, "vanilla_4_qubits_": 215, "vanilla_rem_4_qubits_": 215, "Or": 215, "onc": [215, 219], "collect": 216, "demonstr": 216, "rest": 216, "summari": [216, 217], "releas": 217, "date": [217, 218], "finland": 217, "tool": [217, 219], "changelog": 217, "search": 217, "januari": 218, "2004": 218, "AND": 218, "FOR": 218, "reproduct": 218, "shall": 218, "licensor": 218, "owner": 218, "entiti": 218, "author": 218, "grant": 218, "legal": 218, "power": 218, "indirect": 218, "caus": 218, "contract": 218, "ownership": 218, "fifti": 218, "percent": 218, "outstand": 218, "iii": 218, "benefici": 218, "exercis": 218, "mechan": 218, "transform": 218, "translat": 218, "media": 218, "authorship": 218, "attach": 218, "appendix": 218, "editori": 218, "revis": 218, "elabor": 218, "whole": 218, "remain": 218, "link": 218, "bind": 218, "interfac": 218, "thereof": 218, "contribut": 218, "intention": 218, "inclus": 218, "behalf": 218, "electron": 218, "verbal": 218, "mail": 218, "issu": 218, "track": 218, "discuss": 218, "exclud": 218, "conspicu": 218, "Not": 218, "contributor": 218, "whom": 218, "been": 218, "incorpor": 218, "subject": 218, "herebi": 218, "perpetu": 218, "worldwid": 218, "charg": 218, "royalti": 218, "irrevoc": 218, "reproduc": 218, "publicli": 218, "sublicens": 218, "patent": 218, "sell": 218, "transfer": 218, "claim": 218, "infring": 218, "alon": 218, "institut": 218, "litig": 218, "counterclaim": 218, "lawsuit": 218, "alleg": 218, "contributori": 218, "redistribut": 218, "medium": 218, "meet": 218, "recipi": 218, "carri": 218, "promin": 218, "retain": 218, "trademark": 218, "pertain": 218, "readabl": 218, "wherev": 218, "third": 218, "parti": 218, "appear": 218, "content": 218, "alongsid": 218, "addendum": 218, "constru": 218, "compli": 218, "explicitli": 218, "notwithstand": 218, "noth": 218, "herein": 218, "supersed": 218, "agreement": 218, "regard": 218, "trade": 218, "servic": [218, 219], "reason": 218, "customari": 218, "disclaim": 218, "merchant": 218, "particular": 218, "respons": 218, "appropri": 218, "risk": 218, "liabil": 218, "event": 218, "tort": 218, "neglig": 218, "deliber": [218, 219], "grossli": 218, "liabl": 218, "damag": 218, "special": 218, "incident": 218, "consequenti": 218, "aris": 218, "inabl": 218, "loss": 218, "goodwil": 218, "stoppag": 218, "failur": 218, "malfunct": 218, "commerci": 218, "even": 218, "advis": 218, "fee": 218, "indemn": 218, "oblig": 218, "indemnifi": 218, "defend": 218, "hold": 218, "harmless": 218, "incur": 218, "assert": 218, "boilerpl": 218, "enclos": 218, "bracket": 218, "replac": 218, "comment": 218, "syntax": 218, "easier": 218, "archiv": 218, "repositori": [218, 219], "licenc": 218, "src": 218, "raphael": 218, "brieger": 218, "ingo": 218, "roth": 218, "martin": 218, "kliesch": 218, "comprehens": 219, "modular": 219, "easi": 219, "042311": 219, "lett": 219, "080505": 219, "prx": 219, "2023": 219, "150502": 219, "2022": 219, "holist": 219, "032328": 219, "0712": 219, "0921": 219, "2007": 219, "adv": 219, "technol": 219, "2100061": 219, "ieee": 219, "tran": 219, "eng": 219, "legaci": 219, "wrap": 219, "benchmarkexperi": 219, "uv": 219, "highli": 219, "With": 219, "machin": 219, "venv": 219, "read": 219, "prompt": 219, "suppli": 219, "txt": 219, "lock": 219, "directli": 219, "repo": 219, "pypi": 219, "lint": 219, "cicd": 219, "clone": 219, "directori": 219, "edit": 219, "docbuild": 219, "pyproject": 219, "toml": 219, "commit": 219, "upgrad": 219, "transit": 219, "cloud": 219, "prem": 219, "platform": 219, "authent": 219, "example_irb": 219, "example_experi": 219, "setup": 219, "weekli": 219, "daili": 219, "gitlab": 219, "scheduled_experi": 219}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [66, 0, 0, "-", "logging_config"], [67, 0, 0, "-", "optimization"], [80, 0, 0, "-", "quantum_volume"], [99, 0, 0, "-", "randomized_benchmarking"], [156, 0, 0, "-", "readout_mitigation"], [160, 0, 0, "-", "utils"], [187, 0, 0, "-", "utils_plots"], [193, 0, 0, "-", "utils_shadows"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_circuits_per_batch"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_dd"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "parallel_execution"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"], [53, 0, 0, "-", "graph_states"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "fidelity_analysis"], [43, 5, 1, "", "fidelity_ghz_coherences"], [44, 5, 1, "", "fidelity_ghz_randomized_measurements"], [45, 5, 1, "", "generate_ghz_linear"], [46, 5, 1, "", "generate_ghz_log_cruz"], [47, 5, 1, "", "generate_ghz_log_mooney"], [48, 5, 1, "", "generate_ghz_spanning_tree"], [49, 5, 1, "", "generate_ghz_star"], [50, 5, 1, "", "get_cx_map"], [51, 5, 1, "", "get_edges"], [52, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_rms"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.entanglement.graph_states": [[54, 1, 1, "", "GraphStateBenchmark"], [55, 1, 1, "", "GraphStateConfiguration"], [56, 5, 1, "", "find_edges_with_disjoint_neighbors"], [57, 5, 1, "", "generate_graph_state"], [58, 5, 1, "", "generate_minimal_edge_layers"], [59, 5, 1, "", "negativity_analysis"], [60, 5, 1, "", "plot_density_matrix"], [61, 5, 1, "", "plot_max_negativities"], [62, 5, 1, "", "plot_max_negativities_graph"], [63, 5, 1, "", "shadow_tomography_analysis"], [64, 5, 1, "", "state_tomography_analysis"], [65, 5, 1, "", "update_pauli_expectations"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[54, 2, 1, "", "add_all_circuits_to_dataset"], [54, 2, 1, "", "add_all_meta_to_dataset"], [54, 2, 1, "", "analysis_function"], [54, 2, 1, "", "execute"], [54, 2, 1, "", "generate_all_circuit_info_for_graph_state_benchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[55, 3, 1, "", "benchmark"], [55, 3, 1, "", "model_config"], [55, 3, 1, "", "n_median_of_means"], [55, 3, 1, "", "n_random_unitaries"], [55, 3, 1, "", "num_bootstraps"], [55, 3, 1, "", "qubits"], [55, 3, 1, "", "tomography"]], "iqm.benchmarks.optimization": [[68, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[69, 1, 1, "", "QScoreBenchmark"], [70, 1, 1, "", "QScoreConfiguration"], [71, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [72, 5, 1, "", "compute_expectation_value"], [73, 5, 1, "", "create_objective_function"], [74, 5, 1, "", "cut_cost_function"], [75, 5, 1, "", "get_optimal_angles"], [76, 5, 1, "", "is_successful"], [77, 5, 1, "", "plot_approximation_ratios"], [78, 5, 1, "", "qscore_analysis"], [79, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[69, 2, 1, "", "add_all_meta_to_dataset"], [69, 2, 1, "", "analysis_function"], [69, 2, 1, "", "choose_qubits_custom"], [69, 2, 1, "", "choose_qubits_naive"], [69, 2, 1, "", "execute"], [69, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[70, 3, 1, "", "REM"], [70, 3, 1, "", "benchmark"], [70, 3, 1, "", "choose_qubits_routine"], [70, 3, 1, "", "custom_qubits_array"], [70, 3, 1, "", "max_num_nodes"], [70, 3, 1, "", "min_num_nodes"], [70, 3, 1, "", "min_num_qubits"], [70, 3, 1, "", "mit_shots"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "num_instances"], [70, 3, 1, "", "num_qaoa_layers"], [70, 3, 1, "", "optimize_sqg"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "seed"], [70, 3, 1, "", "use_classically_optimized_angles"], [70, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[81, 0, 0, "-", "clops"], [87, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[82, 1, 1, "", "CLOPSBenchmark"], [83, 1, 1, "", "CLOPSConfiguration"], [84, 5, 1, "", "clops_analysis"], [85, 5, 1, "", "plot_times"], [86, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[82, 2, 1, "", "add_all_meta_to_dataset"], [82, 2, 1, "", "analysis_function"], [82, 2, 1, "", "append_parameterized_unitary"], [82, 2, 1, "", "assign_random_parameters_to_all"], [82, 2, 1, "", "clops_cycle"], [82, 2, 1, "", "execute"], [82, 2, 1, "", "generate_circuit_list"], [82, 2, 1, "", "generate_random_parameters"], [82, 2, 1, "", "generate_single_circuit"], [82, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[83, 3, 1, "", "benchmark"], [83, 3, 1, "", "clops_h_bool"], [83, 3, 1, "", "model_config"], [83, 3, 1, "", "num_circuits"], [83, 3, 1, "", "num_shots"], [83, 3, 1, "", "num_updates"], [83, 3, 1, "", "optimize_sqg"], [83, 3, 1, "", "physical_layout"], [83, 3, 1, "", "qiskit_optim_level"], [83, 3, 1, "", "qubits"], [83, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[88, 1, 1, "", "QuantumVolumeBenchmark"], [89, 1, 1, "", "QuantumVolumeConfiguration"], [90, 5, 1, "", "compute_heavy_output_probabilities"], [91, 5, 1, "", "cumulative_hop"], [92, 5, 1, "", "cumulative_std"], [93, 5, 1, "", "get_ideal_heavy_outputs"], [94, 5, 1, "", "get_rem_hops"], [95, 5, 1, "", "heavy_projector"], [96, 5, 1, "", "is_successful"], [97, 5, 1, "", "plot_hop_threshold"], [98, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[88, 2, 1, "", "add_all_circuits_to_dataset"], [88, 2, 1, "", "add_all_meta_to_dataset"], [88, 2, 1, "", "analysis_function"], [88, 2, 1, "", "execute"], [88, 2, 1, "", "generate_circuit_list"], [88, 2, 1, "", "generate_single_circuit"], [88, 2, 1, "", "get_rem_quasidistro"], [88, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[89, 3, 1, "", "benchmark"], [89, 3, 1, "", "choose_qubits_routine"], [89, 3, 1, "", "custom_qubits_array"], [89, 3, 1, "", "mit_shots"], [89, 3, 1, "", "model_config"], [89, 3, 1, "", "num_circuits"], [89, 3, 1, "", "num_sigmas"], [89, 3, 1, "", "optimize_sqg"], [89, 3, 1, "", "physical_layout"], [89, 3, 1, "", "qiskit_optim_level"], [89, 3, 1, "", "rem"], [89, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[100, 0, 0, "-", "clifford_rb"], [105, 0, 0, "-", "direct_rb"], [112, 0, 0, "-", "eplg"], [118, 0, 0, "-", "interleaved_rb"], [123, 0, 0, "-", "mirror_rb"], [132, 0, 0, "-", "multi_lmfit"], [137, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[101, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[102, 1, 1, "", "CliffordRBConfiguration"], [103, 1, 1, "", "CliffordRandomizedBenchmarking"], [104, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[102, 3, 1, "", "benchmark"], [102, 3, 1, "", "model_config"], [102, 3, 1, "", "num_circuit_samples"], [102, 3, 1, "", "parallel_execution"], [102, 3, 1, "", "qubits_array"], [102, 3, 1, "", "sequence_lengths"], [102, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[103, 2, 1, "", "add_all_circuits_to_dataset"], [103, 2, 1, "", "add_all_metadata_to_dataset"], [103, 2, 1, "", "analysis_function"], [103, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[106, 0, 0, "-", "direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[107, 1, 1, "", "DirectRBConfiguration"], [108, 1, 1, "", "DirectRandomizedBenchmarking"], [109, 5, 1, "", "direct_rb_analysis"], [110, 5, 1, "", "generate_drb_circuits"], [111, 5, 1, "", "generate_fixed_depth_parallel_drb_circuits"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration": [[107, 3, 1, "", "benchmark"], [107, 3, 1, "", "clifford_sqg_probabilities"], [107, 3, 1, "", "densities_2q_gates"], [107, 3, 1, "", "depths"], [107, 3, 1, "", "is_eplg"], [107, 3, 1, "", "model_config"], [107, 3, 1, "", "num_circuit_samples"], [107, 3, 1, "", "parallel_execution"], [107, 3, 1, "", "qiskit_optim_level"], [107, 3, 1, "", "qubits_array"], [107, 3, 1, "", "routing_method"], [107, 3, 1, "", "shots"], [107, 3, 1, "", "sqg_gate_ensembles"], [107, 3, 1, "", "two_qubit_gate_ensembles"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking": [[108, 2, 1, "", "add_all_meta_to_dataset"], [108, 2, 1, "", "analysis_function"], [108, 2, 1, "", "assign_inputs_to_qubits"], [108, 2, 1, "", "execute"], [108, 2, 1, "", "submit_single_drb_job"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[113, 0, 0, "-", "eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[114, 1, 1, "", "EPLGBenchmark"], [115, 1, 1, "", "EPLGConfiguration"], [116, 5, 1, "", "eplg_analysis"], [117, 5, 1, "", "plot_layered_fidelities_graph"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark": [[114, 2, 1, "", "add_all_meta_to_dataset"], [114, 2, 1, "", "analysis_function"], [114, 2, 1, "", "execute"], [114, 2, 1, "", "validate_custom_qubits_array"], [114, 2, 1, "", "validate_random_chain_inputs"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration": [[115, 3, 1, "", "calibration_url"], [115, 3, 1, "", "chain_length"], [115, 3, 1, "", "chain_path_samples"], [115, 3, 1, "", "custom_qubits_array"], [115, 3, 1, "", "drb_circuit_samples"], [115, 3, 1, "", "drb_depths"], [115, 3, 1, "", "max_hamiltonian_path_tries"], [115, 3, 1, "", "model_config"], [115, 3, 1, "", "num_disjoint_layers"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[119, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[120, 1, 1, "", "InterleavedRBConfiguration"], [121, 1, 1, "", "InterleavedRandomizedBenchmarking"], [122, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[120, 3, 1, "", "interleaved_gate"], [120, 3, 1, "", "interleaved_gate_params"], [120, 3, 1, "", "model_config"], [120, 3, 1, "", "num_circuit_samples"], [120, 3, 1, "", "parallel_execution"], [120, 3, 1, "", "qubits_array"], [120, 3, 1, "", "sequence_lengths"], [120, 3, 1, "", "shots"], [120, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[121, 2, 1, "", "add_all_circuits_to_dataset"], [121, 2, 1, "", "add_all_meta_to_dataset"], [121, 2, 1, "", "analysis_function"], [121, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[124, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[125, 1, 1, "", "MirrorRBConfiguration"], [126, 1, 1, "", "MirrorRandomizedBenchmarking"], [127, 5, 1, "", "compute_polarizations"], [128, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [129, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [130, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [131, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[125, 3, 1, "", "benchmark"], [125, 3, 1, "", "clifford_sqg_probability"], [125, 3, 1, "", "density_2q_gates"], [125, 3, 1, "", "depths_array"], [125, 3, 1, "", "model_config"], [125, 3, 1, "", "num_circuit_samples"], [125, 3, 1, "", "num_pauli_samples"], [125, 3, 1, "", "qiskit_optim_level"], [125, 3, 1, "", "qubits_array"], [125, 3, 1, "", "routing_method"], [125, 3, 1, "", "shots"], [125, 3, 1, "", "simulation_method"], [125, 3, 1, "", "sqg_gate_ensemble"], [125, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[126, 2, 1, "", "add_all_meta_to_dataset"], [126, 2, 1, "", "analysis_function"], [126, 2, 1, "", "execute"], [126, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[133, 5, 1, "", "create_multi_dataset_params"], [134, 5, 1, "", "eval_func_single_dataset"], [135, 5, 1, "", "get_param_names_from_func_signature"], [136, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[138, 5, 1, "", "compute_inverse_clifford"], [139, 5, 1, "", "edge_grab"], [140, 5, 1, "", "estimate_survival_probabilities"], [141, 5, 1, "", "exponential_rb"], [142, 5, 1, "", "fit_decay_lmfit"], [143, 5, 1, "", "generate_all_rb_circuits"], [144, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [145, 5, 1, "", "generate_random_clifford_seq_circuits"], [146, 5, 1, "", "get_survival_probabilities"], [147, 5, 1, "", "import_native_gate_cliffords"], [148, 5, 1, "", "lmfit_minimizer"], [149, 5, 1, "", "plot_rb_decay"], [150, 5, 1, "", "relabel_qubits_array_from_zero"], [151, 5, 1, "", "submit_parallel_rb_job"], [152, 5, 1, "", "submit_sequential_rb_jobs"], [153, 5, 1, "", "survival_probabilities_parallel"], [154, 5, 1, "", "validate_irb_gate"], [155, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[157, 1, 1, "", "M3IQM"], [158, 5, 1, "", "apply_readout_error_mitigation"], [159, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[157, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[161, 5, 1, "", "bootstrap_counts"], [162, 5, 1, "", "count_2q_layers"], [163, 5, 1, "", "count_native_gates"], [164, 5, 1, "", "extract_fidelities"], [165, 5, 1, "", "generate_state_tomography_circuits"], [166, 5, 1, "", "get_Pauli_expectation"], [167, 5, 1, "", "get_active_qubits"], [168, 5, 1, "", "get_iqm_backend"], [169, 5, 1, "", "get_measurement_mapping"], [170, 5, 1, "", "get_neighbors_of_edges"], [171, 5, 1, "", "get_tomography_matrix"], [172, 5, 1, "", "marginal_distribution"], [173, 5, 1, "", "median_with_uncertainty"], [174, 5, 1, "", "perform_backend_transpilation"], [175, 5, 1, "", "random_hamiltonian_path"], [176, 5, 1, "", "reduce_to_active_qubits"], [177, 5, 1, "", "remove_directed_duplicates_to_list"], [178, 5, 1, "", "retrieve_all_counts"], [179, 5, 1, "", "retrieve_all_job_metadata"], [180, 5, 1, "", "set_coupling_map"], [181, 5, 1, "", "sort_batches_by_final_layout"], [182, 5, 1, "", "split_into_disjoint_pairs"], [183, 5, 1, "", "split_sequence_in_chunks"], [184, 5, 1, "", "submit_execute"], [185, 5, 1, "", "timeit"], [186, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[188, 1, 1, "", "GraphPositions"], [189, 5, 1, "", "draw_graph_edges"], [190, 5, 1, "", "evaluate_hamiltonian_paths"], [191, 5, 1, "", "plot_layout_fidelity_graph"], [192, 5, 1, "", "rx_to_nx_graph"]], "iqm.benchmarks.utils_plots.GraphPositions": [[188, 2, 1, "", "create_positions"], [188, 3, 1, "", "deneb_positions"], [188, 3, 1, "", "garnet_positions"], [188, 3, 1, "", "predefined_stations"]], "iqm.benchmarks.utils_shadows": [[194, 5, 1, "", "CUE"], [195, 5, 1, "", "get_local_shadow"], [196, 5, 1, "", "get_negativity"], [197, 5, 1, "", "local_shadow_tomography"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 208, 213, 214, 215, 217, 219], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 217, 219], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 203, 204, 206, 207], "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 210], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 203, 204, 208, 209], "ghzbenchmark": 40, "ghzconfigur": 41, "fidelity_analysi": 42, "fidelity_ghz_coher": 43, "fidelity_ghz_randomized_measur": 44, "generate_ghz_linear": 45, "generate_ghz_log_cruz": 46, "generate_ghz_log_moonei": 47, "generate_ghz_spanning_tre": 48, "generate_ghz_star": 49, "get_cx_map": 50, "get_edg": 51, "plot_fidel": 52, "graph_stat": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "graphstatebenchmark": 54, "graphstateconfigur": 55, "find_edges_with_disjoint_neighbor": 56, "generate_graph_st": 57, "generate_minimal_edge_lay": 58, "negativity_analysi": 59, "plot_density_matrix": 60, "plot_max_neg": 61, "plot_max_negativities_graph": 62, "shadow_tomography_analysi": 63, "state_tomography_analysi": 64, "update_pauli_expect": 65, "logging_config": 66, "optim": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "qscore": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 208, 214], "qscorebenchmark": 69, "qscoreconfigur": 70, "calculate_optimal_angles_for_qaoa_p1": 71, "compute_expectation_valu": 72, "create_objective_funct": 73, "cut_cost_funct": 74, "get_optimal_angl": 75, "is_success": [76, 96], "plot_approximation_ratio": 77, "qscore_analysi": 78, "run_qaoa": 79, "quantum_volum": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "clop": [81, 82, 83, 84, 85, 86, 203, 204, 206, 208], "clopsbenchmark": 82, "clopsconfigur": 83, "clops_analysi": 84, "plot_tim": 85, "retrieve_clops_elapsed_tim": 86, "quantumvolumebenchmark": 88, "quantumvolumeconfigur": 89, "compute_heavy_output_prob": 90, "cumulative_hop": 91, "cumulative_std": 92, "get_ideal_heavy_output": 93, "get_rem_hop": 94, "heavy_projector": 95, "plot_hop_threshold": 97, "qv_analysi": 98, "randomized_benchmark": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "clifford_rb": [100, 101, 102, 103, 104], "cliffordrbconfigur": 102, "cliffordrandomizedbenchmark": 103, "clifford_rb_analysi": 104, "direct_rb": [105, 106, 107, 108, 109, 110, 111], "directrbconfigur": 107, "directrandomizedbenchmark": 108, "direct_rb_analysi": 109, "generate_drb_circuit": 110, "generate_fixed_depth_parallel_drb_circuit": 111, "eplg": [112, 113, 114, 115, 116, 117, 207], "eplgbenchmark": 114, "eplgconfigur": 115, "eplg_analysi": 116, "plot_layered_fidelities_graph": 117, "interleaved_rb": [118, 119, 120, 121, 122], "interleavedrbconfigur": 120, "interleavedrandomizedbenchmark": 121, "interleaved_rb_analysi": 122, "mirror_rb": [123, 124, 125, 126, 127, 128, 129, 130, 131], "mirrorrbconfigur": 125, "mirrorrandomizedbenchmark": 126, "compute_polar": 127, "generate_fixed_depth_mrb_circuit": 128, "generate_pauli_dressed_mrb_circuit": 129, "list_to_numcircuit_times_numpauli_matrix": 130, "mrb_analysi": 131, "multi_lmfit": [132, 133, 134, 135, 136], "create_multi_dataset_param": 133, "eval_func_single_dataset": 134, "get_param_names_from_func_signatur": 135, "multi_dataset_residu": 136, "randomized_benchmarking_common": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "compute_inverse_clifford": 138, "edge_grab": 139, "estimate_survival_prob": 140, "exponential_rb": 141, "fit_decay_lmfit": 142, "generate_all_rb_circuit": 143, "generate_fixed_depth_parallel_rb_circuit": 144, "generate_random_clifford_seq_circuit": 145, "get_survival_prob": 146, "import_native_gate_clifford": 147, "lmfit_minim": 148, "plot_rb_decai": 149, "relabel_qubits_array_from_zero": 150, "submit_parallel_rb_job": 151, "submit_sequential_rb_job": 152, "survival_probabilities_parallel": 153, "validate_irb_g": 154, "validate_rb_qubit": 155, "readout_mitig": [156, 157, 158, 159], "m3iqm": 157, "apply_readout_error_mitig": 158, "readout_error_m3": 159, "util": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "bootstrap_count": 161, "count_2q_lay": 162, "count_native_g": 163, "extract_fidel": 164, "generate_state_tomography_circuit": 165, "get_pauli_expect": 166, "get_active_qubit": 167, "get_iqm_backend": 168, "get_measurement_map": 169, "get_neighbors_of_edg": 170, "get_tomography_matrix": 171, "marginal_distribut": 172, "median_with_uncertainti": 173, "perform_backend_transpil": 174, "random_hamiltonian_path": 175, "reduce_to_active_qubit": 176, "remove_directed_duplicates_to_list": 177, "retrieve_all_count": 178, "retrieve_all_job_metadata": 179, "set_coupling_map": 180, "sort_batches_by_final_layout": 181, "split_into_disjoint_pair": 182, "split_sequence_in_chunk": 183, "submit_execut": 184, "timeit": 185, "xrvariable_to_count": 186, "utils_plot": [187, 188, 189, 190, 191, 192], "graphposit": 188, "draw_graph_edg": 189, "evaluate_hamiltonian_path": 190, "plot_layout_fidelity_graph": 191, "rx_to_nx_graph": 192, "utils_shadow": [193, 194, 195, 196, 197], "cue": 194, "get_local_shadow": 195, "get_neg": 196, "local_shadow_tomographi": 197, "changelog": 198, "version": 198, "2": [198, 200], "36": 198, "35": 198, "34": 198, "33": 198, "32": 198, "31": 198, "30": 198, "29": 198, "28": 198, "27": 198, "26": 198, "25": 198, "24": 198, "23": 198, "22": 198, "21": 198, "20": 198, "19": 198, "18": 198, "17": 198, "16": 198, "15": 198, "14": 198, "13": 198, "12": 198, "11": 198, "10": 198, "9": 198, "8": 198, "7": 198, "6": 198, "5": 198, "4": 198, "3": 198, "1": 198, "0": 198, "develop": [199, 219], "qubit": [200, 210], "clifford": [200, 203, 205, 208], "group": 200, "decomposit": 200, "gener": [200, 206, 213, 215], "1q": [200, 212], "2q": [200, 212], "dump": 200, "pickl": 200, "file": 200, "load": 200, "count": 200, "element": 200, "A": 200, "wai": 200, "work": 200, "out": [200, 211], "invers": 200, "sequenc": 200, "design": 200, "condit": 200, "how": 201, "make": 201, "your": 201, "own": 201, "devic": 202, "spark": 203, "connect": [203, 204], "backend": [203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215], "state": [203, 204, 208, 209, 210], "fidel": [203, 204, 207, 208, 209], "quantum": [203, 204, 208, 215], "volum": [203, 204, 208, 215], "layer": [203, 204, 206, 207], "oper": [203, 204, 206], "per": [203, 204, 206, 207], "second": [203, 204, 206], "random": [203, 205, 207, 208, 212, 213], "interleav": [203, 208, 212], "irb": [203, 212], "q": [203, 204, 214], "score": [203, 204, 214], "summari": [203, 204, 208], "star": 204, "crb": 205, "choos": [205, 206, 207, 208, 210, 211, 212, 213, 214, 215], "defin": [205, 206, 207, 208, 210, 211, 212, 213, 214, 215], "set": [205, 206, 207, 208, 211, 213, 214, 215], "token": [205, 206, 207, 208, 213, 214, 215], "us": [205, 206, 207, 208, 210, 213, 214, 215, 219], "reson": [205, 206, 207, 208, 213, 214, 215], "configur": [205, 206, 207, 209, 210, 211, 212, 213, 214, 215], "run": [205, 206, 207, 209, 210, 212, 213, 214, 215], "experi": [205, 206, 207, 210, 211, 212, 213, 214, 215], "perform": [205, 206, 207, 210, 214, 215], "analysi": [205, 206, 207, 210, 214, 215], "list": [206, 213], "all": [206, 207, 210, 211, 213], "kei": [206, 213], "attribut": [206, 210, 213], "dataset": [206, 210, 213], "The": [206, 213], "observ": [206, 211, 213], "object": [206, 213], "contain": [206, 213], "result": [206, 209, 211, 212, 213], "plot": [206, 207, 210, 211, 213, 215], "error": 207, "gate": [207, 211, 212], "inspect": [207, 210], "final": [207, 211], "visual": 207, "select": 207, "drb": 207, "decai": 207, "sampl": [207, 210], "parallel": 207, "notebook": [208, 219], "mirror": [208, 213], "greenberg": 209, "horn": 209, "zeiling": 209, "definit": 209, "access": [209, 211], "graph": 210, "bipartit": 210, "displai": 210, "maximum": 210, "neg": 210, "pair": 210, "avail": 210, "If": 210, "tomographi": [210, 211], "bootstrap": 210, "bia": 210, "differ": 210, "between": 210, "each": 210, "mean": 210, "measur": 210, "some": 210, "particular": 210, "pauli": 210, "compress": 211, "gst": 211, "minim": 211, "execut": 211, "": 211, "examin": 211, "high": 211, "level": 211, "store": 211, "estim": 211, "further": 211, "process": 211, "creat": 211, "custom": 211, "check": 211, "matrix": 211, "correspond": 211, "pi": 211, "rotat": 211, "around": 211, "y": 211, "axi": 211, "analyz": [212, 213], "non": 212, "nativ": 212, "mrb": 213, "rb": 213, "qv": 215, "exampl": 216, "content": 217, "indic": 217, "tabl": 217, "licens": 218, "instal": 219, "latest": 219, "releas": 219, "option": 219, "depend": 219, "chang": 219, "character": 219, "physic": 219, "hardwar": 219, "jupyt": 219, "python": 219, "script": 219, "schedul": 219, "ci": 219, "cd": 219, "pipelin": 219}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[42, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[43, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[45, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[46, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[50, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[51, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[52, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[53, "module-iqm.benchmarks.entanglement.graph_states"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[54, "iqm-benchmarks-entanglement-graph-states-graphstatebenchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[55, "iqm-benchmarks-entanglement-graph-states-graphstateconfiguration"]], "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors": [[56, "iqm-benchmarks-entanglement-graph-states-find-edges-with-disjoint-neighbors"]], "iqm.benchmarks.entanglement.graph_states.generate_graph_state": [[57, "iqm-benchmarks-entanglement-graph-states-generate-graph-state"]], "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers": [[58, "iqm-benchmarks-entanglement-graph-states-generate-minimal-edge-layers"]], "iqm.benchmarks.entanglement.graph_states.negativity_analysis": [[59, "iqm-benchmarks-entanglement-graph-states-negativity-analysis"]], "iqm.benchmarks.entanglement.graph_states.plot_density_matrix": [[60, "iqm-benchmarks-entanglement-graph-states-plot-density-matrix"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities": [[61, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph": [[62, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities-graph"]], "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis": [[63, "iqm-benchmarks-entanglement-graph-states-shadow-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis": [[64, "iqm-benchmarks-entanglement-graph-states-state-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations": [[65, "iqm-benchmarks-entanglement-graph-states-update-pauli-expectations"]], "iqm.benchmarks.logging_config": [[66, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[67, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[68, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[69, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[70, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[71, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[72, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[73, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[74, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[75, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[76, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[77, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[78, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[79, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[80, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[81, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[82, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[83, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[84, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[85, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[86, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[87, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[88, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[89, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[90, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[91, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[92, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[93, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[94, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[95, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[96, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[97, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[98, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[99, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[100, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[101, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[102, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[103, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[104, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[105, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[106, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration": [[107, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-directrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking": [[108, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-directrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis": [[109, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-direct-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits": [[110, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-generate-drb-circuits"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits": [[111, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-generate-fixed-depth-parallel-drb-circuits"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[112, "module-iqm.benchmarks.randomized_benchmarking.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[113, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark": [[114, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplgbenchmark"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration": [[115, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplgconfiguration"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis": [[116, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplg-analysis"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph": [[117, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-plot-layered-fidelities-graph"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[118, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[119, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[120, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[121, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[122, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[123, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[124, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[125, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[126, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[127, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[128, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[129, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[130, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[131, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[132, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[133, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[134, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[135, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[136, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[137, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[138, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab": [[139, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[140, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[141, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[142, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[143, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[144, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[145, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[146, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[147, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[148, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[149, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[150, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[151, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[152, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[153, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[154, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[155, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[156, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[157, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[158, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[159, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[160, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[161, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[162, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[163, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[164, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.generate_state_tomography_circuits": [[165, "iqm-benchmarks-utils-generate-state-tomography-circuits"]], "iqm.benchmarks.utils.get_Pauli_expectation": [[166, "iqm-benchmarks-utils-get-pauli-expectation"]], "iqm.benchmarks.utils.get_active_qubits": [[167, "iqm-benchmarks-utils-get-active-qubits"]], "iqm.benchmarks.utils.get_iqm_backend": [[168, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.get_measurement_mapping": [[169, "iqm-benchmarks-utils-get-measurement-mapping"]], "iqm.benchmarks.utils.get_neighbors_of_edges": [[170, "iqm-benchmarks-utils-get-neighbors-of-edges"]], "iqm.benchmarks.utils.get_tomography_matrix": [[171, "iqm-benchmarks-utils-get-tomography-matrix"]], "iqm.benchmarks.utils.marginal_distribution": [[172, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.median_with_uncertainty": [[173, "iqm-benchmarks-utils-median-with-uncertainty"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[174, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.random_hamiltonian_path": [[175, "iqm-benchmarks-utils-random-hamiltonian-path"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[176, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.remove_directed_duplicates_to_list": [[177, "iqm-benchmarks-utils-remove-directed-duplicates-to-list"]], "iqm.benchmarks.utils.retrieve_all_counts": [[178, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[179, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[180, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[181, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.split_into_disjoint_pairs": [[182, "iqm-benchmarks-utils-split-into-disjoint-pairs"]], "iqm.benchmarks.utils.split_sequence_in_chunks": [[183, "iqm-benchmarks-utils-split-sequence-in-chunks"]], "iqm.benchmarks.utils.submit_execute": [[184, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[185, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[186, "iqm-benchmarks-utils-xrvariable-to-counts"]], "iqm.benchmarks.utils_plots": [[187, "module-iqm.benchmarks.utils_plots"]], "iqm.benchmarks.utils_plots.GraphPositions": [[188, "iqm-benchmarks-utils-plots-graphpositions"]], "iqm.benchmarks.utils_plots.draw_graph_edges": [[189, "iqm-benchmarks-utils-plots-draw-graph-edges"]], "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths": [[190, "iqm-benchmarks-utils-plots-evaluate-hamiltonian-paths"]], "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph": [[191, "iqm-benchmarks-utils-plots-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils_plots.rx_to_nx_graph": [[192, "iqm-benchmarks-utils-plots-rx-to-nx-graph"]], "iqm.benchmarks.utils_shadows": [[193, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.utils_shadows.CUE": [[194, "iqm-benchmarks-utils-shadows-cue"]], "iqm.benchmarks.utils_shadows.get_local_shadow": [[195, "iqm-benchmarks-utils-shadows-get-local-shadow"]], "iqm.benchmarks.utils_shadows.get_negativity": [[196, "iqm-benchmarks-utils-shadows-get-negativity"]], "iqm.benchmarks.utils_shadows.local_shadow_tomography": [[197, "iqm-benchmarks-utils-shadows-local-shadow-tomography"]], "Changelog": [[198, "changelog"]], "Version 2.36": [[198, "version-2-36"]], "Version 2.35": [[198, "version-2-35"]], "Version 2.34": [[198, "version-2-34"]], "Version 2.33": [[198, "version-2-33"]], "Version 2.32": [[198, "version-2-32"]], "Version 2.31": [[198, "version-2-31"]], "Version 2.30": [[198, "version-2-30"]], "Version 2.29": [[198, "version-2-29"]], "Version 2.28": [[198, "version-2-28"]], "Version 2.27": [[198, "version-2-27"]], "Version 2.26": [[198, "version-2-26"]], "Version 2.25": [[198, "version-2-25"]], "Version 2.24": [[198, "version-2-24"]], "Version 2.23": [[198, "version-2-23"]], "Version 2.22": [[198, "version-2-22"]], "Version 2.21": [[198, "version-2-21"]], "Version 2.20": [[198, "version-2-20"]], "Version 2.19": [[198, "version-2-19"]], "Version 2.18": [[198, "version-2-18"]], "Version 2.17": [[198, "version-2-17"]], "Version 2.16": [[198, "version-2-16"]], "Version 2.15": [[198, "version-2-15"]], "Version 2.14": [[198, "version-2-14"]], "Version 2.13": [[198, "version-2-13"]], "Version 2.12": [[198, "version-2-12"]], "Version 2.11": [[198, "version-2-11"]], "Version 2.10": [[198, "version-2-10"]], "Version 2.9": [[198, "version-2-9"]], "Version 2.8": [[198, "version-2-8"]], "Version 2.7": [[198, "version-2-7"]], "Version 2.6": [[198, "version-2-6"]], "Version 2.5": [[198, "version-2-5"]], "Version 2.4": [[198, "version-2-4"]], "Version 2.3": [[198, "version-2-3"]], "Version 2.2": [[198, "version-2-2"]], "Version 2.1": [[198, "version-2-1"]], "Version 2.0": [[198, "version-2-0"]], "Version 1.12": [[198, "version-1-12"]], "Version 1.11": [[198, "version-1-11"]], "Version 1.10": [[198, "version-1-10"]], "Version 1.9": [[198, "version-1-9"]], "Version 1.8": [[198, "version-1-8"]], "Version 1.7": [[198, "version-1-7"]], "Version 1.6": [[198, "version-1-6"]], "Version 1.5": [[198, "version-1-5"]], "Version 1.4": [[198, "version-1-4"]], "Version 1.3": [[198, "version-1-3"]], "Version 1.2": [[198, "version-1-2"]], "Version 1.1": [[198, "version-1-1"]], "Version 1.0": [[198, "version-1-0"]], "Development": [[199, "development"]], "2-Qubit Clifford Group Decomposition": [[200, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[200, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[200, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[200, "dump-on-a-pickle-file"]], "Load": [[200, "load"]], "Count elements": [[200, "count-elements"]], "2Q": [[200, "q"]], "1Q": [[200, "id1"]], "A way to work out the inverse of sequences": [[200, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[200, "design-condition"]], "How to make your own benchmark?": [[201, "how-to-make-your-own-benchmark"]], "Devices": [[202, "devices"]], "Benchmarking IQM Spark": [[203, "benchmarking-iqm-spark"]], "Connect to the backend": [[203, "connect-to-the-backend"], [204, "connect-to-the-backend"]], "GHZ state fidelity": [[203, "ghz-state-fidelity"], [204, "ghz-state-fidelity"], [208, "ghz-state-fidelity"]], "Quantum Volume": [[203, "quantum-volume"], [204, "quantum-volume"], [208, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[203, "circuit-layer-operations-per-second-clops"], [204, "circuit-layer-operations-per-second-clops"], [206, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[203, "clifford-randomized-benchmarking"], [208, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[203, "interleaved-randomized-benchmarking-irb"], [212, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[203, "q-score"], [204, "q-score"], [214, "q-score"]], "Summary": [[203, "summary"], [204, "summary"]], "Benchmarking IQM Star": [[204, "benchmarking-iqm-star"]], "Clifford Randomized Benchmarking (CRB)": [[205, "clifford-randomized-benchmarking-crb"]], "Choose (or define) a backend": [[205, "choose-or-define-a-backend"], [206, "choose-or-define-a-backend"], [207, "choose-or-define-a-backend"], [208, "choose-or-define-a-backend"], [210, "choose-or-define-a-backend"], [211, "choose-or-define-a-backend"], [212, "choose-or-define-a-backend"], [213, "choose-or-define-a-backend"], [214, "choose-or-define-a-backend"], [215, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[205, "set-iqm-token-if-using-resonance"], [207, "set-iqm-token-if-using-resonance"], [208, "set-iqm-token-if-using-resonance"], [213, "set-iqm-token-if-using-resonance"], [214, "set-iqm-token-if-using-resonance"], [215, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[205, "randomized-benchmarking-configuration"], [207, "randomized-benchmarking-configuration"]], "Run the experiment": [[205, "run-the-experiment"], [206, "run-the-experiment"], [207, "run-the-experiment"], [210, "run-the-experiment"], [213, "run-the-experiment"], [214, "run-the-experiment"], [215, "run-the-experiment"]], "Perform the analysis": [[205, "perform-the-analysis"], [207, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[206, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[206, "clops-configuration"]], "Perform Analysis": [[206, "perform-analysis"], [210, "perform-analysis"], [214, "perform-analysis"], [215, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[206, "list-all-the-keys-in-the-attributes-of-the-dataset"], [213, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[206, "the-observation-object-contains-the-benchmark-results"], [213, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[206, "generate-plots"], [213, "generate-plots"], [215, "generate-plots"]], "Error Per Layered Gate (EPLG)": [[207, "error-per-layered-gate-eplg"]], "Inspect all the fidelities and the final EPLG": [[207, "inspect-all-the-fidelities-and-the-final-eplg"]], "Plot a visualization of the selected layers and all the DRB decays": [[207, "plot-a-visualization-of-the-selected-layers-and-all-the-drb-decays"]], "Inspect a sample circuit (parallel DRB)": [[207, "inspect-a-sample-circuit-parallel-drb"]], "IQM Benchmarks: Summary Notebook": [[208, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[208, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[208, "mirror-randomized-benchmarking"]], "CLOPS": [[208, "clops"]], "QScore": [[208, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[209, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[209, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[209, "running-the-benchmark"]], "Accessing the results": [[209, "accessing-the-results"]], "Graph State Bipartite Entanglement": [[210, "graph-state-bipartite-entanglement"]], "Graph State Configuration": [[210, "graph-state-configuration"]], "Display the maximum negativity for all qubit pairs": [[210, "display-the-maximum-negativity-for-all-qubit-pairs"]], "Inspect the available plots": [[210, "inspect-the-available-plots"]], "Display all available dataset attributes": [[210, "display-all-available-dataset-attributes"]], "If using state tomography: inspect the bootstrap bias (difference between each bootstrap mean and the measured sample)": [[210, "if-using-state-tomography-inspect-the-bootstrap-bias-difference-between-each-bootstrap-mean-and-the-measured-sample"]], "Inspect a graph state for some particular Pauli measurement": [[210, "inspect-a-graph-state-for-some-particular-pauli-measurement"]], "Compressive Gate Set Tomography (GST)": [[211, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[211, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[211, "execute-gst-experiment-s"]], "Examine the results": [[211, "examine-the-results"]], "High level results stored at result.observations": [[211, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[211, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[211, "plots"]], "Creating a custom gate set": [[211, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[211, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[211, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[212, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[212, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[212, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[212, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[212, "id1"]], "Run the experiment - 2Q gate IRB": [[212, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[212, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[212, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[213, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[213, "mirror-rb-configuration"]], "Analyze the results": [[213, "analyze-the-results"]], "Qscore Configuration": [[214, "qscore-configuration"]], "Quantum Volume (QV)": [[215, "quantum-volume-qv"]], "Quantum Volume Configuration": [[215, "quantum-volume-configuration"]], "Examples": [[216, "examples"]], "IQM Benchmarks": [[217, "iqm-benchmarks"], [219, "iqm-benchmarks"]], "Contents": [[217, "contents"]], "Indices and tables": [[217, "indices-and-tables"]], "License": [[218, "license"]], "Installation (latest release)": [[219, "installation-latest-release"]], "Optional dependencies": [[219, "optional-dependencies"]], "Development installation (latest changes)": [[219, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[219, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[219, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[219, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [53, "module-iqm.benchmarks.entanglement.graph_states"], [66, "module-iqm.benchmarks.logging_config"], [67, "module-iqm.benchmarks.optimization"], [68, "module-iqm.benchmarks.optimization.qscore"], [80, "module-iqm.benchmarks.quantum_volume"], [81, "module-iqm.benchmarks.quantum_volume.clops"], [87, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [99, "module-iqm.benchmarks.randomized_benchmarking"], [100, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [101, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [105, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"], [106, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"], [112, "module-iqm.benchmarks.randomized_benchmarking.eplg"], [113, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"], [118, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [119, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [123, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [124, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [132, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [137, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [156, "module-iqm.benchmarks.readout_mitigation"], [160, "module-iqm.benchmarks.utils"], [187, "module-iqm.benchmarks.utils_plots"], [193, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_circuits_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_circuits_per_batch"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_dd"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "parallel_execution (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.parallel_execution"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[53, "module-iqm.benchmarks.entanglement.graph_states"]], "graphstatebenchmark (class in iqm.benchmarks.entanglement.graph_states)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark static method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.execute"]], "generate_all_circuit_info_for_graph_state_benchmark() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.generate_all_circuit_info_for_graph_state_benchmark"]], "graphstateconfiguration (class in iqm.benchmarks.entanglement.graph_states)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration"]], "benchmark (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.benchmark"]], "model_config (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_config"]], "n_median_of_means (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_median_of_means"]], "n_random_unitaries (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_random_unitaries"]], "num_bootstraps (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.num_bootstraps"]], "qubits (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.qubits"]], "tomography (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.tomography"]], "find_edges_with_disjoint_neighbors() (in module iqm.benchmarks.entanglement.graph_states)": [[56, "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors"]], "generate_graph_state() (in module iqm.benchmarks.entanglement.graph_states)": [[57, "iqm.benchmarks.entanglement.graph_states.generate_graph_state"]], "generate_minimal_edge_layers() (in module iqm.benchmarks.entanglement.graph_states)": [[58, "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers"]], "negativity_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[59, "iqm.benchmarks.entanglement.graph_states.negativity_analysis"]], "plot_density_matrix() (in module iqm.benchmarks.entanglement.graph_states)": [[60, "iqm.benchmarks.entanglement.graph_states.plot_density_matrix"]], "plot_max_negativities() (in module iqm.benchmarks.entanglement.graph_states)": [[61, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities"]], "plot_max_negativities_graph() (in module iqm.benchmarks.entanglement.graph_states)": [[62, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph"]], "shadow_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[63, "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis"]], "state_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[64, "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis"]], "update_pauli_expectations() (in module iqm.benchmarks.entanglement.graph_states)": [[65, "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations"]], "iqm.benchmarks.logging_config": [[66, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[67, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[68, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[71, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[72, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[73, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[74, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[75, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[76, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[77, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[78, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[79, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[80, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[81, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[84, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[85, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[86, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[87, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[90, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[91, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[92, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[93, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[94, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[95, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[96, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[97, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[99, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[100, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[101, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[105, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[106, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"]], "directrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.benchmark"]], "clifford_sqg_probabilities (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.clifford_sqg_probabilities"]], "densities_2q_gates (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.densities_2q_gates"]], "depths (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.depths"]], "is_eplg (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.is_eplg"]], "model_config (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.parallel_execution"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.shots"]], "sqg_gate_ensembles (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.sqg_gate_ensembles"]], "two_qubit_gate_ensembles (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.two_qubit_gate_ensembles"]], "directrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[108, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking static method)": [[108, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.analysis_function"]], "assign_inputs_to_qubits() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.assign_inputs_to_qubits"]], "execute() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.execute"]], "submit_single_drb_job() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.submit_single_drb_job"]], "direct_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[109, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis"]], "generate_drb_circuits() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[110, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits"]], "generate_fixed_depth_parallel_drb_circuits() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[111, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[112, "module-iqm.benchmarks.randomized_benchmarking.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[113, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"]], "eplgbenchmark (class in iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[114, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[114, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark static method)": [[114, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[114, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.execute"]], "validate_custom_qubits_array() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[114, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.validate_custom_qubits_array"]], "validate_random_chain_inputs() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[114, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.validate_random_chain_inputs"]], "eplgconfiguration (class in iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration"]], "calibration_url (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.calibration_url"]], "chain_length (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.chain_length"]], "chain_path_samples (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.chain_path_samples"]], "custom_qubits_array (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.custom_qubits_array"]], "drb_circuit_samples (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.drb_circuit_samples"]], "drb_depths (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.drb_depths"]], "max_hamiltonian_path_tries (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.max_hamiltonian_path_tries"]], "model_config (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.model_config"]], "num_disjoint_layers (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[115, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.num_disjoint_layers"]], "eplg_analysis() (in module iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[116, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis"]], "plot_layered_fidelities_graph() (in module iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[117, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[118, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[119, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[120, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[121, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[121, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[121, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[121, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[121, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[122, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[123, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[124, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "clifford_sqg_probability (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.clifford_sqg_probability"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "simulation_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.simulation_method"]], "sqg_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.sqg_gate_ensemble"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[126, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[126, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[126, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[126, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[126, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[127, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[128, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[129, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[130, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[131, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[132, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[133, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[134, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[135, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[136, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[137, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[138, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[139, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[140, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[141, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[142, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[143, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[144, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[145, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[146, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[147, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[148, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[149, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[150, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[151, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[152, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[153, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[154, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[155, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[156, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[157, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[157, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[158, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[159, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[160, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[161, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[162, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[163, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[164, "iqm.benchmarks.utils.extract_fidelities"]], "generate_state_tomography_circuits() (in module iqm.benchmarks.utils)": [[165, "iqm.benchmarks.utils.generate_state_tomography_circuits"]], "get_pauli_expectation() (in module iqm.benchmarks.utils)": [[166, "iqm.benchmarks.utils.get_Pauli_expectation"]], "get_active_qubits() (in module iqm.benchmarks.utils)": [[167, "iqm.benchmarks.utils.get_active_qubits"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[168, "iqm.benchmarks.utils.get_iqm_backend"]], "get_measurement_mapping() (in module iqm.benchmarks.utils)": [[169, "iqm.benchmarks.utils.get_measurement_mapping"]], "get_neighbors_of_edges() (in module iqm.benchmarks.utils)": [[170, "iqm.benchmarks.utils.get_neighbors_of_edges"]], "get_tomography_matrix() (in module iqm.benchmarks.utils)": [[171, "iqm.benchmarks.utils.get_tomography_matrix"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[172, "iqm.benchmarks.utils.marginal_distribution"]], "median_with_uncertainty() (in module iqm.benchmarks.utils)": [[173, "iqm.benchmarks.utils.median_with_uncertainty"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[174, "iqm.benchmarks.utils.perform_backend_transpilation"]], "random_hamiltonian_path() (in module iqm.benchmarks.utils)": [[175, "iqm.benchmarks.utils.random_hamiltonian_path"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[176, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "remove_directed_duplicates_to_list() (in module iqm.benchmarks.utils)": [[177, "iqm.benchmarks.utils.remove_directed_duplicates_to_list"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[178, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[179, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[180, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[181, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "split_into_disjoint_pairs() (in module iqm.benchmarks.utils)": [[182, "iqm.benchmarks.utils.split_into_disjoint_pairs"]], "split_sequence_in_chunks() (in module iqm.benchmarks.utils)": [[183, "iqm.benchmarks.utils.split_sequence_in_chunks"]], "submit_execute() (in module iqm.benchmarks.utils)": [[184, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[185, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[186, "iqm.benchmarks.utils.xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[187, "module-iqm.benchmarks.utils_plots"]], "graphpositions (class in iqm.benchmarks.utils_plots)": [[188, "iqm.benchmarks.utils_plots.GraphPositions"]], "create_positions() (iqm.benchmarks.utils_plots.graphpositions static method)": [[188, "iqm.benchmarks.utils_plots.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[188, "iqm.benchmarks.utils_plots.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[188, "iqm.benchmarks.utils_plots.GraphPositions.garnet_positions"]], "predefined_stations (iqm.benchmarks.utils_plots.graphpositions attribute)": [[188, "iqm.benchmarks.utils_plots.GraphPositions.predefined_stations"]], "draw_graph_edges() (in module iqm.benchmarks.utils_plots)": [[189, "iqm.benchmarks.utils_plots.draw_graph_edges"]], "evaluate_hamiltonian_paths() (in module iqm.benchmarks.utils_plots)": [[190, "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils_plots)": [[191, "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph"]], "rx_to_nx_graph() (in module iqm.benchmarks.utils_plots)": [[192, "iqm.benchmarks.utils_plots.rx_to_nx_graph"]], "iqm.benchmarks.utils_shadows": [[193, "module-iqm.benchmarks.utils_shadows"]], "cue() (in module iqm.benchmarks.utils_shadows)": [[194, "iqm.benchmarks.utils_shadows.CUE"]], "get_local_shadow() (in module iqm.benchmarks.utils_shadows)": [[195, "iqm.benchmarks.utils_shadows.get_local_shadow"]], "get_negativity() (in module iqm.benchmarks.utils_shadows)": [[196, "iqm.benchmarks.utils_shadows.get_negativity"]], "local_shadow_tomography() (in module iqm.benchmarks.utils_shadows)": [[197, "iqm.benchmarks.utils_shadows.local_shadow_tomography"]]}})